{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAI,WAAW;AAAK,IAAI,WAAW;AAAK,IAAI,aAAa;AAAM,IAAI,eAAe;AAAmB,OAAO,MAAM,CAAC,aAAa,GAAG;AAAmB;AAEtJ,iJAAiJ,GACjJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,GACA,IAAI,aAAa;AACjB,IAAI,YAAY,OAAO,MAAM,CAAC,MAAM;AACpC,SAAS,OAAO,UAAU;IACxB,UAAU,IAAI,CAAC,IAAI,EAAE;IACrB,IAAI,CAAC,GAAG,GAAG;QACT,MAAM,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW;QACvC,kBAAkB,EAAE;QACpB,mBAAmB,EAAE;QACrB,QAAQ,SAAU,EAAE;YAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,YAAa;QAChD;QACA,SAAS,SAAU,EAAE;YACnB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;QAC9B;IACF;IACA,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG;AACtC;AACA,OAAO,MAAM,CAAC,MAAM,GAAG;AACvB,OAAO,MAAM,CAAC,OAAO,GAAG,CAAC;AACzB,IAAI,cAAc,0BAA0B,KAAI,gBAAgB,mCAAmC,KAAI,eAAe,mCAAmC;AAEzJ,SAAS;IACP,OAAO,YAAa,CAAA,SAAS,QAAQ,CAAC,OAAO,CAAC,YAAY,IAAI,SAAS,QAAQ,GAAG,WAAU;AAC9F;AACA,SAAS;IACP,OAAO,YAAY,SAAS,IAAI;AAClC;AAEA,wCAAwC;AACxC,IAAI,SAAS,OAAO,MAAM,CAAC,MAAM;AACjC,IAAI,AAAC,CAAA,CAAC,UAAU,CAAC,OAAO,eAAe,AAAD,KAAM,OAAO,cAAc,aAAa;IAC5E,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,WAAW,cAAc,SAAS,QAAQ,IAAI,YAAY,CAAC,8BAA8B,IAAI,CAAC,YAAY,QAAQ;IACtH,IAAI;IACJ,IAAI;QACF,KAAK,IAAI,UAAU,WAAW,QAAQ,WAAY,CAAA,OAAO,MAAM,OAAO,EAAC,IAAK;IAC9E,EAAE,OAAO,KAAK;QACZ,IAAI,IAAI,OAAO,EACb,QAAQ,KAAK,CAAC,IAAI,OAAO;QAE3B,KAAK,CAAC;IACR;IAEA,wBAAwB;IACxB,IAAI,SAAS,OAAO,YAAY,cAAc,OAAO,WAAW,cAAc,OAAO,SAAS;IAE9F,oDAAoD;IACpD,0DAA0D;IAC1D,IAAI,oBAAoB;IACxB,IAAI;QACD,CAAA,GAAG,IAAG,EAAG;IACZ,EAAE,OAAO,KAAK;QACZ,oBAAoB,IAAI,KAAK,CAAC,QAAQ,CAAC;IACzC;IAEA,aAAa;IACb,GAAG,SAAS,GAAG,eAAgB,MAAM,wBAAwB,GAAzB;QAClC,gBAAgB,CAAC,EAAE,0BAA0B;QAC7C,iBAAiB,EAAE;QACnB,kBAAkB,EAAE;QACpB,IAAI,KAAK,eAAe,MAAK,KAAK,KAAK,CAAC,MAAM,IAAI;QAClD,IAAI,KAAK,IAAI,KAAK,UAAU;YAC1B,uCAAuC;YACvC,IAAI,OAAO,aAAa,aACtB;YAEF,IAAI,SAAS,KAAK,MAAM,CAAC,MAAM,CAAC,CAAA,QAAS,MAAM,OAAO,KAAK;YAE3D,oBAAoB;YACpB,IAAI,UAAU,OAAO,KAAK,CAAC,CAAA;gBACzB,OAAO,MAAM,IAAI,KAAK,SAAS,MAAM,IAAI,KAAK,QAAQ,eAAe,OAAO,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,MAAM,YAAY;YACvH;YACA,IAAI,SAAS;gBACX,QAAQ,KAAK;gBAEb,yEAAyE;gBACzE,IAAI,OAAO,WAAW,eAAe,OAAO,gBAAgB,aAC1D,OAAO,aAAa,CAAC,IAAI,YAAY;gBAEvC,MAAM,gBAAgB;gBAEtB,0BAA0B;gBAC1B,IAAI,kBAAkB,CAAC,EAAE,0BAA0B;gBACnD,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,MAAM,EAAE,IAAK;oBAC/C,IAAI,KAAK,eAAe,CAAC,EAAE,CAAC,EAAE;oBAC9B,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE;wBACxB,WAAW,eAAe,CAAC,EAAE,CAAC,EAAE,EAAE;wBAClC,eAAe,CAAC,GAAG,GAAG;oBACxB;gBACF;gBAEA,8FAA8F;gBAC9F,kBAAkB,CAAC;gBACnB,IAAK,IAAI,IAAI,GAAG,IAAI,eAAe,MAAM,EAAE,IAAK;oBAC9C,IAAI,KAAK,cAAc,CAAC,EAAE,CAAC,EAAE;oBAC7B,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE;wBACxB,UAAU,cAAc,CAAC,EAAE,CAAC,EAAE,EAAE;wBAChC,eAAe,CAAC,GAAG,GAAG;oBACxB;gBACF;YACF,OAAO;QACT;QACA,IAAI,KAAK,IAAI,KAAK,SAAS;YACzB,+BAA+B;YAC/B,KAAK,IAAI,kBAAkB,KAAK,WAAW,CAAC,IAAI,CAAE;gBAChD,IAAI,QAAQ,eAAe,SAAS,GAAG,eAAe,SAAS,GAAG,eAAe,KAAK;gBACtF,QAAQ,KAAK,CAAC,4BAAkB,eAAe,OAAO,GAAG,OAAO,QAAQ,SAAS,eAAe,KAAK,CAAC,IAAI,CAAC;YAC7G;YACA,IAAI,OAAO,aAAa,aAAa;gBACnC,gCAAgC;gBAChC;gBACA,IAAI,UAAU,mBAAmB,KAAK,WAAW,CAAC,IAAI;gBACtD,aAAa;gBACb,SAAS,IAAI,CAAC,WAAW,CAAC;YAC5B;QACF;IACF;IACA,GAAG,OAAO,GAAG,SAAU,CAAC;QACtB,IAAI,EAAE,OAAO,EACX,QAAQ,KAAK,CAAC,EAAE,OAAO;IAE3B;IACA,GAAG,OAAO,GAAG;QACX,QAAQ,IAAI,CAAC;IACf;AACF;AACA,SAAS;IACP,IAAI,UAAU,SAAS,cAAc,CAAC;IACtC,IAAI,SAAS;QACX,QAAQ,MAAM;QACd,QAAQ,GAAG,CAAC;IACd;AACF;AACA,SAAS,mBAAmB,WAAW;IACrC,IAAI,UAAU,SAAS,aAAa,CAAC;IACrC,QAAQ,EAAE,GAAG;IACb,IAAI,YAAY;IAChB,KAAK,IAAI,cAAc,YAAa;QAClC,IAAI,QAAQ,WAAW,MAAM,CAAC,MAAM,GAAG,WAAW,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG;YAClE,OAAO,CAAC,EAAE,EAAE;sCACoB,EAAE,mBAAmB,MAAM,QAAQ,EAAE,2FAA2F,EAAE,MAAM,QAAQ,CAAC;AACvL,EAAE,MAAM,IAAI,CAAC,CAAC;QACV,GAAG,MAAM,WAAW,KAAK;QACzB,aAAa,CAAC;;;oBAGL,EAAE,WAAW,OAAO,CAAC;;aAErB,EAAE,MAAM;;UAEX,EAAE,WAAW,KAAK,CAAC,GAAG,CAAC,CAAA,OAAQ,uBAAa,OAAO,UAAU,IAAI,CAAC,IAAI;;QAExE,EAAE,WAAW,aAAa,GAAG,CAAC,8CAAuC,EAAE,WAAW,aAAa,CAAC,sCAAsC,CAAC,GAAG,GAAG;;IAEjJ,CAAC;IACH;IACA,aAAa;IACb,QAAQ,SAAS,GAAG;IACpB,OAAO;AACT;AACA,SAAS;IACP,IAAI,YAAY,UACd,SAAS,MAAM;SACV,IAAI,UAAU,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,MAAM,EAC1D,OAAO,OAAO,CAAC,MAAM;AAEzB;AACA,SAAS,WAAW,MAAM,EAAE,EAAE,EAAE,mCAAmC;IACjE,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH,OAAO,EAAE;IAEX,IAAI,UAAU,EAAE;IAChB,IAAI,GAAG,GAAG;IACV,IAAK,KAAK,QACR,IAAK,KAAK,OAAO,CAAC,EAAE,CAAC,EAAE,CAAE;QACvB,MAAM,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QACtB,IAAI,QAAQ,MAAM,MAAM,OAAO,CAAC,QAAQ,GAAG,CAAC,IAAI,MAAM,GAAG,EAAE,KAAK,IAC9D,QAAQ,IAAI,CAAC;YAAC;YAAQ;SAAE;IAE5B;IAEF,IAAI,OAAO,MAAM,EACf,UAAU,QAAQ,MAAM,CAAC,WAAW,OAAO,MAAM,EAAE;IAErD,OAAO;AACT;AACA,SAAS,WAAW,IAAI;IACtB,IAAI,OAAO,KAAK,YAAY,CAAC;IAC7B,IAAI,CAAC,MACH;IAEF,IAAI,UAAU,KAAK,SAAS;IAC5B,QAAQ,MAAM,GAAG;QACf,IAAI,KAAK,UAAU,KAAK,MACtB,aAAa;QACb,KAAK,UAAU,CAAC,WAAW,CAAC;IAEhC;IACA,QAAQ,YAAY,CAAC,QACrB,aAAa;IACb,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,KAAK,GAAG;IACnC,aAAa;IACb,KAAK,UAAU,CAAC,YAAY,CAAC,SAAS,KAAK,WAAW;AACxD;AACA,IAAI,aAAa;AACjB,SAAS;IACP,IAAI,YACF;IAEF,aAAa,WAAW;QACtB,IAAI,QAAQ,SAAS,gBAAgB,CAAC;QACtC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,gCAAgC;YAChC,IAAI,KAAK,WAAW,MAAK,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC;YAC/C,IAAI,WAAW;YACf,IAAI,sBAAsB,aAAa,cAAc,IAAI,OAAO,mDAAmD,WAAW,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC,WAAW,MAAM;YACzK,IAAI,WAAW,gBAAgB,IAAI,CAAC,SAAS,KAAK,OAAO,CAAC,SAAS,MAAM,MAAM,KAAK,CAAC;YACrF,IAAI,CAAC,UACH,WAAW,KAAK,CAAC,EAAE;QAEvB;QACA,aAAa;IACf,GAAG;AACL;AACA,SAAS,YAAY,KAAK;IACxB,IAAI,MAAM,IAAI,KAAK,MAAM;QACvB,IAAI,OAAO,aAAa,aAAa;YACnC,IAAI,SAAS,SAAS,aAAa,CAAC;YACpC,OAAO,GAAG,GAAG,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;YACzC,IAAI,MAAM,YAAY,KAAK,YACzB,OAAO,IAAI,GAAG;YAEhB,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,IAAI;gBACJ,OAAO,MAAM,GAAG,IAAM,QAAQ;gBAC9B,OAAO,OAAO,GAAG;gBAChB,CAAA,iBAAiB,SAAS,IAAI,AAAD,MAAO,QAAQ,mBAAmB,KAAK,KAAK,eAAe,WAAW,CAAC;YACvG;QACF,OAAO,IAAI,OAAO,kBAAkB,YAAY;YAC9C,iBAAiB;YACjB,IAAI,MAAM,YAAY,KAAK,YACzB,OAAO,OAAmB,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;iBAEtD,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,IAAI;oBACF,cAA0B,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;oBACtD;gBACF,EAAE,OAAO,KAAK;oBACZ,OAAO;gBACT;YACF;QAEJ;IACF;AACF;AACA,eAAe,gBAAgB,MAAM;IACnC,OAAO,eAAe,GAAG,OAAO,MAAM,CAAC;IACvC,IAAI;IACJ,IAAI;QACF,kEAAkE;QAClE,gEAAgE;QAChE,gEAAgE;QAChE,mDAAmD;QACnD,iDAAiD;QACjD,mDAAmD;QACnD,IAAI,CAAC,mBAAmB;YACtB,IAAI,WAAW,OAAO,GAAG,CAAC,CAAA;gBACxB,IAAI;gBACJ,OAAO,AAAC,CAAA,eAAe,YAAY,MAAK,MAAO,QAAQ,iBAAiB,KAAK,IAAI,KAAK,IAAI,aAAa,KAAK,CAAC,CAAA;oBAC3G,oBAAoB;oBACpB,IAAI,UAAU,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,WAAW,GAAG,gBAAgB,IAAI,KAAK,OAAO,4BAA4B,eAAe,kBAAkB,0BAA0B;wBAClL,OAAO,OAAO,CAAC,MAAM;wBACrB;oBACF;oBACA,MAAM;gBACR;YACF;YACA,kBAAkB,MAAM,QAAQ,GAAG,CAAC;QACtC;QACA,OAAO,OAAO,CAAC,SAAU,KAAK;YAC5B,SAAS,OAAO,MAAM,CAAC,IAAI,EAAE;QAC/B;IACF,SAAU;QACR,OAAO,OAAO,eAAe;QAC7B,IAAI,iBACF,gBAAgB,OAAO,CAAC,CAAA;YACtB,IAAI,QAAQ;gBACV,IAAI;gBACH,CAAA,kBAAkB,SAAS,IAAI,AAAD,MAAO,QAAQ,oBAAoB,KAAK,KAAK,gBAAgB,WAAW,CAAC;YAC1G;QACF;IAEJ;AACF;AACA,SAAS,SAAS,OAAO,kBAAkB,GAAnB,EAAuB,MAAM,cAAc,GAAf;IAClD,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,MAAM,IAAI,KAAK,OACjB;SACK,IAAI,MAAM,IAAI,KAAK,MAAM;QAC9B,IAAI,OAAO,MAAM,YAAY,CAAC,OAAO,aAAa,CAAC;QACnD,IAAI,MAAM;YACR,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;gBACrB,iEAAiE;gBACjE,oHAAoH;gBACpH,IAAI,UAAU,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE;gBAClC,IAAK,IAAI,OAAO,QACd,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,EAAE;oBAC5C,IAAI,KAAK,OAAO,CAAC,IAAI;oBACrB,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;oBAC7C,IAAI,QAAQ,MAAM,KAAK,GACrB,UAAU,OAAO,MAAM,CAAC,IAAI,EAAE;gBAElC;YAEJ;YACA,IAAI,mBAGF,AAFA,4DAA4D;YAC5D,+CAA+C;YAC9C,CAAA,GAAG,IAAG,EAAG,MAAM,MAAM;YAGxB,aAAa;YACb,IAAI,KAAK,OAAO,eAAe,CAAC,MAAM,EAAE,CAAC;YACzC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG;gBAAC;gBAAI;aAAK;QAChC,OAAO,IAAI,OAAO,MAAM,EACtB,SAAS,OAAO,MAAM,EAAE;IAE5B;AACF;AACA,SAAS,UAAU,MAAM,EAAE,EAAE;IAC3B,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,OAAO,CAAC,GAAG,EAAE;QACf,8EAA8E;QAC9E,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,EAAE;QACzB,IAAI,UAAU,EAAE;QAChB,IAAK,IAAI,OAAO,KAAM;YACpB,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI;YACtD,IAAI,QAAQ,MAAM,KAAK,GACrB,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI;QAE1B;QAEA,sGAAsG;QACtG,OAAO,OAAO,CAAC,GAAG;QAClB,OAAO,OAAO,KAAK,CAAC,GAAG;QAEvB,0BAA0B;QAC1B,QAAQ,OAAO,CAAC,CAAA;YACd,UAAU,OAAO,MAAM,CAAC,IAAI,EAAE;QAChC;IACF,OAAO,IAAI,OAAO,MAAM,EACtB,UAAU,OAAO,MAAM,EAAE;AAE7B;AACA,SAAS,eAAe,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ,EAAgB,aAAa,uCAAuC,GAAxC;IACjF,IAAI,kBAAkB,QAAQ,IAAI,eAChC,OAAO;IAGT,uGAAuG;IACvG,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;IAC7C,IAAI,WAAW;IACf,MAAO,QAAQ,MAAM,GAAG,EAAG;QACzB,IAAI,IAAI,QAAQ,KAAK;QACrB,IAAI,IAAI,kBAAkB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE;QACtC,IAAI,GACF,+EAA+E;QAC/E,WAAW;aACN;YACL,yDAAyD;YACzD,IAAI,IAAI,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;YAC3C,IAAI,EAAE,MAAM,KAAK,GAAG;gBAClB,kFAAkF;gBAClF,WAAW;gBACX;YACF;YACA,QAAQ,IAAI,IAAI;QAClB;IACF;IACA,OAAO;AACT;AACA,SAAS,kBAAkB,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ,EAAgB,aAAa,uCAAuC,GAAxC;IACpF,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,gBAAgB,CAAC,YAAY,CAAC,OAAO,aAAa,CAAC,EAAE;QACvD,2EAA2E;QAC3E,yEAAyE;QACzE,IAAI,CAAC,OAAO,MAAM,EAChB,OAAO;QAET,OAAO,eAAe,OAAO,MAAM,EAAE,IAAI;IAC3C;IACA,IAAI,aAAa,CAAC,GAAG,EACnB,OAAO;IAET,aAAa,CAAC,GAAG,GAAG;IACpB,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,gBAAgB,IAAI,CAAC;QAAC;QAAQ;KAAG;IACjC,IAAI,CAAC,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAAE;QAC/D,eAAe,IAAI,CAAC;YAAC;YAAQ;SAAG;QAChC,OAAO;IACT;AACF;AACA,SAAS,WAAW,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ;IACjD,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,OAAO,OAAO,CAAC,GAAG,GAAG,CAAC;IACtB,IAAI,UAAU,OAAO,GAAG,EACtB,OAAO,GAAG,CAAC,IAAI,GAAG,OAAO,OAAO,CAAC,GAAG;IAEtC,IAAI,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,iBAAiB,CAAC,MAAM,EAC7D,OAAO,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAU,EAAE;QAC/C,GAAG,OAAO,OAAO,CAAC,GAAG;IACvB;IAEF,OAAO,OAAO,KAAK,CAAC,GAAG;AACzB;AACA,SAAS,UAAU,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ;IAChD,sBAAsB;IACtB,OAAO;IAEP,6DAA6D;IAC7D,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,IAAI,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAC5D,OAAO,GAAG,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAU,EAAE;QAC9C,IAAI,qBAAqB,GAAG;YAC1B,OAAO,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;QACxC;QACA,IAAI,sBAAsB,eAAe,MAAM,EAAE;YAC/C,mBAAmB,OAAO,CAAC,SAAU,CAAC;gBACpC,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;YACvB;YAEA,+BAA+B;YAC/B,eAAe,IAAI,CAAC,KAAK,CAAC,gBAAgB;QAC5C;IACF;AAEJ;;;AChfA;AACA;AACA;;;;ACDA;AAYA;;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI,WAAW;AAEf,MAAM,QAAQ;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD,CAAC,GAAG,CAAC,CAAA,GAAA,sBAAgB,AAAD;AAErB,CAAA,GAAA,oBAAI,AAAD,EAAE,KAAK,CAAC,CAAC;IACV,MAAM,MAAM,CAAA,GAAA,0BAAmB,AAAD;IAC9B,MAAM,KAAK,QAAQ,IAAI,GAAI,CAAA,YAAY,QAAQ,IAAI,AAAD;IAClD,WAAW,QAAQ,IAAI;IAEvB,CAAA,GAAA,WAAI,AAAD,EAAE;IACL,CAAA,GAAA,oBAAS,AAAD,EAAE,GAAG,CAAC,CAAC,SAAW,OAAO,MAAM,CAAC;IACxC,CAAA,GAAA,oBAAS,AAAD,EAAE,MAAM,CAAC,GAAG,CAAA,GAAA,oBAAS,AAAD,EAAE,MAAM,KAAK,CAAA,GAAA,oBAAS,AAAD,EAAE,MAAM,CAAC,CAAC,IAAM,EAAE,KAAK;IAExE,CAAA,GAAA,oBAAI,AAAD,EAAE,KAAK,CAAC;QACT,OAAO;YAAC;YAAG;YAAG;YAAG;SAAE;IACrB;IAEA,MAAM,cAA8B;QAClC;YACE;gBAAC;gBAAG;gBAAG;aAAE;YACT;gBAAC;gBAAG;gBAAG;aAAE;SACV;QACD;YACE;gBAAC;gBAAG;gBAAG;aAAE;YACT;gBAAC;gBAAG;gBAAG;aAAE;SACV;QACD;YACE;gBAAC;gBAAK;gBAAK;aAAE;YACb;gBAAC;gBAAG;gBAAK;aAAE;SACZ;QACD;YACE;gBAAC;gBAAK;gBAAK;aAAE;YACb;gBAAC;gBAAG;gBAAK;aAAE;SACZ;QACD;YACE;gBAAC;gBAAG;gBAAK;aAAE;YACX;gBAAC;gBAAK;gBAAG;aAAE;SACZ;QACD;YACE;gBAAC;gBAAG;gBAAG;aAAE;YACT;gBAAC;gBAAG;gBAAG;aAAE;SACV;KACF;IAED,MAAM,IAAI,CAAA,GAAA,YAAK,AAAD,EAAE,KAAK,GAAG,IAAI,CAAA,GAAA,YAAK,AAAD,EAAE,KAAK;IACvC,MAAM,SAAiB;QACrB;YAAC;YAAM,IAAI,KAAM,KAAM;SAAE;QACzB;YAAC;YAAK,IAAI,KAAM,KAAM;SAAE;KACzB;IACD,MAAM,cAAc;WAAI,WAAW,CAAC,EAAE;KAAC;IACvC,IAAI,CAAC,CAAA,GAAA,YAAK,AAAD,EAAE,KAAK,EAAE;QAChB,OAAO,IAAI,CAAC,CAAA,GAAA,YAAK,AAAD,EAAE,IAAI,CAAC,GAAG;QAC1B,YAAY,IAAI,CAAC;YAAC;YAAK;YAAK;SAAE;IAChC;IACA,CAAA,GAAA,gBAAQ,AAAD,EAAE;QACP,aAAa;YAAC;YAAG;SAAG;QACpB,WAAW;QACX,OAAO;QACP;QACA;IACF;IAEA,CAAA,GAAA,YAAK,AAAD,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;QACvB;YAAC,CAAA,GAAA,oBAAY,AAAD;YAAG,CAAA,GAAA,qBAAa,AAAD;YAAG,CAAA,GAAA,qBAAa,AAAD;SAAE,CAAC,EAAE,UAAU,CAAC,CAAC;YACzD,aAAa,EAAE,GAAG;YAClB,UAAU,EAAE,QAAQ,GAAG,CAAA,GAAA,YAAK,AAAD,EAAE,QAAQ;YACrC,WAAW,EAAE,EAAE,GAAG;YAClB,OAAO,AAAC,MAAM,EAAE,YAAY,GAAI;YAChC,WAAW;YACX,OAAO,EAAE,KAAK;QAChB;QACA,CAAA,GAAA,YAAK,AAAD,EAAE,cAAc,IAClB,CAAA,GAAA,kBAAU,AAAD,EAAE;YACT,aAAa,EAAE,GAAG;YAClB,OAAO,EAAE,YAAY,GAAG;YACxB,WAAW;YACX,OAAO,EAAE,QAAQ,GAAG;gBAAC;gBAAG;gBAAG;aAAE,GAAG;gBAAC;gBAAK;gBAAK;aAAI;QACjD;IACJ;IAEA,CAAA,GAAA,YAAK,AAAD,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QACnB,CAAA,GAAA,gBAAQ,AAAD,EAAE;YACP,aAAa,EAAE,GAAG;YAClB,OAAO;YACP,WAAW;YACX,WAAW,CAAA,GAAA,YAAK,AAAD,EAAE,QAAQ,GAAG,IAAI,CAAA,GAAA,SAAG,AAAD,EAAE,GAAG,MAAM,CAAA,GAAA,SAAG,AAAD,EAAE,EAAE,IAAI,EAAE,OAAO,KAAK;YACrE,OAAO;gBAAC;gBAAK;gBAAG;aAAE;QACpB;QACC,CAAA,EAAE,IAAI,GAAG,MAAM,CAAA,GAAA,gBAAQ,AAAD,IAAI,CAAA,GAAA,eAAO,AAAD,CAAA,EAAG;YAClC,aAAa,EAAE,GAAG;YAClB,OAAO;YACP,WAAW;YACX,OAAO;gBAAC;gBAAG;gBAAG;aAAE;QAClB;QACA,CAAA,GAAA,kBAAU,AAAD,EAAE;YACT,aAAa,EAAE,GAAG;YAClB,OAAO,EAAE,YAAY,GAAG;YACxB,WAAW;YACX,OAAO;gBAAC;gBAAK;gBAAG;aAAE;QACpB;IACF;IACA,CAAA,GAAA,YAAK,AAAD,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;QACpB,CAAA,GAAA,gBAAQ,AAAD,EAAE;YACP,aAAa,EAAE,GAAG;YAClB,UAAU,CAAC,CAAA,GAAA,YAAK,AAAD,EAAE,QAAQ;YACzB,WAAW,CAAC,CAAA,GAAA,YAAK,AAAD,EAAE,QAAQ,GAAG;YAE7B,OAAO;YACP,WAAW;YACX,OAAO;gBAAC;gBAAG;gBAAG;aAAE;QAClB;QACA,CAAA,GAAA,gBAAQ,AAAD,EAAE;YACP,aAAa,EAAE,GAAG;YAClB,UAAU,CAAC,CAAA,GAAA,YAAK,AAAD,EAAE,QAAQ,GAAG;YAC5B,WAAW,CAAC,CAAA,GAAA,YAAK,AAAD,EAAE,QAAQ;YAC1B,OAAO;YACP,WAAW;YACX,OAAO;gBAAC;gBAAG;gBAAG;aAAE;QAClB;QACC,CAAA,CAAA,GAAA,0BAAmB,AAAD,MAAM,MAAM,CAAA,GAAA,eAAO,AAAD,IAAI,CAAA,GAAA,gBAAQ,AAAD,CAAA,EAAG;YACjD,aAAa,EAAE,GAAG;YAClB,OAAO;YACP,WAAW;YACX,OAAO;gBAAC;gBAAG;gBAAG;aAAE;QAClB;QACA,MAAM,KAAK,EAAE,aAAa;QAC1B,IAAI,KAAK,KACP,SAAS;QACT,CAAA,GAAA,gBAAQ,AAAD,EAAE;YACP,aAAa,EAAE,GAAG;YAClB,WAAW,EAAE,UAAU;YACvB,OAAO;YACP,WAAW;YACX,OAAO;gBAAC;gBAAG;gBAAG;aAAE;QAClB;aACK,IAAI,IAAI;YACb,cAAc;YAEd,mBAAmB;YACnB,CAAA,GAAA,gBAAQ,AAAD,EAAE;gBACP,aAAa,EAAE,GAAG;gBAClB,WAAW,EAAE,UAAU;gBACvB,OAAO;gBACP,WAAW,AAAC,CAAA,IAAI,EAAC,IAAK;gBACtB,OAAO;oBAAC;oBAAI;oBAAI;iBAAG;YACrB;YACA,mBAAmB;YACnB,CAAA,GAAA,gBAAQ,AAAD,EAAE;gBACP,aAAa,EAAE,GAAG;gBAClB,WAAW,EAAE,UAAU;gBACvB,OAAO;gBACP,WAAW,KAAK;gBAChB,OAAO;oBAAC,KAAK;oBAAG,KAAK;oBAAG,KAAK;iBAAE;YACjC;QACF;IACF;IAEA;WAAI,CAAA,GAAA,YAAK,AAAD,EAAE,OAAO;WAAK,CAAA,GAAA,YAAK,AAAD,EAAE,OAAO;KAAC,CAAC,OAAO,CAAC,CAAC;QAC5C,CAAA,GAAA,gBAAQ,AAAD,EAAE;YACP,aAAa,EAAE,GAAG;YAClB,WAAW,EAAE,QAAQ;YACrB,OAAO;YACP,WAAW;YACX,OAAO;gBAAC;gBAAG;gBAAG;aAAE;QAClB;IACF;IACA,CAAA,GAAA,YAAK,AAAD,EAAE,YAAY,CAAC,OAAO,CAAC,CAAC;QAC1B,CAAA,GAAA,gBAAQ,AAAD,EAAE;YACP,aAAa,EAAE,GAAG;YAClB,WAAW,EAAE,QAAQ;YACrB,OAAO;YACP,WAAW;YACX,OAAO;gBAAC;gBAAG;gBAAG;aAAE;QAClB;IACF;IAEA,IAAI,CAAA,GAAA,YAAK,AAAD,EAAE,KAAK,EAAE;QACf,SAAS,eAAe,CAAS;YAC/B,MAAM,KAAK,CAAA,GAAA,SAAG,AAAD,IAAI;YAEjB,OAAO,MAAM,IACT,IACA,MAAM,IACN,IACA,CAAA,GAAA,SAAG,AAAD,EAAE,GAAG,MAAM,KAAK,CAAA,GAAA,SAAG,AAAD,EAAE,AAAC,CAAA,IAAI,KAAK,IAAG,IAAK,MAAM;QACpD;QACA,MAAM,YAAY,AAAC,CAAA,eAAe,OAAO,CAAA,IAAK;QAC9C,KAAK,CAAC,EAAE,CAAC;YACP,aAAa;gBAAC;gBAAG;aAAE;YACnB,OAAO;YACP,OAAO;gBAAC;gBAAG;gBAAG;aAAE;YAChB,WAAW,CAAA,GAAA,UAAI,AAAD,EAAE,KAAK,KAAK;YAC1B;QACF;QACA,KAAK,CAAC,EAAE,CAAC;YACP,aAAa;gBAAC;gBAAG;aAAE;YACnB,OAAO;YACP,OAAO;gBAAC;gBAAG;gBAAG;aAAE;YAChB,WAAW,CAAA,GAAA,UAAI,AAAD,EAAE,KAAK,KAAK;YAC1B;QACF;QACA,KAAK,CAAC,EAAE,CAAC;YACP,aAAa;gBAAC;gBAAG;aAAG;YACpB,OAAO;YACP,OAAO;gBAAC;gBAAK;gBAAK;aAAI;YACtB,WAAW;QACb;QACA,KAAK,CAAC,EAAE,CAAC;YACP,aAAa;gBAAC;gBAAG;aAAG;YACpB,OAAO;YACP,OAAO;gBAAC;gBAAK;gBAAK;aAAI;YACtB,WAAW;QACb;IACF,OAAO;QACL,CAAA,GAAA,YAAK,AAAD,EAAE,EAAE,IACN,CAAA,GAAA,kBAAU,AAAD,EAAE;YACT,aAAa,CAAA,GAAA,YAAK,AAAD,EAAE,IAAI,CAAC,GAAG;YAC3B,UAAU,CAAA,GAAA,YAAK,AAAD,EAAE,IAAI,CAAC,QAAQ,GACzB,CAAA,GAAA,SAAG,AAAD,EAAE,CAAA,GAAA,YAAK,AAAD,EAAE,IAAI,CAAC,QAAQ,GAAG,KAAK,KAAK,IACpC;YACJ,WAAW,CAAA,GAAA,YAAK,AAAD,EAAE,IAAI,CAAC,MAAM;YAC5B,WAAW,CAAA,GAAA,YAAK,AAAD,EAAE,IAAI,CAAC,KAAK;YAC3B,OAAO;YACP,WAAW,CAAA,GAAA,UAAI,AAAD,EAAE,KAAK,KAAK;YAC1B,OAAO;gBAAC;gBAAK;gBAAK;aAAE;QACtB;QACF,CAAA,GAAA,YAAK,AAAD,EAAE,cAAc,IAClB,CAAA,GAAA,kBAAU,AAAD,EAAE;YACT,aAAa,CAAA,GAAA,YAAK,AAAD,EAAE,IAAI,CAAC,GAAG;YAC3B,OAAO,CAAA,GAAA,YAAK,AAAD,EAAE,IAAI,CAAC,YAAY,GAAG;YACjC,WAAW;YACX,OAAO,CAAA,GAAA,YAAK,AAAD,EAAE,IAAI,CAAC,QAAQ,GAAG;gBAAC;gBAAG;gBAAG;aAAE,GAAG;gBAAC;gBAAK;gBAAK;aAAI;QAC1D;QACF,IAAI,CAAA,GAAA,YAAK,AAAD,EAAE,IAAI,CAAC,IAAI,EAAE;YACnB,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,YAAK,AAAD,EAAE,IAAI;YAChC,MAAM,EAAE,UAAU,GAAG,EAAE,GAAG,CAAA,GAAA,YAAK,AAAD;YAC9B,MAAM,gBAAgB,IAAK,CAAA,MAAM,IAAG;YACpC,CAAA,GAAA,kBAAU,AAAD,EAAE;gBACT,aAAa;gBACb,OAAO,AAAC,OAAO,MAAO;gBACtB,WAAW;gBACX,OAAO;oBAAC;oBAAG;oBAAG;iBAAE;YAClB;YACA;gBAAC;gBAAK;gBAAK;gBAAK;aAAI,CAAC,OAAO,CAAC,CAAC;gBAC5B,CAAA,GAAA,kBAAU,AAAD,EAAE;oBACT,aAAa;oBACb,OAAO,AAAC,IAAK,CAAA,OAAO,GAAE,IAAM;oBAC5B,WAAW,gBAAgB;oBAC3B,OAAO;wBAAC,MAAM;wBAAG;wBAAG,MAAM;qBAAE;gBAC9B;YACF;QACF;IACF;IAEA,CAAA,GAAA,YAAK,AAAD,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,IAAI,EAAE;QACnC,MAAM,MAAM;QACZ,MAAM,gBAAgB,IAAK,CAAA,MAAM,IAAG;QACpC,CAAA,GAAA,kBAAU,AAAD,EAAE;YACT,aAAa;YACb,OAAO,AAAC,OAAO,MAAO;YACtB,WAAW;YACX,OAAO;gBAAC;gBAAG;gBAAG;aAAE;QAClB;QACA;YAAC;YAAK;YAAK;YAAK;SAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,CAAA,GAAA,kBAAU,AAAD,EAAE;gBACT,aAAa;gBACb,OAAO,AAAC,IAAK,CAAA,OAAO,GAAE,IAAM;gBAC5B,WAAW,gBAAgB;gBAC3B,OAAO;oBAAC,MAAM;oBAAG,MAAM;oBAAG;iBAAE;YAC9B;QACF;IACF;IAEA,CAAA,GAAA,YAAK,AAAD,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE;QACzB,MAAM,QAAkC;YAAC;YAAG;YAAG;SAAE;QACjD,CAAA,GAAA,gBAAQ,AAAD,EAAE;YACP,aAAa;YACb,UAAU,CAAA,GAAA,YAAK,AAAD,EAAE,QAAQ,GAAG;YAC3B,WAAW,CAAA,GAAA,YAAK,AAAD,EAAE,QAAQ,GAAG;YAC5B,OAAO;YACP,WAAW;YACX;QACF;QACA,CAAA,GAAA,kBAAU,AAAD,EAAE;YACT,aAAa;YACb,OAAO,IAAI;YACX,WAAW;YACX;QACF;QACA,KAAK,CAAC,GAAG,CAAC;YACR,aAAa;gBAAC,GAAG,CAAC,EAAE;gBAAE,GAAG,CAAC,EAAE,GAAG;aAAI;YACnC,OAAO;YACP,WAAW;YACX;QACF;IACF;IAEA,CAAA,GAAA,oBAAS,AAAD,EAAE,OAAO,CAAC,CAAC;QACjB,EAAE,MAAM;IACV;IACA,CAAA,GAAA,oBAAa,AAAD,KAAK,CAAA,GAAA,oBAAa,AAAD,EAAE,MAAM;IAErC,CAAA,GAAA,YAAK,AAAD,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QACnB,MAAM,EAAE,IAAI,CAAC,EAAE,GAAG;QAClB,MAAM,IAAI,CAAA,GAAA,SAAG,AAAD,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG;QAC3B,MAAM,IAAI,CAAA,GAAA,SAAG,AAAD,EAAE,GAAG,KAAK;QACtB,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YACb,aAAa,EAAE,GAAG;YAClB,OAAO,EAAE,KAAK,IAAI;gBAAC,IAAI;gBAAG,IAAI;gBAAG,IAAI;aAAE;YACvC,OAAO,EAAE,IAAI,IAAI;YACjB,WAAW;YACX,UAAU,IAAI;QAChB;IACF;IAEA,MAAM;IACN,IAAI,CAAC,CAAA,GAAA,YAAK,AAAD,EAAE,KAAK,EAAE;QAChB;YAAC;YAAI;YAAG;SAAE,CAAC,OAAO,CAAC,CAAC,GAAG;YACrB,MAAM,SAAS,CAAA,GAAA,YAAK,AAAD,EAAE,IAAI,CAAC,QAAQ,GAAG;YACrC,MAAM,MAAM,CAAC,UAAW,CAAA,CAAA,GAAA,YAAK,AAAD,EAAE,SAAS,CAAC,EAAE,GAAG,IAAI,IAAI,CAAA;YACrD,MAAM,QAAkC,SACpC;gBAAC;gBAAM;gBAAM;aAAK,GAClB,MACA;gBAAC;gBAAK;gBAAK;aAAI,GACf;gBAAC;gBAAK;gBAAK;aAAI;YACnB,CAAA,GAAA,gBAAQ,AAAD,EAAE;gBACP,aAAa;oBAAC,IAAI;oBAAG;iBAAK;gBAC1B,UAAU;gBACV,WAAW;gBACX,WAAW;gBACX,OAAO;gBACP,WAAW;gBACX;YACF;YACA,KAAK,CAAC,KAAK,EAAE,CAAC;gBACZ,aAAa;oBAAC,IAAI;oBAAG;iBAAK;gBAC1B,OAAO,CAAA,GAAA,UAAI,AAAD,EAAE,OAAO,QAAQ,CAAA,GAAA,SAAG,AAAD,EAAE,IAAI,KAAK,KAAK;gBAC7C,WAAW;gBACX;YACF;YACA,IAAI,CAAA,GAAA,YAAK,AAAD,EAAE,SAAS,CAAC,EAAE,GAAG,GAAG;gBAC1B,MAAM,QAAQ,KAAK,IAAI,CAAC,AAAC,CAAA,CAAA,GAAA,YAAK,AAAD,EAAE,SAAS,CAAC,EAAE,GAAG,GAAE,IAAK;gBACrD,CAAA,GAAA,oBAAc,AAAD,EAAE,KAAK,OAAO;oBACzB,aAAa;wBAAC,IAAI;wBAAG;qBAAK;oBAC1B,OAAO;oBACP,WAAW;oBACX,OAAO;wBAAC;wBAAG;wBAAG;qBAAE;gBAClB;YACF;QACF;QACA,CAAA,GAAA,kBAAU,AAAD,EAAE;YACT,aAAa;gBAAC;gBAAK;aAAG;YACtB,OAAO;YACP,WAAW;YACX,WAAW;YACX,WAAW;YACX,OAAO;gBAAC;gBAAK;gBAAK;aAAE;QACtB;QACA,CAAA,GAAA,oBAAc,AAAD,EAAE,CAAC,CAAC,EAAE,CAAA,GAAA,YAAK,AAAD,EAAE,EAAE,CAAC,CAAC,EAAE;YAC7B,aAAa;gBAAC;gBAAK;aAAG;YACtB,OAAO;YACP,WAAW;YACX,OAAO;gBAAC;gBAAG;gBAAG;aAAE;QAClB;QACA,CAAA,GAAA,oBAAc,AAAD,EAAE,KAAK,CAAA,GAAA,YAAK,AAAD,EAAE,KAAK,GAAG,IAAI;YACpC,aAAa;gBAAC;gBAAI;aAAG;YACrB,OAAO;YACP,WAAW;YACX,OAAO;gBAAC;gBAAG;gBAAG;aAAE;QAClB;QACA,CAAA,GAAA,oBAAc,AAAD,EAAE,YAAY,CAAA,GAAA,YAAK,AAAD,EAAE,KAAK,EAAE;YACtC,aAAa;gBAAC;gBAAI;aAAK;YACvB,OAAO;YACP,WAAW;YACX,OAAO;gBAAC;gBAAG;gBAAG;aAAE;QAClB;IACF;IAEA,IAAI,CAAA,GAAA,YAAK,AAAD,EAAE,GAAG,IAAI,CAAA,GAAA,YAAK,AAAD,EAAE,KAAK,IAAI,GAC9B,CAAA,GAAA,oBAAc,AAAD,EACX,sCACE,CAAA,GAAA,YAAK,AAAD,EAAE,KAAK,GAAG,KACd,uCACF;QACA,aAAa;YAAC;YAAG;SAAE;QACnB,OAAO;QACP,WAAW;QACX,OAAO;YAAC;YAAG;YAAG;SAAE;IAClB;IAEF,IAAI,CAAC,CAAA,GAAA,YAAK,AAAD,EAAE,KAAK,IAAI,CAAA,GAAA,YAAK,AAAD,EAAE,EAAE,IAAI,GAC9B,CAAA,GAAA,oBAAc,AAAD,EACX,gCACE,CAAA,GAAA,YAAK,AAAD,EAAE,KAAK,GAAG,KACd,wDACF;QACA,aAAa;YAAC;YAAG;SAAE;QACnB,OAAO;QACP,WAAW;QACX,OAAO;YAAC;YAAG;YAAG;SAAE;IAClB;AAEJ;;;;;AC/aA,qDAAgB;AA+HhB,sDAAgB;AAyChB,8CACE;AADF,kDAEE;AAFF,mDAGE;AAHF,mDAIE;AAJF,gDAKE;AALF,gDAME;AANF,8CAOE;AAPF,8CAQE;AARF,6CASE;AATF,8CAUE;AAhMF;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;AAOO,SAAS,gBAAgB,CAAS;IACvC,mBAAmB;IACnB,MAAM,iBAA6B,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,GAAK;YAChE,EAAE,KAAK,CAAC,EAAE;YACV,EAAE,KAAK,CAAC,EAAE;SACX;IACD,qBAAqB;IACrB,MAAM,WAAuB,eAAe,OAAO,CAAC,CAAC,OAAS;YAAC;YAAM;SAAK;IAE1E,qCAAqC;IACrC,MAAM,SAAqB,EAAE;IAC7B,MAAM,OAAiB,EAAE;IACzB,MAAM,WAAqB,EAAE;IAC7B,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,KAAK,EAAG;QAC3C,MAAM,IAAI;YAAC,QAAQ,CAAC,EAAE;YAAE,QAAQ,CAAC,IAAI,EAAE;SAAC;QACxC,MAAM,SAAS;YAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;YAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;YAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;SAAC;QACxE,OAAO,IAAI,CAAC,QAAQ,QAAQ,QAAQ;QACpC,KAAK,IAAI,CAAC,IAAI,GAAG,IAAI;QACrB,SAAS,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI;QAC5B,SAAS,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI;IAClC;IACA,OAAO;QACL,UAAU,CAAA,GAAA,oBAAI,AAAD,EAAE,MAAM,CAAC,SAAS,OAAO,CAAC,CAAC,IAAM;QAC9C,QAAQ,CAAA,GAAA,oBAAI,AAAD,EAAE,MAAM,CAAC,OAAO,OAAO,CAAC,CAAC,IAAM;QAC1C,MAAM,CAAA,GAAA,oBAAI,AAAD,EAAE,MAAM,CAAC;QAClB,UAAU,CAAA,GAAA,oBAAI,AAAD,EAAE,QAAQ,CAAC;IAC1B;AACF;AAEA,SAAS;IACP,MAAM,QAAQ;IACd,MAAM,QAAQ,EAAE;IAChB,MAAM,WAAW,EAAE;IACnB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,EAAE,EAAG;QAC9B,MAAM,QAAQ,AAAC,CAAA,GAAA,SAAG,AAAD,IAAI,IAAK;QAC1B,MAAM,IAAI,CAAC;YAAC,CAAA,GAAA,SAAG,AAAD,EAAE;YAAQ,CAAA,GAAA,SAAG,AAAD,EAAE;YAAQ;SAAE;QACtC,SAAS,IAAI,CAAC;YAAC;YAAG,IAAI;SAAE;IAC1B;IACA,QAAQ,CAAC,SAAS,MAAM,GAAG,EAAE,CAAC,EAAE,GAAG;IAEnC,OAAO;QACL;QACA;IACF;AACF;AAEA,SAAS;IACP,OAAO;QACL,OAAO;YACL;gBAAC;gBAAG;gBAAG;aAAE;YACT;gBAAC;gBAAG;gBAAG;aAAE;SACV;QACD,UAAU;YAAC;gBAAC;gBAAG;aAAE;SAAC;IACpB;AACF;AAEA,SAAS;IACP,MAAM,QAAoB,EAAE,EAC1B,WAAuB,EAAE;IAC3B,IAAK,IAAI,IAAI,MAAM,KAAK,KAAK,KAAK,IAChC,IAAK,IAAI,IAAI,GAAG,IAAI,CAAA,GAAA,SAAG,AAAD,GAAG,KAAK,IAAK;QACjC,MAAM,IAAI,CAAA,GAAA,UAAI,AAAD,EAAE,IAAI,IAAI;QACvB,MAAM,IAAI,CAAC;YAAC,CAAA,GAAA,SAAG,AAAD,EAAE,KAAK;YAAG;YAAG,CAAA,GAAA,SAAG,AAAD,EAAE,KAAK;SAAE;QACtC,MAAM,IAAI,CAAC;YAAC,CAAA,GAAA,SAAG,AAAD,EAAE,KAAM,CAAA,IAAI,GAAE;YAAI,IAAI;YAAK,CAAA,GAAA,SAAG,AAAD,EAAE,KAAM,CAAA,IAAI,GAAE;SAAG;QAC5D,MAAM,IAAI,MAAM,MAAM;QACtB,SAAS,IAAI,CAAC;YAAC,IAAI;YAAG,IAAI;SAAE;IAC9B;IAEF,OAAO;QAAE;QAAO;IAAS;AAC3B;AAEA,SAAS;IACP,OAAO;QACL,OAAO;YACL;gBAAC;gBAAI;gBAAG;aAAE;YACV;gBAAC;gBAAI;gBAAI;aAAE;YACX;gBAAC;gBAAG;gBAAI;aAAE;YACV;gBAAC;gBAAG;gBAAI;aAAE;YACV;gBAAC;gBAAG;gBAAG;aAAE;YACT;gBAAC;gBAAG;gBAAG;aAAE;YACT;gBAAC;gBAAG;gBAAG;aAAE;YACT;gBAAC;gBAAI;gBAAG;aAAE;YACV,MAAM;YACN;gBAAC;gBAAM;gBAAI;aAAE;YACb;gBAAC;gBAAM;gBAAG;aAAE;YACZ;gBAAC;gBAAK;gBAAG;aAAE;YACX;gBAAC;gBAAK;gBAAI;aAAE;SACb;QACD,UAAU;YACR;gBAAC;gBAAG;aAAE;YACN;gBAAC;gBAAG;aAAE;YACN;gBAAC;gBAAG;aAAE;YACN;gBAAC;gBAAG;aAAE;YACN;gBAAC;gBAAG;aAAE;YACN;gBAAC;gBAAG;aAAE;YACN;gBAAC;gBAAG;aAAE;YACN;gBAAC;gBAAG;aAAE;YACN,OAAO;YACP;gBAAC;gBAAG;aAAE;YACN;gBAAC;gBAAG;aAAG;YACP;gBAAC;gBAAI;aAAG;YACR;gBAAC;gBAAI;aAAE;SACR;IACH;AACF;AAIA,2CAA2C;AAC3C,CAAA,GAAA,0BAAW,AAAD,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG;QAAC,IAAI,CAAC,EAAE;QAAE,CAAC,IAAI,CAAC,EAAE;KAAC;IACxC,IAAI,CAAC,EAAE,IAAI;AACb;AACA,CAAA,GAAA,wBAAS,AAAD,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,OAAU,IAAI,CAAC,EAAE,IAAI;AAcvC,SAAS,iBACd,KAAqB,EACrB,KAAc;IAEd,OAAO,CAAA,GAAA,oBAAI,AAAD,EAAuB;cAC/B,CAAA,GAAA,UAAI,AAAD;cACH,CAAA,GAAA,UAAI,AAAD;QACH,WAAW;QACX,YAAY;YACV,UAAU,MAAM,QAAQ;YACxB,QAAQ,MAAM,MAAM;YACpB,MAAM,MAAM,IAAI;YAChB,MAAM;gBAAE,UAAU;oBAAC;iBAAE;YAAC;QACxB;QACA,UAAU,MAAM,QAAQ;QACxB,aAAa;QACb,OAAO,QAAQ,CAAC,SAAS,QAAU,QAAQ;QAC3C,UAAU;YACR,aAAa,CAAC,SAAS,QAAU,MAAM,WAAW;YAClD,UAAU,CAAC,SAAS,QAAU,MAAM,QAAQ,IAAI;YAChD,WAAW,CAAC,SAAS,QAAU,MAAM,SAAS,IAAI;YAClD,WAAW,CAAC,SAAS,QAAU,MAAM,SAAS,IAAI;YAClD,WAAW,CAAC,SAAS,QAAU,MAAM,SAAS,GAAG,QAAQ;YACzD,OAAO,CAAC,SAAS,QAAU,MAAM,KAAK,IAAI;YAC1C,OAAO,CAAC,SAAS,QAAU,MAAM,KAAK,IAAI;oBAAC;oBAAG;oBAAG;iBAAE;YACnD,SAAS,IAAM;QACjB;IACF;AACF;AAEA,MAAM,WAAW,iBAAiB,gBAAgB,CAAA,GAAA,wBAAS,AAAD;AAC1D,MAAM,eAAe,iBAAiB,gBAAgB,CAAA,GAAA,4BAAa,AAAD;AAClE,MAAM,gBAAgB,iBAAiB,gBAAgB,CAAA,GAAA,6BAAc,AAAD;AACpE,MAAM,gBAAgB,iBAAiB,gBAAgB,CAAA,GAAA,6BAAc,AAAD;AACpE,MAAM,aAAa,iBAAiB,gBAAgB,CAAA,GAAA,0BAAW,AAAD;AAC9D,MAAM,aAAa,iBAAiB,gBAAgB;AACpD,MAAM,WAAW,iBAAiB,gBAAgB;AAClD,MAAM,WAAW,iBAAiB,gBAAgB;AAClD,MAAM,UAAU,iBAAiB,gBAAgB;AACjD,MAAM,WAAW,iBAAiB,gBAAgB,YAAY;;;ACrL9D,+BAA+B;AAC/B,6BAA6B;AAC7B,uBAAuB;;;wCAKV;AAab,0CAAS,CAAA,GAAA,0BAAI,AAAD;AAAZ,0CAAe,CAAA,GAAA,0BAAI,AAAD;AAAlB,+CAAqB,CAAA,GAAA,yBAAS,AAAD;AAX7B,MAAM;AACN,+BAA+B;AAC/B,gCAAgC;AAChC,UAAU;AAEV,aAAa;AACb;;AACA,aAAa;AACb;;AACA,aAAa;AACb;;AAbA,MAAM,SAAS,SAAS,cAAc,CAAC;AAChC,MAAM,KAAK,OAAO,UAAU,CAAC;AAepC,MAAM,KAAK,GAAG,YAAY,CAAC,GAAG,aAAa;AAC3C,MAAM,KAAK,GAAG,YAAY,CAAC,GAAG,eAAe;AAC7C,MAAM,KAAK,GAAG,YAAY,CAAC,GAAG,eAAe;AAC7C,MAAM,QAAQ,GAAG,aAAa;AAC9B,MAAM,QAAQ,GAAG,aAAa;AAC9B,GAAG,YAAY,CAAC,IAAI,CAAA,GAAA,0BAAI,AAAD;AACvB,GAAG,YAAY,CAAC,IAAI,CAAA,GAAA,0BAAI,AAAD;AACvB,GAAG,YAAY,CAAC,IAAI,CAAA,GAAA,yBAAS,AAAD;AAC5B,GAAG,aAAa,CAAC;AACjB,GAAG,aAAa,CAAC;AACjB,GAAG,aAAa,CAAC;AACjB,GAAG,YAAY,CAAC,OAAO;AACvB,GAAG,YAAY,CAAC,OAAO;AACvB,GAAG,YAAY,CAAC,OAAO;AACvB,GAAG,YAAY,CAAC,OAAO;AACvB,GAAG,WAAW,CAAC;AACf,GAAG,WAAW,CAAC;AAEf,2BAA2B;AAC3B,YAAY;AACZ,UAAU;AACV,qBAAqB;AACrB,MAAM;AAEN,MAAM,cAAc,GAAG,iBAAiB,CAAC,OAAO;AAChD,MAAM,YAAY,GAAG,iBAAiB,CAAC,OAAO;AAC9C,MAAM,UAAU,GAAG,iBAAiB,CAAC,OAAO;AAC5C,MAAM,UAAU,GAAG,iBAAiB,CAAC,OAAO;AAE5C,SAAS,eAAe,CAAS;IAC/B,MAAM,IAAI,GAAG,YAAY;IACzB,GAAG,UAAU,CAAC,GAAG,YAAY,EAAE;IAC/B,GAAG,UAAU,CAAC,GAAG,YAAY,EAAE,GAAG,GAAG,WAAW;IAChD,OAAO;AACT;AAEA,SAAS,eAAe,IAAc;IACpC,MAAM,IAAI,GAAG,YAAY;IACzB,GAAG,UAAU,CAAC,GAAG,YAAY,EAAE;IAC/B,GAAG,UAAU,CAAC,GAAG,YAAY,EAAE,IAAI,aAAa,OAAO,GAAG,WAAW;IACrE,OAAO;AACT;AAEA,SAAS,OAAO,IAAI;IAClB,IAAI;IACJ,IAAI,MAAM,OAAO,CAAC,OAChB,MAAM,eAAe;SAChB,IAAI,KAAK,IAAI,EAClB,MAAM,eAAe,KAAK,IAAI;SAE9B,MAAM,eAAe,KAAK,MAAM;IAElC,OAAO;QACL;QACA,SAAQ,IAAc;YACpB,GAAG,UAAU,CAAC,GAAG,YAAY,EAAE;YAC/B,GAAG,aAAa,CACd,GAAG,YAAY,EACf,GACA,IAAI,aAAa,KAAK,OAAO,CAAC,CAAC,IAAM;QAEzC;IACF;AACF;AAIA,SAAS,SAAS,IAAc;IAC9B,MAAM,MAAM,GAAG,YAAY;IAC3B,GAAG,UAAU,CAAC,GAAG,oBAAoB,EAAE;IACvC,GAAG,UAAU,CACX,GAAG,oBAAoB,EACvB,IAAI,WAAW,KAAK,OAAO,CAAC,CAAC,IAAM,KACnC,GAAG,WAAW;IAEhB,OAAO;QACL,QAAQ;QACR,QAAQ,KAAK,MAAM;QACnB,SAAQ,IAAgB;YACtB,GAAG,UAAU,CAAC,GAAG,oBAAoB,EAAE;YACvC,GAAG,aAAa,CACd,GAAG,oBAAoB,EACvB,GACA,IAAI,WAAW,KAAK,OAAO,CAAC,CAAC,IAAM;QAEvC;IACF;AACF;AAEA,IAAI,eAAe;AACnB,SAAS,MAAM,EAAE;IACf,SAAS,QAAQ,WAAW;QAC1B,MAAM,QAAQ,cAAe,CAAA,gBAAgB,WAAU;QACvD,eAAe;QACf,MAAM,UAAU;YACd,MAAM,cAAc;QACtB;QACA,GAAG;QACH,OAAO,qBAAqB,CAAC;IAC/B;IACA,OAAO,qBAAqB,CAAC;AAC/B;AAEA,SAAS,MAAM,EAAE,KAAK,EAAmB;IACvC,GAAG,UAAU,IAAI;IACjB,GAAG,KAAK,CAAC,GAAG,gBAAgB,GAAG,GAAG,gBAAgB;AACpD;AAIA,MAAM,SAAS;AACf,MAAM,WAAW,IAAI,aAAa,IAAI;AACtC,MAAM,cAAc,IAAI,aAAa,IAAI;AAazC,SAAS,OAAmB,EAC1B,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,KAAK,EAwBN;IACC,OAAO,CAAC;QACN,IAAI,OAAO,MAAM,MAAM,GAAG,QAAQ;QAClC,GAAG,UAAU,CAAC;QACd,GAAG,uBAAuB,CAAC;QAC3B,GAAG,UAAU,CAAC,GAAG,YAAY,EAAE,WAAW,QAAQ,CAAC,GAAG;QACtD,GAAG,mBAAmB,CAAC,aAAa,GAAG,GAAG,KAAK,EAAE,OAAO,GAAG;QAE3D,GAAG,uBAAuB,CAAC;QAC3B,GAAG,UAAU,CAAC,GAAG,YAAY,EAAE,WAAW,MAAM,CAAC,GAAG;QACpD,GAAG,mBAAmB,CAAC,WAAW,GAAG,GAAG,KAAK,EAAE,OAAO,GAAG;QAEzD,GAAG,uBAAuB,CAAC;QAC3B,GAAG,UAAU,CAAC,GAAG,YAAY,EAAE,WAAW,IAAI,CAAC,GAAG;QAClD,GAAG,mBAAmB,CAAC,SAAS,GAAG,GAAG,KAAK,EAAE,OAAO,GAAG;QAEvD,IAAI,cAAc,WAAW,IAAI,EAAE;YACjC,GAAG,wBAAwB,CAAC;YAC5B,GAAG,cAAc,CAAC,SAAS,GAAG,GAAG,GAAG;QACtC,OAAO;YACL,GAAG,UAAU,CAAC,GAAG,YAAY,EAAE,WAAW,IAAI,CAAC,GAAG;YAClD,GAAG,mBAAmB,CAAC,SAAS,GAAG,GAAG,KAAK,EAAE,OAAO,GAAG;YACvD,GAAG,uBAAuB,CAAC;QAC7B;QAEA,GAAG,SAAS,CACV,GAAG,kBAAkB,CAAC,MAAM,aAC5B,SAAS,QAAQ,CAAC,GAAG;QAEvB,GAAG,SAAS,CACV,GAAG,kBAAkB,CAAC,MAAM,cAC5B,SAAS,SAAS,CAAC,GAAG;QAExB,GAAG,SAAS,CACV,GAAG,kBAAkB,CAAC,MAAM,cAC5B,SAAS,SAAS,CAAC,GAAG;QAExB,GAAG,UAAU,CACX,GAAG,kBAAkB,CAAC,MAAM,gBAC5B,SAAS,WAAW,CAAC,GAAG;QAE1B,GAAG,SAAS,CACV,GAAG,kBAAkB,CAAC,MAAM,cAC5B,SAAS,SAAS,CAAC,GAAG;QAExB,GAAG,SAAS,CACV,GAAG,kBAAkB,CAAC,MAAM,UAC5B,SAAS,KAAK,CAAC,GAAG;QAEpB,GAAG,UAAU,CACX,GAAG,kBAAkB,CAAC,MAAM,UAC5B,SAAS,KAAK,CAAC,GAAG;QAEpB,GAAG,SAAS,CACV,GAAG,kBAAkB,CAAC,MAAM,YAC5B,SAAS,OAAO,CAAC,GAAG;QAEtB,IAAI,MAAM,MAAM,EAAE;YAChB,SAAS,GAAG,CAAC,MAAM,MAAM,CAAC,IAAI;YAC9B,GAAG,UAAU,CAAC,GAAG,kBAAkB,CAAC,MAAM,WAAW;YACrD,YAAY,IAAI,CAAC;YACjB,YAAY,GAAG,CAAC,MAAM,WAAW,CAAC,IAAI;YACtC,GAAG,UAAU,CAAC,GAAG,kBAAkB,CAAC,MAAM,gBAAgB;QAC5D;QAEA,GAAG,OAAO,CAAC,GAAG,UAAU;QACxB,GAAG,UAAU,CAAC,GAAG,oBAAoB,EAAE,SAAS,MAAM;QACtD,GAAG,YAAY,CACb,GAAG,SAAS,EACZ,QAAQ,MAAM,GAAG,SAAS,SAAS,MAAM,EACzC,GAAG,cAAc,EACjB;QAEF,GAAG,uBAAuB,CAAC;IAC7B;AACF;AAEA,OAAO,MAAM,GAAG;AAChB,OAAO,QAAQ,GAAG;AAClB,OAAO,KAAK,GAAG;AACf,OAAO,KAAK,GAAG;kBACA;;;AChQf,OAAO,OAAO,GAAC;;;ACAf,OAAO,OAAO,GAAC;;;ACAf,OAAO,OAAO,GAAC;;;ACAf,QAAQ,cAAc,GAAG,SAAU,CAAC;IAClC,OAAO,KAAK,EAAE,UAAU,GAAG,IAAI;QAAC,SAAS;IAAC;AAC5C;AAEA,QAAQ,iBAAiB,GAAG,SAAU,CAAC;IACrC,OAAO,cAAc,CAAC,GAAG,cAAc;QAAC,OAAO;IAAI;AACrD;AAEA,QAAQ,SAAS,GAAG,SAAU,MAAM,EAAE,IAAI;IACxC,OAAO,IAAI,CAAC,QAAQ,OAAO,CAAC,SAAU,GAAG;QACvC,IAAI,QAAQ,aAAa,QAAQ,gBAAgB,KAAK,cAAc,CAAC,MACnE;QAGF,OAAO,cAAc,CAAC,MAAM,KAAK;YAC/B,YAAY;YACZ,KAAK;gBACH,OAAO,MAAM,CAAC,IAAI;YACpB;QACF;IACF;IAEA,OAAO;AACT;AAEA,QAAQ,MAAM,GAAG,SAAU,IAAI,EAAE,QAAQ,EAAE,GAAG;IAC5C,OAAO,cAAc,CAAC,MAAM,UAAU;QACpC,YAAY;QACZ,KAAK;IACP;AACF;;;AC9BA,OAAO,OAAO,GAAG,KAAK,KAAK,CAAC;;;ACA5B,OAAO,OAAO,GAAG,KAAK,KAAK,CAAC;;;ACA5B,OAAO,OAAO,GAAG,KAAK,KAAK,CAAC;;;ACA5B,OAAO,OAAO,GAAG,KAAK,KAAK,CAAC;;;ACA5B,OAAO,OAAO,GAAG,KAAK,KAAK,CAAC;;;;;ACY5B,yCACE;AADF,yCAEE;AAFF,4CAGE;AAHF,yCAIE;AAJF,yCAKE;AALF,yCAME;AANF,yCAOE;AAPF,wCAQE;AARF,0CASE;AATF,wCAUE;AAVF,wCAWE;AAXF,yCAYE;AAZF,0CAaE;AAbF,0CAcE;AA1BF,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;AAC5D,MAAM,KAAK,IAAM,WAAW;AAC5B,MAAM,KAAK,IAAM,WAAW;AAC5B,MAAM,MAAM,IAAM,WAAW,IAAI;AACjC,MAAM,KAAK,CAAC,IAAM,IAAI;AAEtB,MAAM,MAAM,IAAI,IAAI,QAAQ;AAC5B,SAAS,KAAK,CAAS,EAAE,CAAS,EAAE,CAAS;IAC3C,IAAI,IAAI,GAAG,IAAI,GAAG;IAClB,OAAO,IAAK,CAAA,IAAI,CAAA,IAAK,IAAI;AAC3B;;;;;AC4GA,WAAW;AAEX,iDAAgB;AAiDhB,iDAAgB;AAsChB,8CAAgB;AAsfhB,0CAAgB;AAWhB,mDAAS;AAoDT,2CAAS;AAAT,0CAAgB;AAnwBhB;AAQA;;AACA;AACA;AA6GO,SAAS,YAAY,OAAO,CAAC,CAAC;IACnC,MAAM,IAAI,CAAA,GAAA,YAAM,AAAD,MAAL;IACV,MAAM,IAAI,CAAA,GAAA,YAAM,AAAD,MAAL;IACV,MAAM,SAAS,CAAC,IAAI,CAAC;QACnB,KAAK;YAAC,CAAA,GAAA,SAAG,AAAD,EAAE,KAAK;YAAI,CAAA,GAAA,SAAG,AAAD,EAAE,KAAK;SAAE;QAC9B,KAAK;YAAC,CAAA,GAAA,SAAG,AAAD,EAAE,KAAK;YAAG,CAAA,GAAA,SAAG,AAAD,EAAE,KAAK;SAAE;QAC7B,UAAU;QACV,IAAI,CAAA,GAAA,YAAM,AAAD;QACT,OAAO;YAAC,MAAM,CAAA,GAAA,QAAE,AAAD;YAAK,MAAM,CAAA,GAAA,QAAE,AAAD;YAAK,MAAM,CAAA,GAAA,QAAE,AAAD;SAAI;QAC3C,cAAc;QACd,UAAU;YAAC;YAAG;SAAE;QAChB,YAAY;QACZ,GAAG,IAAI;IACT;AACF;AAEA,SAAS;IACP,OAAO;QACL,OAAO;QACP,OAAO;QACP,WAAW,EAAE;QACb,SAAS,EAAE;QACX,SAAS,EAAE;QACX,cAAc,EAAE;QAChB,UAAU;QACV,MAAM;YACJ,KAAK;gBAAC;gBAAG;aAAE;YACX,KAAK;gBAAC;gBAAG;aAAE;YACX,QAAQ;YACR,OAAO;YACP,cAAc;YACd,MAAM;YACN,UAAU;YACV,UAAU;QACZ;QACA,UAAU;QACV,QAAQ,EAAE;QACV,WAAW;YAAC;YAAG;YAAG;SAAE;QACpB,kBAAkB,EAAE;QACpB,OAAO,EAAE;QACT,QAAQ,EAAE;QACV,OAAO,EAAE;QACT,UAAU,EAAE;QACZ,KAAK;QACL,OAAO;QACP,OAAO;QACP,IAAI;IACN;AACF;AACO,SAAS;IACd,OAAO,MAAM,CAAC,OAAO;QACnB,GAAG,WAAW;QACd,OAAO;QACP,WAAW;YACT;gBACE,KAAK;oBAAC;oBAAK;iBAAE;gBACb,KAAK;oBAAC;oBAAG;iBAAE;gBACX,UAAU;gBACV,IAAI,CAAA,GAAA,YAAM,AAAD;gBACT,OAAO;oBAAC,MAAM,CAAA,GAAA,QAAE,AAAD;oBAAK,MAAM,CAAA,GAAA,QAAE,AAAD;oBAAK,MAAM,CAAA,GAAA,QAAE,AAAD;iBAAI;gBAC3C,cAAc;gBACd,UAAU,EAAE;gBACZ,YAAY;YACd;YACA;gBACE,KAAK;oBAAC;oBAAI;iBAAE;gBACZ,KAAK;oBAAC;oBAAG;iBAAE;gBACX,UAAU;gBACV,IAAI,CAAA,GAAA,YAAM,AAAD;gBACT,OAAO;oBAAC,MAAM,CAAA,GAAA,QAAE,AAAD;oBAAK,MAAM,CAAA,GAAA,QAAE,AAAD;oBAAK,MAAM,CAAA,GAAA,QAAE,AAAD;iBAAI;gBAC3C,cAAc;gBACd,UAAU,EAAE;gBACZ,YAAY;YACd;SACD;QACD,OAAO;YACL;gBACE,KAAK;oBAAC;oBAAG;iBAAG;gBACZ,KAAK;oBAAC;oBAAG;iBAAE;gBACX,MAAM;gBACN,cAAc;YAChB;SACD;QACD,KAAK;IACP;AACF;AAEO,SAAS,SAAS,IAAY,CAAC;IACpC,MAAM,KAAK,GAAG;IACd,MAAM,KAAK,GAAG;IACd,MAAM,SAAS,GAAG,EAAE;IACpB,MAAM,KAAK,GAAG,EAAE;IAChB,MAAM,MAAM,GAAG,EAAE;IACjB,MAAM,GAAG,GAAG;IACZ,MAAM,IAAI,CAAC,GAAG,GAAG;QAAC;QAAG;KAAE;IACvB,MAAM,IAAI,CAAC,GAAG,GAAG;QAAC;QAAG;KAAE;IACvB,MAAM,KAAK,CAAC,IAAI,CAAC;QACf,OAAO,IAAI;QACX,MAAM;QACN,KAAK;YAAC;YAAG;SAAE;IACb;IACA,MAAM,gBAAgB;QAAC;QAAG;QAAG;QAAG;QAAG;QAAG;KAAE,CAAC,EAAE;IAC3C,MAAM,iBAAiB;QAAC,EAAE;QAAE;YAAC;SAAI;QAAE;YAAC;SAAI;QAAE;YAAC;YAAK;SAAI;QAAE;YAAC;SAAI;QAAE;YAAC;SAAI;KAAC;IACnE,IAAK,IAAI,IAAI,GAAG,IAAI,eAAe,EAAE,EAAG;IACxC,IAAI,IAAI,GACN,MAAM,IAAI,GACP,IAAI,CAAC,GACL,GAAG,CAAC,CAAC,GAAG,IACP,YAAY;YACV,cAAc;YACd,UAAU;gBAAC;aAAE;YACb,YAAY;YACZ,KAAK,cAAc,CAAC,EAAE,CAAC,EAAE;YACzB,OAAO,cAAc,CAAC,EAAE,CAAC,EAAE,IAAI,MAAM;gBAAC;gBAAG;gBAAG;aAAE,GAAG;QACnD;AAER;AAEA,gBAAgB;AAEhB,MAAM,QAAgB;AACtB;AAEA,wBAAwB;AAExB,OAAO,MAAM,CAAC,OAAO,KAAK,KAAK,CAAC,eAAe,OAAO,CAAC,YAAY;AACnE,OAAO,cAAc,GAAG;IACtB,eAAe,OAAO,CAAC,SAAS,KAAK,SAAS,CAAC;AACjD;AAEA,OAAO;AAEP,SAAS,KAAK,EAAU;IACtB,IAAI,KAAK,GAAG;IACZ,MAAM,QAAQ,IAAI;IAClB,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,OAAO,CAAC,CAAC;QACjC,EAAE,IAAI,IAAI;QACV,OAAO,EAAE,IAAI,GAAG,IAAI;YAAC;SAAE,GAAG,EAAE;IAC9B;IACA,IAAI,MAAM,KAAK,EACb;IAGF,MAAM,IAAI,CAAC,QAAQ,GAAG;IACtB;WAAI,MAAM,SAAS;WAAK,MAAM,KAAK;WAAK,MAAM,MAAM;KAAC,CAAC,OAAO,CAAC,CAAC;QAC7D,KAAK,GAAG;QACR,aAAa;QACb,IAAI,EAAE,QAAQ,KAAK,WAAW,EAAE,QAAQ,IAAI;QAC5C,aAAa;QACb,IAAI,EAAE,IAAI,KAAK,WAAW,EAAE,IAAI,IAAI;QACpC,aAAa;QACb,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,IAAI;QAClC,EAAE,QAAQ,GAAG;QACb,IAAI,MAAM,IAAI,CAAC,QAAQ,KAAK,GAC1B,QAAQ,GAAG,MAAM,IAAI,EAAE,MAAM,IAAI,CAAC,YAAY;QAEhD,IAAI,MAAM,IAAI,CAAC,IAAI,EACjB,YAAY,GAAG,MAAM,IAAI,EAAE,MAAM,IAAI,CAAC,IAAI,GAAG,MAAM,QAAQ;QAE7D,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC;YACpB,YAAY,GAAG,GAAG,EAAE,IAAI,GAAG;QAC7B;IACF;IACA,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,CAAC;QACvC,KAAK,GAAG;QACR,QAAQ,MAAM,IAAI,EAAE,GAAG;QACvB,IAAI,EAAE,QAAQ,EAAE;YACd,MAAM,IAAI,CAAC,QAAQ,GAAG,OAAO,IAAI;YACjC;YACA,OAAO,EAAE;QACX;QACA,OAAO;YAAC;SAAE;IACZ;IAEA,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,CAAC;QACrC,KAAK,GAAG;QACR,EAAE,IAAI,IAAI;QACV,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC,EAAE,QAAQ,EAC3B,OAAO;YAAC;SAAE;QAEZ,OAAO,EAAE;IACX;IACA,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,CAAC;QACrC,KAAK,GAAG;QACR,EAAE,IAAI,IAAI;QACV,IAAI,EAAE,IAAI,GAAG,GACX,OAAO;YAAC;SAAE;aACL;YACL,MAAM,MAAM,CAAC,IAAI,CAAC;gBAChB,KAAK,EAAE,GAAG;gBACV,MAAM;gBACN,MAAM;YACR;YACA,OAAO,EAAE;QACX;IACF;IACA,MAAM,YAAY,CAAC,GAAG,CAAC,CAAC;QACtB,KAAK,GAAG;QACR,EAAE,IAAI,IAAI;IACZ;IAEA,sCAAsC;IACtC;WAAI,MAAM,OAAO;WAAK,MAAM,YAAY;KAAC,CAAC,OAAO,CAAC,CAAC;QACjD,MAAM,SAAS,CAAC,OAAO,CAAC,CAAC;YACvB,QAAQ,GAAG,GAAG;QAChB;IACF;IACA,MAAM,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB;eAAI,MAAM,KAAK;eAAK,MAAM,MAAM;SAAC,CAAC,OAAO,CAAC,CAAC;YACzC,QAAQ,GAAG,GAAG;QAChB;IACF;IACA,mBAAmB;IACnB,IAAI,MAAM,IAAI,CAAC,QAAQ,KAAK,GAC1B,MAAM,YAAY,CAAC,OAAO,CAAC,CAAC;QAC1B,QAAQ,MAAM,IAAI,EAAE,GAAG;IACzB;IAGF,MAAM,YAAY,GAAG,MAAM,YAAY,CAAC,OAAO,CAAC,CAAC;QAC/C,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC,EAAE,QAAQ,EAC3B,OAAO;YAAC;SAAE;QAEZ,IAAI,MAAM,IAAI,CAAC,QAAQ,EACrB,KAAK,EAAE,GAAG;QAEZ,OAAO,EAAE;IACX;IAEA,MAAM,SAAS,GAAG,MAAM,SAAS,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,EAAE,QAAQ,EACb,OAAO;YAAC;SAAE;QAEZ;QACA,KAAK,EAAE,GAAG;QACV,MAAM,WAAW;eAAI,EAAE,QAAQ;SAAC;QAChC,IAAI,CAAC,SAAS,MAAM,EAClB,OAAO,EAAE;QAEX,MAAM,IAAI,SAAS,KAAK;QACxB,IAAI,EAAE,GAAG,KAAK,KACZ,MAAM,KAAK,CAAC,IAAI,CAAC;YACf,KAAK;mBAAI,EAAE,GAAG;aAAC;YACf,KAAK;gBAAC,CAAA,GAAA,YAAM,AAAD;gBAAK,CAAA,GAAA,YAAM,AAAD;aAAI;YACzB,cAAc;YACd,MAAM;YACN,KAAK;QACP;QAEF,IAAI,EAAE,GAAG,KAAK,KACZ,MAAM,QAAQ,CAAC,IAAI,CAAC;YAClB,KAAK;mBAAI,EAAE,GAAG;aAAC;YACf,KAAK;gBAAC,CAAA,GAAA,YAAM,AAAD;gBAAK,CAAA,GAAA,YAAM,AAAD;aAAI;QAC3B;QAEF,IAAI,EAAE,GAAG,KAAK,KACZ,MAAM,MAAM,CAAC,IAAI,CAAC;YAChB,KAAK;mBAAI,EAAE,GAAG;aAAC;YACf,KAAK;gBAAC,CAAA,GAAA,YAAM,AAAD;gBAAK,CAAA,GAAA,YAAM,AAAD;aAAI;YACzB,KAAK;YACL,cAAc;YACd,MAAM,MAAM,KAAK,GAAG,IAAI,IAAI;YAC5B,YAAY;QACd;QAEF,OAAO,MAAM,GACV,IAAI,CAAC,GACL,GAAG,CAAC,CAAC;YACJ,MAAM,IAAI,CAAA,GAAA,YAAM,AAAD,MAAM;YACrB,IAAI;YACJ,MAAM,QAAQ;gBAAC;gBAAG;gBAAG;gBAAK;gBAAG;gBAAK;aAAI,CAAC,MAAM,KAAK,CAAC;YACnD,IAAI,EAAE,UAAU,KAAK,KAAK,CAAA,GAAA,YAAM,AAAD,MAAM,OAAO,MAAM;YAClD,OAAO;gBACL,KAAK;uBAAI,EAAE,GAAG;iBAAC;gBACf,KAAK;oBAAC,CAAA,GAAA,SAAG,AAAD,EAAE,KAAK;oBAAG,CAAA,GAAA,SAAG,AAAD,EAAE,KAAK;iBAAE;gBAC7B,UAAU;gBACV,IAAI,CAAA,GAAA,YAAM,AAAD;gBACT,OAAO,QAAQ,MAAM;oBAAC;oBAAG;oBAAG;iBAAE,GAAG;oBAAC,MAAM,CAAA,GAAA,QAAE,AAAD;oBAAK,MAAM,CAAA,GAAA,QAAE,AAAD;oBAAK,MAAM,CAAA,GAAA,QAAE,AAAD;iBAAI;gBACrE,cAAc,EAAE,YAAY,GAAG;gBAC/B,UAAU;uBAAI;iBAAS;gBACvB,YAAY,EAAE,UAAU,GAAG;gBAC3B;YACF;QACF;IACJ;IAEA,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,EAAE,QAAQ,IAAI,EAAE,GAAG,GAAG,GAAG;YAC3B,MAAM;YACN,KAAK,EAAE,GAAG;YACV,OAAO,EAAE;QACX;QACA,IAAI,EAAE,IAAI,GAAG,KAAK,CAAA,GAAA,0BAAmB,AAAD,MAAM,MAAM;YAC9C,KAAK,EAAE,GAAG;YACV,gBAAgB;YAChB,IAAK,IAAI,IAAI,GAAG,IAAI,CAAA,GAAA,SAAG,AAAD,GAAG,KAAK,CAAA,GAAA,SAAG,AAAD,IAAI,EAClC;gBAAC;gBAAI;aAAE,CAAC,GAAG,CAAC,CAAC,IACX,MAAM,YAAY,CAAC,IAAI,CAAC;oBACtB,MAAM;oBACN,KAAK;2BAAI,EAAE,GAAG;qBAAC;oBACf,KAAK;wBAAC,CAAA,GAAA,SAAG,AAAD,EAAE,KAAK;wBAAG,CAAA,GAAA,SAAG,AAAD,EAAE,KAAK;qBAAE;oBAC7B,UAAU;gBACZ;YAGJ,OAAO,EAAE;QACX;QACA,OAAO;YAAC;SAAE;IACZ;IAEA,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,EAAE,QAAQ,IAAI,EAAE,GAAG,GAAG,KAAK,EAAE,IAAI,KAAK,GAAG;YAC3C,MAAM,EAAE,GAAG,EAAE;YACb,OAAO,EAAE;QACX;QACA,IAAI,EAAE,QAAQ,IAAI,EAAE,GAAG,GAAG,GAAG;YAC3B,MAAM;YACN,WAAW;YACX,KAAK,EAAE,GAAG;YACV,EAAE,IAAI,IAAI;YACV,EAAE,GAAG,GAAG;gBAAC,CAAA,GAAA,SAAG,AAAD,MAAM;gBAAG,CAAA,GAAA,SAAG,AAAD,MAAM;aAAE;YAC9B,mBAAmB;YACnB,EAAE,UAAU,GAAG,AAAC,CAAA,IAAI,CAAA,GAAA,0BAAmB,AAAD,GAAE,IAAK;YAC7C,EAAE,aAAa,GAAG;YAClB,KAAK,EAAE,GAAG;YACV,2DAA2D;YAC3D,EAAE,GAAG,GAAG;QACV;QACA,EAAE,UAAU,IAAI;QAChB,IAAI,EAAE,UAAU,IAAI,KAAK,MAAM,EAAE,EAAE;YACjC,CAAA,GAAA,YAAK,AAAD;YACJ,EAAE,UAAU,GAAG,AAAC,CAAA,IAAI,CAAA,GAAA,0BAAmB,AAAD,GAAE,IAAK;YAC7C,EAAE,aAAa,GAAG;YAClB,EAAE,UAAU,GAAG,KAAK,KAAK,CACvB,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAC5B,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;QAEhC;QACA,EAAE,aAAa,GAAG,CAAA,GAAA,SAAG,AAAD,EAAE,GAAG,EAAE,aAAa,GAAG;QAC3C,IACE,EAAE,aAAa,GAAG,OAClB,EAAE,aAAa,IAAI,OACnB,CAAC,MAAM,IAAI,CAAC,QAAQ,IACpB,MAAM,EAAE,EACR;YACA,6BAA6B;YAC7B,MAAM,KAAK,CAAA,GAAA,SAAG,AAAD,EAAE,EAAE,UAAU,GACzB,KAAK,CAAA,GAAA,SAAG,AAAD,EAAE,EAAE,UAAU;YACvB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,EAAG;gBAC3B,MAAM,IAAU;oBAAC,EAAE,GAAG,CAAC,EAAE,GAAG,KAAK;oBAAG,EAAE,GAAG,CAAC,EAAE,GAAG,KAAK;iBAAE;gBACtD,QAAQ,MAAM,IAAI,EAAE;oBAAE,KAAK;gBAAE,GAAG;gBAChC,IAAI,MAAM,IAAI,CAAC,QAAQ,EAAE;oBACvB,KAAK,MAAM,IAAI,CAAC,GAAG;oBACnB;gBACF;YACF;QACF;QACA,IAAI,EAAE,UAAU,EAAE,OAAO;YAAC;SAAE;IAC9B;IAEA,WAAW,MAAM,IAAI,EAAE;IACvB;AACF;AAEA,IAAI,gBAAiC;AAErC,SAAS,WAAW,CAAQ,EAAE,EAAU;IACtC,MAAM,OAAO;IACb,MAAM,QAAQ;IACd,EAAE,KAAK,IAAI,AAAC,CAAA,CAAA,GAAA,qBAAK,AAAD,EAAE,KAAK,GAAG,CAAA,GAAA,qBAAK,AAAD,EAAE,IAAI,AAAD,IAAK,OAAO;IAC/C,IAAI,MAAM,EAAE,GAAG;QACb,IAAI,EAAE,QAAQ,EAAE;YACd,MAAM,KAAK,GAAG;YACd,IAAI,EAAE,MAAM,EAAE,IAAI,GAAG;gBACnB,MAAM,EAAE,GAAG,EAAE;gBACb;YACF;YACA,EAAE,QAAQ,GAAG;QACf,OACE,EAAE,QAAQ,GAAG,CAAA,GAAA,SAAG,AAAD,EAAE,GAAG,EAAE,QAAQ,GAAG;;IAIrC,MAAM,KAAK,CAAA,GAAA,SAAG,AAAD,EAAE,EAAE,KAAK,GACpB,KAAK,CAAA,GAAA,SAAG,AAAD,EAAE,EAAE,KAAK;IAElB,IAAI,MAAM,EAAE,GAAG,GAAG;QAChB,IAAI,CAAA,GAAA,qBAAK,AAAD,EAAE,MAAM,EAAE;YAChB,EAAE,GAAG,CAAC,EAAE,IAAI,QAAQ,KAAK;YACzB,EAAE,GAAG,CAAC,EAAE,IAAI,QAAQ,KAAK;QAC3B;QACA,EAAE,MAAM,IAAI,AAAC,CAAA,CAAA,GAAA,qBAAK,AAAD,EAAE,KAAK,GAAG,CAAA,GAAA,qBAAK,AAAD,EAAE,IAAI,AAAD,IAAK,KAAK;QAC9C,EAAE,GAAG,CAAC,EAAE,IAAI,CAAA,GAAA,SAAG,AAAD,EAAE,KAAK,KAAK;QAC1B,EAAE,GAAG,CAAC,EAAE,IAAI,CAAA,GAAA,SAAG,AAAD,EAAE,KAAK,KAAK;QAC1B,EAAE,MAAM,IAAI,CAAA,GAAA,SAAG,AAAD,EAAE,KAAK,KAAK;QAE1B,KAAK,GAAG;IACV;IAEA,IAAI,CAAC,eAAe,gBAAgB,CAAA,GAAA,sBAAW,AAAD;IAC9C,cAAc,GAAG,GAAG;QAAC,EAAE,GAAG,CAAC,EAAE,GAAG,KAAK;QAAK,EAAE,GAAG,CAAC,EAAE,GAAG,KAAK;KAAI;IAC9D,cAAc,GAAG,GAAG;QAAC,EAAE,GAAG,CAAC,EAAE,GAAG,KAAK;QAAI,EAAE,GAAG,CAAC,EAAE,GAAG,KAAK;KAAG;IAC5D,cAAc,QAAQ,GAAG;IACzB,cAAc,IAAI,GAAG,MAAM,EAAE,IAAI,CAAA,GAAA,qBAAK,AAAD,EAAE,MAAM,GAAG,OAAO;IACvD,cAAc,MAAM,CAAC;IAErB,IAAI,MAAM,EAAE,EACV,MAAM,gBAAgB,GAAG,MAAM,gBAAgB,CAAC,OAAO,CAAC,CAAC;QACvD,SAAS;QACT,IAAI,QAAQ,GACV,OAAO;YAAC;SAAM;aACT;YACL,IAAI,EAAE,QAAQ,GAAG,GACf,MAAM,OAAO,CAAC,IAAI,CAAC;gBACjB,MAAM;gBACN,KAAK;oBAAC,EAAE,GAAG,CAAC,EAAE,GAAG;oBAAI,EAAE,GAAG,CAAC,EAAE,GAAG;iBAAG;gBACnC,KAAK;oBAAC,KAAK,KAAK,EAAE,GAAG,CAAC,EAAE;oBAAE,KAAK,KAAK,EAAE,GAAG,CAAC,EAAE;iBAAC;gBAC7C,UAAU,EAAE,KAAK;YACnB;iBACK;gBACL,MAAM,OAAO,CAAC,IAAI,CAAC;oBACjB,MAAM;oBACN,KAAK;wBAAC,EAAE,GAAG,CAAC,EAAE,GAAG,KAAK,KAAK;wBAAK,EAAE,GAAG,CAAC,EAAE,GAAG,KAAK,KAAK;qBAAI;oBACzD,KAAK;wBAAC,KAAK,KAAK,EAAE,GAAG,CAAC,EAAE;wBAAE,KAAK,KAAK,EAAE,GAAG,CAAC,EAAE;qBAAC;oBAC7C,UAAU,EAAE,KAAK;gBACnB;gBACA,MAAM,OAAO,CAAC,IAAI,CAAC;oBACjB,MAAM;oBACN,KAAK;wBAAC,EAAE,GAAG,CAAC,EAAE,GAAG,KAAK,KAAK;wBAAK,EAAE,GAAG,CAAC,EAAE,GAAG,KAAK,KAAK;qBAAI;oBACzD,KAAK;wBAAC,KAAK,KAAK,EAAE,GAAG,CAAC,EAAE;wBAAE,KAAK,KAAK,EAAE,GAAG,CAAC,EAAE;qBAAC;oBAC7C,UAAU,EAAE,KAAK;gBACnB;YACF;YACA,OAAO,EAAE;QACX;IACF;IAEF,IAAI,MAAM,EAAE,IAAI,MAAM,eAAe,EAAE;QACrC,MAAM,eAAe,GAAG,CAAA,GAAA,SAAG,AAAD,EAAE,GAAG,MAAM,eAAe,GAAG;QACvD,IAAI,CAAC,MAAM,eAAe,EAAE,YAAY,GAAG;IAC7C;IAEA,IAAI,MAAM,IAAI,CAAC,IAAI,EAAE;QACnB,MAAM,IAAI,CAAC,IAAI,IAAI;QACnB,IAAI,MAAM,IAAI,CAAC,IAAI,IAAI,KACrB,MAAM,IAAI,CAAC,IAAI,GAAG;IAEtB;IACA,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC;QACnC,EAAE,IAAI,IAAI;QACV,EAAE,IAAI,IAAI,KAAK;QACf,OAAO,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG;YAAC;SAAE;IAC9B;IAEA,IAAI,MAAM,EAAE,EAAE;QACZ,MAAM,SAAS,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,CAAC,IAAM,CAAA,GAAA,SAAG,AAAD,EAAE,GAAG,IAAI;QACxD,MAAM,MAAM,CAAA,GAAA,0BAAmB,AAAD,MAAM,MAAM;QAC1C,IAAI,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE;YACxB,IAAI,CAAA,GAAA,qBAAK,AAAD,EAAE,MAAM,IAAI,MAAM,SAAS,CAAC,EAAE,KAAK,GAAG;gBAC5C,MAAM,SAAS,CAAC,EAAE,GAAG;gBACrB,IAAI,aAAa;oBACf,MAAM,SAAS,CAAC,EAAE,GAAG,MAAU;oBAC/B,CAAA,GAAA,YAAK,AAAD;oBACJ,MAAM,gBAAgB,CAAC,IAAI,CAAC,MAAM,KAAK,MAAM,KAAK;gBACpD;YACF;YACA,IACE,CAAA,GAAA,qBAAK,AAAD,EAAE,MAAM,IACZ,MAAM,SAAS,CAAC,EAAE,KAAK,KACvB,MAAM,IAAI,CAAC,QAAQ,IAAI,GACvB;gBACA,MAAM,SAAS,CAAC,EAAE,GAAG;gBACrB,IAAI,aAAa;oBACf,MAAM,SAAS,CAAC,EAAE,GAAG,MAAU;oBAC/B,CAAA,GAAA,YAAK,AAAD;oBACJ,MAAM,IAAI,CAAC,IAAI,GAAG;gBACpB;YACF;YACA,IACE,CAAA,GAAA,qBAAK,AAAD,EAAE,MAAM,IACZ,MAAM,SAAS,CAAC,EAAE,KAAK,KACvB,MAAM,IAAI,CAAC,QAAQ,IAAI,GACvB;gBACA,MAAM,SAAS,CAAC,EAAE,GAAG;gBACrB,IAAI,aAAa;oBACf,MAAM,SAAS,CAAC,EAAE,GAAG,MAAU;oBAC/B,CAAA,GAAA,YAAK,AAAD;oBACJ,YAAY;oBACZ,MAAM,eAAe,GAAG,MAAO,CAAA,IAAI,EAAC,IAAK;gBAC3C;YACF;QACF;IACF;AACF;AAEA,SAAS;IACP,IAAI,MAAM,IAAI,CAAC,QAAQ,IAAI,GAAG;IAC9B,MAAM,IAAK,MAAM,IAAI,CAAC,QAAQ,IAAI;IAClC,oBAAoB;IACpB,sBAAsB;IACtB,oBAAoB;IACpB,IAAI,MAAM,GAAG,MAAM,QAAQ,IAAI;IAC/B,MAAM,KAAK,CAAC,IAAI,CAAC;QACf,KAAK;YAAC;YAAG;SAAE;QACX,MAAM;QACN,MAAM;QACN,OAAO,KAAK;IACd;AACF;AAEA,SAAS,MAAM,IAAI,EAAE;IACnB,IAAI,MAAM,EAAE,EAAE,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK;AAC9C;AAEA,SAAS,UAAU,IAAY,GAAG;IAChC,MAAM,IAAI,CAAA,GAAA,0BAAmB,AAAD;IAC5B,IAAI,IAAI,QAAQ,IAAI,KAAK;QACvB,QAAQ,KAAK,CAAC,aAAa,GAAG;QAC9B,OAAO;IACT;IACA,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,IAAI;IAC1B,MAAM,KAAK,CAAC,IAAI,CAAC;QACf,OAAO;QACP,MAAM;QACN,GAAG;QACH,KAAK;YAAC,GAAG,CAAC,EAAE;YAAE,GAAG,CAAC,EAAE,GAAG,CAAA,GAAA,UAAI,AAAD,EAAE,GAAG,CAAC,EAAE;SAAE;QACpC,MAAM;QACN,OAAO;YAAC;YAAG;YAAK;SAAI;IACtB;IACA,QAAQ,KAAK,CAAC,aAAa,GAAG;IAC9B,MAAM,KAAK,GAAG;IACd,OAAO;AACT;AAEA,SAAS,YAAY,CAAQ,EAAE,IAAY,CAAC;IAC1C,MAAM,OAAO,CAAC,IAAI,IACb;QAAC,OAAO;QAAG,MAAM;KAAE,CAAC,GAAG,CAAC,CAAC,IAAO,CAAA;YACjC,KAAK;mBAAI,EAAE,GAAG;aAAC;YACf,KAAK;gBAAC,CAAA,GAAA,SAAG,AAAD,EAAE,EAAE,KAAK,GAAG,KAAK;gBAAG,CAAA,GAAA,SAAG,AAAD,EAAE,EAAE,KAAK,GAAG,KAAK;aAAE;YACjD,UAAU,EAAE,KAAK,GAAG;YACpB,MAAM,MAAO,CAAA,IAAI,EAAC,IAAK;QACzB,CAAA;AAEJ;AAEA,SAAS,QACP,CAA0D,EAC1D,CAAoC,EACpC,YAAoB;IAEpB,MAAM,QAAQ,CAAA,GAAA,QAAE,AAAD,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAA,GAAA,QAAE,AAAD,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;IAC9D,MAAM,OAAO,CAAA,GAAA,QAAE,AAAD,EAAE,EAAE,YAAY,GAAG;IACjC,IAAI,QAAQ,MACV,EAAE,QAAQ,GAAG,EAAE,QAAQ,GAAG;AAE9B;AAEA,SAAS,YACP,CAA0D,EAC1D,CAAoC,EACpC,IAAY;IAEZ,MAAM,QAAQ,CAAA,GAAA,QAAE,AAAD,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAA,GAAA,QAAE,AAAD,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;IAC9D,IAAI,QAAQ,CAAA,GAAA,QAAE,AAAD,EAAE,OAAO,EAAE,YAAY,GAClC,EAAE,QAAQ,GAAG;AAEjB;AAEA,SAAS;IACP,IACE,CAAC,MAAM,GAAG,IACV,MAAM,EAAE,IAAI,+CAA+C;IAC3D,CAAC;WAAI,MAAM,SAAS;WAAK,MAAM,KAAK;WAAK,MAAM,MAAM;KAAC,CAAC,MAAM,EAC7D;QACA,MAAM,GAAG,GAAG;QACZ,MAAM,KAAK,CAAC,IAAI,CAAC;YACf,OAAO,KAAM,CAAA,IAAK,CAAA,GAAA,YAAM,AAAD,MAAM,CAAC;YAC9B,MAAM;YACN,KAAK;gBAAC;gBAAG;aAAG;QACd;QACA,WAAW;YACT,IAAI,MAAM,KAAK,GAAG,GAAG;gBACnB,SAAS,MAAM,KAAK,GAAG;gBACvB,MAAM,EAAE;YACV;QACF,GAAG;IACL;AACF;AAEO,SAAS,KAAK,CAAO;IAC1B,CAAA,GAAA,eAAQ,AAAD;IACP,IAAI,CAAA,GAAA,oBAAS,AAAD,EAAE,MAAM,GAAG,IAAI,CAAA,GAAA,oBAAS,AAAD,EAAE,IAAI,IAAI,CAAA,GAAA,wBAAa,AAAD,EAAE;AAC7D;AAEA,SAAS,MAAM,CAAO,EAAE,CAAC;IACvB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE,EACvB,WAAW,IAAM,KAAK;YAAC,CAAC,CAAC,EAAE,GAAG,CAAA,GAAA,SAAG,AAAD;YAAK,CAAC,CAAC,EAAE,GAAG,CAAA,GAAA,SAAG,AAAD;SAAI,GAAG,IAAI;AAE7D;AAIA,SAAS,KAAK,EAAE,GAAG,EAAE,GAAG,EAA4B,EAAE,EAAU;IAC9D,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,GAAG;IACnB,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,GAAG;IACnB,WAAW;AACb;AAEA,SAAS,WAAW,CAAO;IACzB,mDAAmD;IACnD,iDAAiD;IACjD,IAAI,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,IAAI;IACvB,IAAI,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,IAAI;IACxB,IAAI,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,IAAI;IACvB,IAAI,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,EAAE,IAAI;AAC1B;AAEA,OAAO,gBAAgB,CAAC,SAAS,CAAC;IAChC,IAAI,EAAE,IAAI,IAAI,UAAU,MAAM,KAAK,EACjC;IAEF,IAAI,EAAE,GAAG,IAAI,UACX;IAEF,IAAI,EAAE,IAAI,IAAI,QACZ;QAAA,IAAI,AAAC,MAAM,GAAG,IAAI,MAAM,KAAK,IAAI,KAAO,CAAC,MAAM,KAAK,IAAI,MAAM,EAAE,IAAI,GAAI;YACtE;YACA;QACF;IAAA;AAEJ;AAEA,OAAO,gBAAgB,CAAC,YAAY,CAAC;IACnC,IAAI,MAAM,GAAG,IAAI,MAAM,KAAK,IAAI,GAAG;QACjC,MAAM,OAAO,CAAC,qCAAqC,EACjD,MAAM,KAAK,GAAG,GACf,uCAAuC,CAAC;QACzC,OAAO,IAAI,CACT,CAAC,sCAAsC,EAAE,mBAAmB,MAAM,CAAC;IAEvE,OAAO,IAAI,CAAC,MAAM,KAAK,IAAI,MAAM,EAAE,IAAI,GAAG;QACxC,MAAM,OAAO,CAAC,qBAAqB,EAAE,MAAM,KAAK,GAAG,EAAE,YAAY,EAC/D,MAAM,KAAK,GAAG,GACf,uCAAuC,CAAC;QACzC,OAAO,IAAI,CACT,CAAC,sCAAsC,EAAE,mBAAmB,MAAM,CAAC;IAEvE;AACF;AAEA,aAAa;AACb,OAAO,KAAK,GAAG;;;;;ACzpBf,yDAAgB;AAIhB,8CAAgB;AAiDhB,6CAAS;AAAT,2CAAkB;AAAlB,2CAAyB;AAAzB,2CAAgC;AAAhC,2CAAuC;AAAvC,8CAA8C;AA/J9C;;AACA;;AAIA,MAAM,KAAK,IAAI;AAEf,MAAM,MAAa;IACjB,GAAG,CAAA,GAAA,oBAAI,AAAD,CAAC;IACP,UAAU,CAAA,GAAA,oBAAI,AAAD,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG;IACjC,aAAa;AACf;AAEA,SAAS,cAAc,EAAE,UAAU,EAAS,EAAE,UAAkB;IAC9D,IAAK,IAAI,KAAK,GAAG,MAAM,YAAY,EAAE,GAAI;QACvC,IAAI,CAAA,GAAA,oBAAI,AAAD,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,EACjC,OAAO;IAEX;AACA,mDAAmD;AACrD;AAEA,SAAS,WAAW,IAAW,EAAE,UAAkB,EAAE,IAAY,CAAC;IAChE,MAAM,KAAK,cAAc,MAAM;IAC/B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,QAAQ,CAAC,WAAW;IAC7C,OAAO;QACL,GAAG,IAAI;QACP,UAAU;YACR;gBACE;gBACA,GAAG;oBAAC,CAAC,CAAC,GAAG,GAAG;iBAAE;gBACd;YACF;SACD;QACD,aAAa;QACb,YAAY;IACd;AACF;AAEA,SAAS,YAAY,IAAW,EAAE,UAAkB;IAClD,MAAM,KAAK,cAAc,MAAM;IAC/B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,QAAQ,CAAC,WAAW;IAC7C,MAAM,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,KAAK,QAAQ,CAAC,aAAa,EAAE;IAC7D,OAAO;QACL,GAAG,IAAI;QACP,UAAU;YACR;gBACE;gBACA,GAAG,EAAE,KAAK,CAAC,IAAI,KAAK;gBACpB;YACF;YACA;gBACE,GAAG;gBACH,GAAG,GAAG,KAAK,CAAC,IAAI,KAAK;gBACrB,GAAG;YACL;SACD;QACD,aAAa;QACb,YAAY;IACd;AACF;AAEA,SAAS,SAAS,IAAW;IAC3B,MAAM,IAAI,CAAA,GAAA,2BAAO,AAAD;IAChB,EAAE,IAAI,CAAC;IACP,MAAO,EAAE,QAAQ,KAAK;IACtB,OAAO,EAAE,iBAAiB,CAAC;AAC7B;AAEA,SAAS,WAAW,MAAmB,EAAE,OAAe;IACtD,MAAM,gBAAgB,IAAK,UAAU,OAAO,UAAU;IACtD,QAAQ,GAAG,CAAC,cAAc;QAAE;QAAe;QAAS;IAAe;IACnE,MAAM,SAAS,GAAG,YAAY,CAC5B,GACA,OAAO,MAAM,GAAG,eAChB,OAAO,UAAU;IAEnB;QAAC;QAAG;KAAE,CAAC,OAAO,CAAC,CAAC;QACd,MAAM,OAAO,OAAO,cAAc,CAAC;QACnC,MAAM,SAAS,KAAK,QAAQ,CAAC;QAC7B,MAAM,OAAO,OAAO,cAAc,CAAC;QACnC,KAAK,GAAG,CAAC;IACX;IACA,OAAO;AACT;AAEA,SAAS,SAAS,MAAmB,EAAE,SAAiB,CAAC;IACvD,MAAM,SAAS,GAAG,kBAAkB;IACpC,OAAO,MAAM,GAAG;IAChB,OAAO,OAAO,CAAC,GAAG,WAAW;IAC7B,OAAO;AACT;AAEA,MAAM,MAAM;AACZ,MAAM,iBAAiB,KAAK;AAE5B,SAAS;IACP,IAAI,EAAE,WAAW,EAAE,GAAG;IACtB,MAAM,MAAM;IAEZ,MAAM,aAAa,IAAK,cAAc;IACtC,MAAM,eAAe,aAAa;IAClC,MAAM,mBAAmB,cAAc;IACvC,OAAO;AACT;AAEO,SAAS;IACd,OAAO,qBAAqB;AAC9B;AAEO,SAAS;IACd,MAAM,OAAO;IACb,MAAM,gBAAgB,OAAO,IAAI,OAAO;IACxC,MAAM,WAAW,GAAG,WAAW,GAAG,gBAAgB;IAClD,OAAO;AACT;AAEA,SAAS,KACP,IAAW,EACX,EAAE,IAAI,EAAE,GAAG,EAAqC,GAAG,CAAC,CAAC;IAErD,IAAI,MAAM,SAAS;IACnB,OAAO;QACL,IAAI,SAAS,SAAS;QACtB,OAAO,IAAI,GAAG;QACd,IAAI,MAAM;YACR,OAAO,KAAK,CAAC;YACb;QACF;QACA,IAAI,KAAK;YACP,OAAO,KAAK;YACZ;QACF;QACA,+BAA+B;QAC/B,IAAI,MAAM;QACV,IAAI,MAAM,KACR,OAAO,KAAK,CAAC;aACR,IAAI,MAAM,MAAM;YACrB,MAAM,OAAO,AAAC,CAAA,MAAM,IAAG,IAAK;YAC5B,SAAS,SAAS,WAAW,KAAK;YAClC,OAAO,KAAK;QACd,OACE,OAAO,KAAK;IAEhB;AACF;AAEA,MAAM,UAAU,KAAK,KAAK;IAAE,MAAM;AAAK;AACvC,MAAM,QAAQ,KAAK,WAAW,CAAA,GAAA,oBAAI,AAAD,GAAG;AACpC,MAAM,QAAQ,KAAK,WAAW,CAAA,GAAA,oBAAI,AAAD,GAAG;AACpC,MAAM,QAAQ,KAAK,WAAW,CAAA,GAAA,oBAAI,AAAD,GAAG;AACpC,MAAM,QAAQ,KAAK,YAAY,CAAA,GAAA,oBAAI,AAAD,GAAG;AACrC,MAAM,YAAY,KAAK,WAAW,CAAA,GAAA,oBAAI,AAAD,GAAG,KAAK;IAAE,KAAK;AAAK;AACzD,MAAM,YAAY,KAAK,WAAW,CAAA,GAAA,oBAAI,AAAD,GAAG,IAAI,IAAI;IAAE,KAAK;AAAK;AAE5D,SAAS;IACN,CAAA,KAAK,MAAM,KAAK,MAAM,YAAY,SAAQ;AAC7C;AAGA;;;AChKA;;;;;;;;;;;;;;;;;;;;;CAqBC,GACD;;;;;CAKC;;6CAIuB;AAFxB;AAEe,SAAS;IACtB,4EAA4E;IAC5E,kBAAkB;IAClB,4EAA4E;IAE5E,cAAc;IACd,IAAI,UAAU,SAAU,KAAK;QAC3B,OAAO,CAAA,GAAA,SAAG,AAAD,EAAE,QAAQ;IACrB;IAEA,IAAI,UAAU,SAAU,KAAK;QAC3B,OAAO,IAAK,CAAA,QAAQ,CAAA,IAAK;IAC3B;IAEA,IAAI,aAAa,SAAU,KAAK;QAC9B,OAAO,QAAQ,IAAI,MAAM,IAAI;IAC/B;IAEA,IAAI,UAAU,SAAU,KAAK;QAC3B,IAAI,KAAK,AAAC,QAAQ,IAAK;QACvB,IAAI,KAAK,GAAG,OAAO,KAAK;QACxB,OAAO,IAAI;IACb;IAEA,IAAI,cAAc,SAAU,CAAC;QAC3B,yCAAyC;QACzC,OAAO,iBAAiB,KAAM,CAAA,AAAC,CAAA,IAAI,GAAE,IAAK,EAAC;IAC7C;IAEA,IAAI,aAAa,SAAU,KAAK,EAAE,CAAC,EAAE,MAAM;QACzC,IAAI,OAAO,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EACjC,QAAQ,MAAM,CAAC,CAAC,EAAE,EAClB,SAAS,MAAM,CAAC,CAAC,EAAE,GAAG,IACtB,OAAO,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAC/B,QAAQ,MAAM,CAAC,CAAC,EAAE,EAClB,SAAS,MAAM,CAAC,CAAC,EAAE,GAAG,IACtB,WAAW,MAAM,CAAC,CAAC,EAAE,EACrB,SAAS,MAAM,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,GACrC,UAAU,MAAM,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,GACtC,UAAU,MAAM,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,GAAG,GAAG,GACtC,aAAa,IAAI,SACjB,WAAW,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG,IAC1B,MAAM,MAAM,CAAC,CAAC,GAAG,EACjB,cAAc,SAAS,KAAM,CAAA,IAAI,MAAM,CAAC,CAAC,GAAG,AAAD;QAE7C,IAAI,UAAU,IAAI,WAAW,SAAS,UAAU;QAEhD,sBAAsB;QACtB,IAAI,KAAK,GACP,KAAK;QAEP,mBAAmB;QACnB,IAAI,GAAG,IAAI,GAAG,GAAG,SAAS,KAAK;QAE/B,iDAAiD;QACjD,IAAK,IAAI,GAAG,KAAK,GAAG,IAAI,SAAS,UAAU,SAAS,KAAK,KAAM;YAC7D,IAAI,MAAM,GAAG;gBACX,wBAAwB;gBACxB,MAAM,AAAC,OAAO,IAAM,AAAC,CAAA,MAAM,GAAE,KAAM;gBACnC,MAAM;gBAEN,iDAAiD;gBACjD,MAAM,YAAY,IAAK,CAAA,MAAM,EAAC,IAAK,MAAM,CAAC,CAAC,EAAE,GAAG;gBAChD,MACE,YAAY,IAAK,CAAA,MAAM,EAAC,IAAK,MAAM,CAAC,CAAC,EAAE,GAAG,OACzC,CAAA,IAAI,SAAS,MAAM,CAAC,CAAC,EAAE,AAAD;YAC3B;YAEA,WAAW;YACX,IAAI;YACJ,IAAI,IAAI,QACN,IAAI,IAAI;iBACH,IAAI,KAAK,SAAS,SAAS;gBAChC,IAAI,AAAC,CAAA,IAAI,SAAS,OAAM,IAAK;gBAC7B,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK,KAAM,CAAA,WAAW,CAAA;YACjC;YAEA,eAAe;YACf,MAAM,MAAM,KAAK;YACjB,UAAU,KAAK,MAAM;YAErB,eAAe;YACf,MAAM,MAAM,KAAK;YACjB,WAAW,KAAK,MAAM;YAEtB,mBAAmB;YACnB,IAAI,UACF,WAAW,AAAC,CAAA,IAAI,CAAA,GAAA,YAAM,AAAD,MAAM,CAAA,IAAK;YAGlC,+BAA+B;YAC/B,OAAO,CAAC,EAAE,GAAG,AAAC,KAAK,UAAU,IAAK;QACpC;QAEA,OAAO;IACT;IAEA,4EAA4E;IAC5E,kBAAkB;IAClB,4EAA4E;IAE5E,gCAAgC;IAChC,IAAI,eAAe;QAAC;QAAS;QAAY;QAAS;KAAQ;IAE1D,qCAAqC;IACrC,IAAI,OAAO,UAAU,aAAa,WAAW;IAE7C,4EAA4E;IAC5E,iBAAiB;IACjB,4EAA4E;IAE5E,OAAO;QACL,MAAK,IAAI;YACP,kBAAkB;YAClB,QAAQ;YAER,iCAAiC;YACjC,WAAW,KAAK,UAAU;YAC1B,cAAc;YAEd,oBAAoB;YACpB,YAAY,KAAK,MAAM,GAAG,KAAK,UAAU,GAAI,CAAA,WAAW,CAAA,IAAK;YAE7D,yCAAyC;YACzC,UAAU,IAAI,WAAW;QAC3B;QAEA;YACE,kBAAkB;YAClB,IAAI,GACF,GACA,GACA,GACA,KACA,KACA,GACA,IACA,GACA,GACA,MACA,GACA,GACA,SACA,gBACA,GACA;YAEF,oDAAoD;YACpD,IAAI,SAAS,IAAI,WAAW,YAC1B,QAAQ,MAAM,QAAQ,CAAC,YAAY,EACnC,SAAS,MAAM,MAAM,EACrB,aAAa,MAAM,UAAU;YAE/B,qBAAqB;YACrB,IAAI,MAAM,GACR,OAAO,GACP;YACF,IAAI,SACF,eAAe;YAEjB,oBAAoB;YACpB,IAAI,YAAY,EAAE;YAElB,WAAW;YACX,IAAK,IAAI,GAAG,KAAK,UAAU,EAAE,EAAG;gBAC9B,KAAK,MAAM,CAAC,CAAC,EAAE;gBAEf,eAAe;gBACf,IAAK,MAAM,GAAG,MAAM,YAAY,EAAE,IAAK;oBACrC,0BAA0B;oBAC1B,IAAI,QAAQ,KAAK,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG;oBAC1C,IAAI,OAAO;wBACT,MAAM,CAAC,CAAC,QAAQ,EAAE,GAAG,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,WAAW,IAAI;wBAE5D,yDAAyD;wBACzD,IAAI,QAAQ,IACV,YAAY,EAAE;oBAElB;oBAEA,oEAAoE;oBACpE,IAAI,SAAS,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EACpC,SAAS,MAAM,CAAC,CAAC,GAAG,GAAG,KACvB,UAAU,KAAM,CAAA,MAAM,CAAC,CAAC,GAAG,GAAG,CAAA,IAAK,QACnC,QAAQ,MAAM,CAAC,CAAC,GAAG,EACnB,WAAW,MAAM,CAAC,CAAC,GAAG,EACtB,SAAS,AAAC,MAAM,CAAC,CAAC,GAAG,GAAX,kBAAqC,OAC/C,IAAI,IAAI,MAAM,CAAC,CAAC,GAAG,GAAG,KACtB,OAAO,MAAM,CAAC,CAAC,GAAG,GAAG,MACrB,QAAQ,MAAM,CAAC,CAAC,GAAG,GAAG,IACtB,SAAS,MAAM,CAAC,CAAC,GAAG,GAAG,KACvB,UAAU,AAAC,WAAW,KAAM,CAAA,MAAM,CAAC,CAAC,GAAG,GAAG,CAAA,IAAM,QAChD,SAAS,MAAM,CAAC,CAAC,GAAG,GAAG,KACvB,MAAM,AAAC,MAAM,CAAC,CAAC,GAAG,GAAG,SAAU,IAAI,yBAAyB;oBAE9D,4DAA4D;oBAC5D,iBAAiB,AAAC,CAAA,IAAI,aAAa,GAAE,IAAK;oBAE1C,sCAAsC;oBACtC,IAAK,MAAM,GAAG,MAAM,GAAG,EAAE,IAAK;wBAC5B,IAAI,KAAK,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,MAAM,WAAW,GAAG;wBACrD,IAAI,GAAG;4BACL,IAAI,CAAC,SAAS,CAAC,EAAE,EACf,SAAS,CAAC,EAAE,GAAG,WAAW,OAAO,GAAG;4BAGtC,gCAAgC;4BAChC,IAAI,UAAU,SAAS,CAAC,EAAE;4BAC1B,IACE,IAAI,GAAG,IAAI,iBAAiB,GAC5B,IAAI,QAAQ,MAAM,EAClB,KAAK,KAAK,EAEV,MAAM,CAAC,EAAE,IAAI,OAAO,CAAC,EAAE;wBAE3B;oBACF;oBAEA,uCAAuC;oBACvC,IAAK,IAAI,GAAG,IAAI,QAAQ,IAAK;wBAC3B,kBAAkB;wBAClB,IAAI,AAAC,CAAA,iBAAiB,CAAA,IAAK;wBAC3B,UAAU,MAAM,CAAC,EAAE;wBAEnB,iDAAiD;wBACjD,IAAI,WAAW,cAAc;4BAC3B,wBAAwB;4BACxB,IAAI;4BACJ,IAAI,OACF,KAAK,OAAO,UAAU,KAAK,SAAS;4BAEtC,IAAI,MAAM,CAAA,GAAA,SAAG,AAAD,EAAE;4BACd,OAAO,IAAI;4BACX,OAAO,IAAK,CAAA,UAAU,IAAG,IAAK;4BAC9B,QAAQ,IAAI;4BACZ,UAAU,YAAY,IAAI,OAAO,YAAY,IAAI,OAAO;4BAExD,aAAa;4BACb,IAAI,MAAM;gCACR,WAAW;gCACX,UACE,UAAU,IACN,UAAU,KACR,QAAQ,UAAU,QAClB,KACF;gCACN,WAAW;4BACb;4BAEA,QAAQ;4BACR,WAAW;4BAEX,8CAA8C;4BAC9C,eAAe,UAAU,UAAU;4BAEnC,UAAU;4BACV,IAAI,CAAA,GAAA,SAAG,AAAD,EAAE,UAAU,KAAK,SAAS;4BAChC,UAAU,UAAW,CAAA,IAAI,CAAA;4BACzB,WAAW;wBACb,OACE,UAAU;wBAGZ,2DAA2D;wBAC3D,IAAI,KAAK,KAAK;4BACZ,sCAAsC;4BACtC,WAAW,MAAM,CAAC,IAAI,MAAM,EAAE,GAAG;4BAEjC,uCAAuC;4BACvC,WAAW,MAAM,CAAC,IAAI,IAAI,GAAG;wBAC/B;wBAEA,+DAA+D;wBAC/D,MAAM,CAAC,EAAE,GAAG,UAAU;wBACtB,MAAM,CAAC,IAAI,EAAE,GAAG,UAAU;wBAE1B,kCAAkC;wBAClC,OAAO,CAAC,EAAE,IAAI,UAAU;wBACxB,OAAO,CAAC,IAAI,EAAE,IAAI,UAAU;oBAC9B;gBACF;YACF;YAEA,kDAAkD;YAClD;YACA,OAAO,cAAc,MAAM,WAAW;QACxC;QAEA,qDAAqD;QACrD,mBAAkB,OAAqB;YACrC,IAAI,SAAS,QAAQ,YAAY,CAAC,GAAG,YAAY,GAAG;YACpD,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;gBAC1B,IAAI,OAAO,OAAO,cAAc,CAAC;gBACjC,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,KAAK,EAClC,IAAI,CAAC,KAAK,EAAE,GAAG,OAAO,CAAC,EAAE,GAAG;YAEhC;YACA,OAAO;QACT;IACF;AAEA,sEAAsE;AACtE,kCAAkC;AAClC,0BAA0B;AAC1B,wBAAwB;AACxB,4CAA4C;AAC5C,sBAAsB;AACtB,0DAA0D;AAC1D,eAAe;AACf,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,gBAAgB;AAChB,uBAAuB;AACvB,wBAAwB;AACxB,wBAAwB;AACxB,UAAU;AACV,UAAU;AACV,UAAU;AACV,UAAU;AACV,WAAW;AACX,WAAW;AACX,WAAW;AACX,UAAU;AACV,UAAU;AACV,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,UAAU;AACV,WAAW;AACX,SAAS;AACT,SAAS;AACT,UAAU;AACV,WAAW;AACX,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,UAAU;AACV,SAAS;AACT,WAAW;AACX,UAAU;AACV,WAAW;AACX,UAAU;AACV,gBAAgB;AAChB,uBAAuB;AACvB,wBAAwB;AACxB,wBAAwB;AACxB,QAAQ;AAER,+BAA+B;AAC/B,2DAA2D;AAC3D,6BAA6B;AAC7B,0BAA0B;AAC1B,uDAAuD;AACvD,6BAA6B;AAC7B,oCAAoC;AACpC,MAAM;AAEN,6CAA6C;AAC7C,iBAAiB;AACjB,KAAK;AAEL,0EAA0E;AAC1E,mCAAmC;AACnC,uCAAuC;AACvC,0BAA0B;AAC1B,yCAAyC;AACzC,qBAAqB;AACrB,mEAAmE;AACnE,MAAM;AACN,cAAc;AACd,KAAK;AACP;;;ACzZA,gEAAgE;AAChE,+DAA+D;AAE/D,iEAAiE;AACjE,oBAAoB;AAEpB,YAAY;;;kBACG;IACb,UAAU;QACR;YACE,eAAe;YACf,GAAG;gBACD;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,WAAW;YACX,GAAG;;;;gBAID;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;;;gBAGA;gBACA;;;;;gBAKA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,UAAU;YACV,GAAG;gBACD;oBAAE,GAAG;wBAAC;;;;;;;;wBAAmB;qBAAI;oBAAE,GAAG,EAAE;gBAAC;gBACrC;oBAAE,GAAG;wBAAC;;;;;;;;wBAAmB;;;;wBAAW;;;wBAAS;qBAAI;oBAAE,GAAG,EAAE;gBAAC;gBACzD;oBAAE,GAAG,EAAE;oBAAE,GAAG,EAAE;gBAAC;gBACf;oBAAE,GAAG,EAAE;oBAAE,GAAG,EAAE;gBAAC;gBACf;oBAAE,GAAG,EAAE;oBAAE,GAAG,EAAE;gBAAC;gBACf;oBAAE,GAAG,EAAE;oBAAE,GAAG,EAAE;gBAAC;gBACf;oBAAE,GAAG,EAAE;oBAAE,GAAG,EAAE;gBAAC;gBACf;oBAAE,GAAG,EAAE;oBAAE,GAAG,EAAE;gBAAC;gBACf;oBAAE,GAAG,EAAE;oBAAE,GAAG,EAAE;gBAAC;gBACf;oBAAE,GAAG,EAAE;oBAAE,GAAG,EAAE;gBAAC;gBACf;oBAAE,GAAG;;;;;;;;;;;;;wBAAyB;qBAAI;oBAAE,GAAG,EAAE;gBAAC;aAC3C;QACH;QACA;YACE,eAAe;YACf,GAAG;gBACD;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,WAAW;YACX,GAAG;;;;;gBAKD;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;;;;;;;gBAOA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,UAAU;YACV,GAAG;gBAAC;oBAAE,GAAG;;;;;wBAAS;;;;;;wBAAe;qBAAI;oBAAE,GAAG,EAAE;gBAAC;aAAE;QACjD;QACA;YACE,eAAe;YACf,GAAG;gBACD;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,WAAW;YACX,GAAG;;;gBAGD;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;;;gBAGA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,UAAU;YACV,GAAG;gBACD;oBAAE,GAAG;;;;;wBAAS;;;wBAAS;wBAAK;;;;wBAAW;;wBAAO;qBAAI;oBAAE,GAAG,EAAE;gBAAC;gBAC1D;oBAAE,GAAG;;;wBAAK;;wBAAO;wBAAK;;;;;wBAAa;;wBAAO;;wBAAO;wBAAK;qBAAI;oBAAE,GAAG,EAAE;gBAAC;aACnE;QACH;QACA;YACE,eAAe;YACf,GAAG;gBACD;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,WAAW;YACX,GAAG;gBAAC;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;;;gBAAO;gBAAG;;;;;gBAAW;gBAAG;gBAAG;gBAAG;gBAAG;gBAAG;aAAE;YACzD,UAAU;YACV,GAAG;gBACD;oBAAE,GAAG;wBAAC;qBAAI;oBAAE,GAAG,EAAE;gBAAC;gBAClB;oBACE,GAAG;wBACD;wBACA;wBACA;;wBAEA;;wBAEA;;;;;;;;;;;;;;;;;;;;;wBAqBA;wBACA;;wBAEA;qBACD;oBACD,GAAG,EAAE;gBACP;gBACA;oBACE,GAAG;wBACD;wBACA;wBACA;;wBAEA;;wBAEA;;;;;;;;;;;;;;;;;;;;;wBAqBA;wBACA;;wBAEA;qBACD;oBACD,GAAG,EAAE;gBACP;aACD;QACH;QACA;YACE,eAAe;YACf,GAAG;gBACD;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,WAAW;YACX,GAAG;;;;;;;gBAOD;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;;;gBAGA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,UAAU;YACV,GAAG;gBACD;oBAAE,GAAG,EAAE;oBAAE,GAAG,EAAE;gBAAC;gBACf;oBAAE,GAAG,EAAE;oBAAE,GAAG,EAAE;gBAAC;gBACf;oBAAE,GAAG,EAAE;oBAAE,GAAG,EAAE;gBAAC;gBACf;oBAAE,GAAG,EAAE;oBAAE,GAAG,EA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qBAAI;oBAAE,GAAG,EAAE;gBAAC;aACjD;QACH;QACA;YACE,eAAe;YACf,GAAG;gBACD;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,WAAW;YACX,GAAG;;gBAAG;gBAAG;;gBAAK;;gBAAK;aAAE;YACrB,UAAU;YACV,GAAG;gBACD;oBACE,GAAG;;;;;;;;;;;;;;;;;wBAiBD;wBACA;wBACA;wBACA;wBACA;;;;;;;;;;;;wBAYA;wBACA;wBACA;wBACA;wBACA;qBACD;oBACD,GAAG;wBAAC;;;;wBAAU;;;;;;;;;;;;;;;;wBAAkC;qBAAI;gBACtD;aACD;QACH;QACA;YACE,eAAe;YACf,GAAG;gBACD;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,WAAW;YACX,GAAG;;;;;;;;;;;;gBAAuB;aAAE;YAC5B,UAAU;YACV,GAAG;gBAAC;oBAAE,GAAG;wBAAC;qBAAI;oBAAE,GAAG,EAAE;gBAAC;aAAE;QAC1B;QACA;YACE,eAAe;YACf,GAAG;gBACD;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,WAAW;YACX,GAAG,EAAE;YACL,UAAU;YACV,GAAG,EAAE;QACP;QACA;YACE,eAAe;YACf,GAAG;gBACD;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,WAAW;YACX,GAAG;;;;;;;;;gBAAiB;aAAE;YACtB,UAAU;YACV,GAAG;gBACD;oBACE,GAAG;wBAAC;;;wBAAS;;;;wBAAW;;;wBAAS;qBAAI;oBACrC,GAAG;wBAAC;;;;;;;wBAAgB;;;;;;;;;;;;;;;;wBAAkC;qBAAG;gBAC3D;aACD;QACH;QACA;YACE,gBAAgB;YAChB,GAAG;gBACD;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,WAAW;YACX,GAAG;;;;;;gBAAW;;gBAAK;aAAE;YACrB,UAAU;YACV,GAAG;gBACD;oBACE,GAAG;wBACD;;;;;;;;;;;;;;;;wBAgBA;;;;;;;;;;;;;;;;wBAgBA;qBACD;oBACD,GAAG,EAAE;gBACP;gBACA;oBACE,GAAG;wBACD;;;;;;;;;;;;;;;;wBAgBA;;;;;;;;;;;;;;;;wBAgBA;qBACD;oBACD,GAAG,EAAE;gBACP;aACD;QACH;QACA;YACE,gBAAgB;YAChB,GAAG;gBACD;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,WAAW;YACX,GAAG;;;;gBAAO;aAAE;YACZ,UAAU;YACV,GAAG;gBACD;oBACE,GAAG;wBACD;wBACA;wBACA;wBACA;wBACA;;;;;;;;;;;;;;;;wBAgBA;;;;;;;;;;;;;;;;wBAgBA;qBACD;oBACD,GAAG;wBAAC;wBAAG;wBAAG;wBAAG;wBAAG;;;;;;;;;;;;;wBAA2B;wBAAI;wBAAI;qBAAI;gBACzD;aACD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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-2e49e962005d6450.js","index.ts","frame.ts","models.ts","regl.ts","shader.vert","shader.frag","light.frag","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","models/cube.json","models/asteroid.json","models/asteroid2.json","models/asteroid3.json","models/leship.json","math.ts","state.ts","audio.ts","player-small.ts","song.ts","input.ts","particles.ts","text.ts","hacks.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"78fcd0ac8e9bd240\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws;\n  try {\n    ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n  } catch (err) {\n    if (err.message) {\n      console.error(err.message);\n    }\n    ws = {};\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    if (e.message) {\n      console.error(e.message);\n    }\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import \"./frame\";\nimport \"./hacks\";\nimport \"./audio\";\n","import type { Vec2, Vec3 } from \"regl\";\nimport {\n  drawAsteroid,\n  drawAsteroid2,\n  drawAsteroid3,\n  drawCircle,\n  drawCube,\n  drawEye,\n  drawEye2,\n  drawLeship,\n  drawLine,\n  drawMine,\n} from \"./models\";\nimport regl from \"./regl\";\nimport { shipParticles, state, step } from \"./state\";\nimport { particles } from \"./particles\";\nimport { currentBeatFraction } from \"./audio\";\nimport { makeOneOffText, makeTextDrawcall } from \"./text\";\nimport { min, pow, sin, TAU, lerp, max } from \"./math\";\n\nlet prevTime = null;\n\nconst texts = [\n  \"beat\", // 0\n  \"rocks\",\n  \"press Q to start\",\n  \"mind the rhythm\",\n  \"level 1/6\\nwarm up the engines\", // 4\n  \"level 2/6\\naura sense\",\n  \"level 3/6\\nmy house is full of traps\",\n  \"level 4/6\\nmagicland dizzy\",\n  \"level 5/6\\nminefield mahjong\",\n  \"level 6/6\\nseason finale\",\n  \"well done\", // 10\n  \"excellent\",\n  \"astounding\",\n  \"astoneding\", // sic\n  \"q\", // 14\n  \"w\",\n  \"e\",\n  \"beat\\nmiss\", // 17\n  \"POW\", // 18\n  \"  Aura\\nunlocked\\n / W /\", // 19\n  \" Mortar\\nunlocked\\n / E /\",\n  \" Cannon\\namplified\",\n  \"  Aura\\nempowered\",\n].map(makeTextDrawcall);\n\nregl.frame((context) => {\n  const cbf = currentBeatFraction();\n  const dt = context.time - (prevTime || context.time);\n  prevTime = context.time;\n\n  step(dt);\n  particles.map((system) => system.update(dt));\n  particles.splice(0, particles.length, ...particles.filter((x) => x.alive));\n\n  regl.clear({\n    color: [0, 0, 0, 1],\n  });\n\n  const levelColors: [Vec3, Vec3][] = [\n    [\n      [0, 0, 1],\n      [0, 1, 0],\n    ],\n    [\n      [0, 0, 1],\n      [1, 0, 1],\n    ],\n    [\n      [0.5, 0.5, 0],\n      [1, 0.5, 0],\n    ],\n    [\n      [0.2, 0.2, 1],\n      [1, 0.2, 0],\n    ],\n    [\n      [1, 0.3, 0],\n      [0.5, 0, 0],\n    ],\n    [\n      [1, 0, 1],\n      [0, 1, 0],\n    ],\n  ];\n\n  const l = state.title ? 4 : state.level;\n  const lights: Vec2[] = [\n    [-6, ((l * 69) % 16) - 8],\n    [6, ((l * 32) % 16) - 8],\n  ];\n  const lightColors = [...levelColors[l]];\n  if (!state.title) {\n    lights.push(state.ship.pos);\n    lightColors.push([0.2, 0.2, 1]);\n  }\n  drawLine({\n    translation: [0, -9],\n    thickness: 100,\n    scale: 1.2,\n    lights,\n    lightColors,\n  });\n\n  state.asteroids.forEach((a) => {\n    [drawAsteroid, drawAsteroid2, drawAsteroid3][a.generation]({\n      translation: a.pos,\n      rotation: a.rotation + state.rotation,\n      rotationZ: a.rZ * 6,\n      scale: (0.1 * a.colliderSize) / 1.6,\n      thickness: 0.2,\n      color: a.color,\n    });\n    state.renderHitboxes &&\n      drawCircle({\n        translation: a.pos,\n        scale: a.colliderSize / 16,\n        thickness: 0.4,\n        color: a.collides ? [1, 0, 0] : [0.2, 0.2, 0.2],\n      });\n  });\n\n  state.mines.forEach((e) => {\n    drawMine({\n      translation: e.pos,\n      scale: 0.05,\n      thickness: 0.2,\n      rotationY: state.rotation * 2 + pow(2, 1.2 - min(e.life, 1.2) + 1) * 4,\n      color: [0.3, 0, 0],\n    });\n    (e.life > 1.2 ? drawEye2 : drawEye)({\n      translation: e.pos,\n      scale: 0.008,\n      thickness: 0.2,\n      color: [1, 0, 0],\n    });\n    drawCircle({\n      translation: e.pos,\n      scale: e.colliderSize / 16,\n      thickness: 0.2,\n      color: [0.3, 0, 0],\n    });\n  });\n  state.aliens.forEach((e) => {\n    drawCube({\n      translation: e.pos,\n      rotation: -state.rotation,\n      rotationY: -state.rotation * 2,\n\n      scale: 0.1,\n      thickness: 0.2,\n      color: [1, 1, 1],\n    });\n    drawCube({\n      translation: e.pos,\n      rotation: -state.rotation * 2,\n      rotationY: -state.rotation,\n      scale: 0.1,\n      thickness: 0.2,\n      color: [1, 1, 1],\n    });\n    (currentBeatFraction() > 0.2 ? drawEye : drawEye2)({\n      translation: e.pos,\n      scale: 0.01,\n      thickness: 0.2,\n      color: [1, 1, 1],\n    });\n    const sc = e.shootCooldown;\n    if (sc > 0.6) {\n      // warmup\n      drawLine({\n        translation: e.pos,\n        rotationZ: e.shootAngle,\n        scale: 2.5,\n        thickness: 0.1,\n        color: [1, 1, 1],\n      });\n    } else if (sc) {\n      //actual shoot\n\n      // shadow, widening\n      drawLine({\n        translation: e.pos,\n        rotationZ: e.shootAngle,\n        scale: 2.5,\n        thickness: (1 - sc) * 2,\n        color: [sc, sc, sc],\n      });\n      // shoot, narrowing\n      drawLine({\n        translation: e.pos,\n        rotationZ: e.shootAngle,\n        scale: 2.5,\n        thickness: sc * 2,\n        color: [sc * 2, sc * 1, sc * 2],\n      });\n    }\n  });\n\n  [...state.bullets, ...state.mortars].forEach((b) => {\n    drawLine({\n      translation: b.pos,\n      rotationZ: b.rotation,\n      scale: 0.05,\n      thickness: 0.3,\n      color: [1, 0, 0],\n    });\n  });\n  state.enemyBullets.forEach((b) => {\n    drawLine({\n      translation: b.pos,\n      rotationZ: b.rotation,\n      scale: 0.05,\n      thickness: 0.3,\n      color: [1, 1, 0],\n    });\n  });\n\n  if (state.title) {\n    function easeOutElastic(x: number): number {\n      const c4 = TAU / 3;\n\n      return x === 0\n        ? 0\n        : x === 1\n        ? 1\n        : pow(2, -10 * x) * sin((x * 10 - 0.75) * c4) + 1;\n    }\n    const rotationY = (easeOutElastic(cbf) - 1) * 0.1;\n    texts[0]({\n      translation: [0, 4],\n      scale: 0.02,\n      color: [1, 1, 1],\n      thickness: lerp(0.9, 0.3, cbf),\n      rotationY,\n    });\n    texts[1]({\n      translation: [0, 0],\n      scale: 0.02,\n      color: [1, 1, 1],\n      thickness: lerp(0.9, 0.3, cbf),\n      rotationY,\n    });\n    texts[2]({\n      translation: [0, -6],\n      scale: 0.008,\n      color: [0.5, 0.5, 0.5],\n      thickness: 0.3,\n    });\n    texts[3]({\n      translation: [0, -8],\n      scale: 0.008,\n      color: [0.5, 0.5, 0.5],\n      thickness: 0.3,\n    });\n  } else {\n    state.hp &&\n      drawLeship({\n        translation: state.ship.pos,\n        rotation: state.ship.hitTimer\n          ? pow(state.ship.hitTimer / 1.2, 3) * 7\n          : 0,\n        rotationY: state.ship.thrust,\n        rotationZ: state.ship.angle,\n        scale: 0.05,\n        thickness: lerp(0.6, 0.1, cbf),\n        color: [0.2, 0.2, 1],\n      });\n    state.renderHitboxes &&\n      drawCircle({\n        translation: state.ship.pos,\n        scale: state.ship.colliderSize / 16,\n        thickness: 0.4,\n        color: state.ship.collides ? [1, 0, 0] : [0.2, 0.2, 0.2],\n      });\n    if (state.ship.aura) {\n      const { pos, aura } = state.ship;\n      const { auraSize: aus } = state;\n      const auraThickness = 3 * (0.6 - aura);\n      drawCircle({\n        translation: pos,\n        scale: (aura * aus) / 16,\n        thickness: auraThickness,\n        color: [1, 0, 1],\n      });\n      [0.8, 0.9, 1.1, 1.3].forEach((x) => {\n        drawCircle({\n          translation: pos,\n          scale: (x * (aura * aus)) / 16,\n          thickness: auraThickness * 0.5,\n          color: [0.4 * x, 0, 0.4 / x],\n        });\n      });\n    }\n  }\n\n  state.blasts.map(({ pos, size: aura }) => {\n    const aus = 3;\n    const auraThickness = 3 * (0.6 - aura);\n    drawCircle({\n      translation: pos,\n      scale: (aura * aus) / 16,\n      thickness: auraThickness,\n      color: [1, 0, 1],\n    });\n    [0.8, 0.9, 1.1, 1.3].forEach((x) => {\n      drawCircle({\n        translation: pos,\n        scale: (x * (aura * aus)) / 16,\n        thickness: auraThickness * 0.5,\n        color: [0.4 * x, 0.4 / x, 1],\n      });\n    });\n  });\n\n  state.powerups.map(({ pos }) => {\n    const color: [number, number, number] = [0, 1, 0];\n    drawCube({\n      translation: pos,\n      rotation: state.rotation * 3,\n      rotationY: state.rotation * 0.02,\n      scale: 0.08,\n      thickness: 0.3,\n      color,\n    });\n    drawCircle({\n      translation: pos,\n      scale: 1 / 16,\n      thickness: 0.3,\n      color,\n    });\n    texts[18]({\n      translation: [pos[0], pos[1] - 0.3],\n      scale: 0.004,\n      thickness: 0.3,\n      color,\n    });\n  });\n\n  particles.forEach((p) => {\n    p.render();\n  });\n  shipParticles && shipParticles.render();\n\n  state.signs.forEach((s) => {\n    const { v = 1 } = s;\n    const a = max(0, -s.life + 1);\n    const f = pow(a, 3) * 30;\n    texts[s.index]({\n      translation: s.pos,\n      color: s.color || [1 - a, 1 - a, 1 - a],\n      scale: s.size || 0.004,\n      thickness: 0.2,\n      rotation: f * v,\n    });\n  });\n\n  // hud\n  if (!state.title) {\n    [-1, 0, 1].forEach((x, i) => {\n      const locked = state.ship.powerups < i;\n      const hot = !locked && (state.cooldowns[i] > 0 ? 0 : 1);\n      const color: [number, number, number] = locked\n        ? [0.03, 0.03, 0.03]\n        : hot\n        ? [0.7, 0.7, 0.7]\n        : [0.3, 0.3, 0.3];\n      drawCube({\n        translation: [x * 2, -7.4],\n        rotation: -0.2,\n        rotationY: -0.15,\n        rotationZ: 0.04,\n        scale: 0.08,\n        thickness: 0.2,\n        color,\n      });\n      texts[15 + x]({\n        translation: [x * 2, -7.7],\n        scale: lerp(0.005, 0.0055, pow(1 - cbf, 2) * hot),\n        thickness: 0.2,\n        color,\n      });\n      if (state.cooldowns[i] > 0) {\n        const beats = Math.ceil((state.cooldowns[i] + 0.2) / 0.6);\n        makeOneOffText(\"\" + beats)({\n          translation: [x * 2, -8.5],\n          scale: 0.002,\n          thickness: 0.2,\n          color: [1, 1, 1],\n        });\n      }\n    });\n    drawLeship({\n      translation: [-15, -8],\n      scale: 0.03,\n      thickness: 0.2,\n      rotationY: 0.2,\n      rotationZ: 0.2,\n      color: [0.2, 0.2, 1],\n    });\n    makeOneOffText(`x${state.hp}`)({\n      translation: [-14, -8],\n      scale: 0.005,\n      thickness: 0.2,\n      color: [1, 1, 1],\n    });\n    makeOneOffText(\"\" + state.score * 10)({\n      translation: [12, -8],\n      scale: 0.005,\n      thickness: 0.2,\n      color: [1, 1, 1],\n    });\n    makeOneOffText(\"streak \" + state.combo)({\n      translation: [12, -8.6],\n      scale: 0.002,\n      thickness: 0.15,\n      color: [1, 1, 1],\n    });\n  }\n\n  if (state.win && state.level == 5) {\n    makeOneOffText(\n      \"Congratulations!\\n\\nFinal score\\n\" +\n        state.score * 10 +\n        \"\\n\\nDouble click to tweet and share\"\n    )({\n      translation: [0, 4],\n      scale: 0.008,\n      thickness: 0.2,\n      color: [1, 1, 1],\n    });\n  }\n  if (!state.title && state.hp == 0) {\n    makeOneOffText(\n      \"Game over!\\n\\nFinal score\\n\" +\n        state.score * 10 +\n        \"\\n\\nDouble click to tweet and share\\nR to start over\"\n    )({\n      translation: [0, 4],\n      scale: 0.008,\n      thickness: 0.2,\n      color: [1, 1, 1],\n    });\n  }\n});\n","import type { Vec2, Vec3 } from \"regl\";\nimport regl, { vert, frag, Uniforms } from \"./regl\";\n\nimport cubeModel from \"./models/cube.json\";\nimport asteroidModel from \"./models/asteroid.json\";\nimport asteroid2Model from \"./models/asteroid2.json\";\nimport asteroid3Model from \"./models/asteroid3.json\";\nimport leshipModel from \"./models/leship.json\";\nimport { cos, sin, sqrt, TAU } from \"./math\";\n\nexport type TModel = {\n  verts: number[][];\n  elements: number[][];\n};\n\nexport function preprocessModel(m: TModel) {\n  // Explode indexing\n  const PositionSingle: number[][] = m.elements.flatMap(([a, b]) => [\n    m.verts[a],\n    m.verts[b],\n  ]);\n  // Duplicate vertices\n  const Position: number[][] = PositionSingle.flatMap((vert) => [vert, vert]);\n\n  // Generate sister elements and sides\n  const Normal: number[][] = [];\n  const Side: number[] = [];\n  const Elements: number[] = [];\n  for (let i = 0; i < Position.length; i += 4) {\n    const v = [Position[i], Position[i + 2]];\n    const normal = [v[1][0] - v[0][0], v[1][1] - v[0][1], v[1][2] - v[0][2]];\n    Normal.push(normal, normal, normal, normal);\n    Side.push(-1, 1, -1, 1);\n    Elements.push(i, i + 1, i + 2);\n    Elements.push(i + 2, i + 1, i + 3);\n  }\n  return {\n    Position: regl.buffer(Position.flatMap((x) => x)),\n    Normal: regl.buffer(Normal.flatMap((x) => x)),\n    Side: regl.buffer(Side),\n    Elements: regl.elements(Elements),\n  };\n}\n\nfunction makeCircle(): TModel {\n  const count = 40;\n  const verts = [];\n  const elements = [];\n  for (let i = 0; i < count; ++i) {\n    const angle = (TAU * i) / count;\n    verts.push([cos(angle), sin(angle), 0]);\n    elements.push([i, i + 1]);\n  }\n  elements[elements.length - 1][1] = 0;\n\n  return {\n    verts,\n    elements,\n  };\n}\n\nfunction makeLine(): TModel {\n  return {\n    verts: [\n      [0, 0, 0],\n      [0, 1, 0],\n    ],\n    elements: [[0, 1]],\n  };\n}\n\nfunction makeMine(): TModel {\n  const verts: number[][] = [],\n    elements: number[][] = [];\n  for (let h = -0.7; h <= 0.8; h += 0.7) {\n    for (let a = 0; a < TAU; a += 1.2) {\n      const r = sqrt(1 - h * h);\n      verts.push([cos(a) * r, h, sin(a) * r]);\n      verts.push([cos(a) * (r * 0.5), h * 0.5, sin(a) * (r * 0.5)]);\n      const l = verts.length;\n      elements.push([l - 2, l - 1]);\n    }\n  }\n  return { verts, elements };\n}\n\nfunction makeEye(): TModel {\n  return {\n    verts: [\n      [-2, 0, 0],\n      [-2, -1, 0],\n      [0, -2, 0],\n      [2, -1, 0],\n      [2, 0, 0],\n      [2, 1, 0],\n      [0, 2, 0],\n      [-2, 1, 0],\n      // ...\n      [-0.5, -1, 0],\n      [-0.5, 1, 0],\n      [0.5, 1, 0],\n      [0.5, -1, 0],\n    ],\n    elements: [\n      [0, 1],\n      [1, 2],\n      [2, 3],\n      [3, 4],\n      [4, 5],\n      [5, 6],\n      [6, 7],\n      [7, 0],\n      // here\n      [8, 9],\n      [9, 10],\n      [10, 11],\n      [11, 8],\n    ],\n  };\n}\n\ntype ProcessedModel = ReturnType<typeof preprocessModel>;\n\n// Fix orientation that I messed up earlier\nleshipModel.verts.forEach((vert) => {\n  [vert[2], vert[1]] = [vert[1], -vert[2]];\n  vert[1] -= 0.8;\n});\ncubeModel.verts.forEach((vert) => (vert[1] -= 0.5));\n\nexport type Props = {\n  translation: Vec2;\n  rotation?: number;\n  rotationY?: number;\n  rotationZ?: number;\n  thickness?: number;\n  scale?: number;\n  color?: Vec3;\n  lights?: Vec2[];\n  lightColors?: Vec3[];\n};\n\nexport function makeMeshDrawCall(\n  model: ProcessedModel,\n  count?: number\n): (props: Props) => void {\n  return regl<Uniforms, {}, Props>({\n    vert,\n    frag,\n    primitive: \"triangles\",\n    attributes: {\n      Position: model.Position,\n      Normal: model.Normal,\n      Side: model.Side,\n      Life: { constant: [1] },\n    },\n    elements: model.Elements,\n    // @ts-ignore\n    count: count ? (context, props) => count : undefined,\n    uniforms: {\n      Translation: (context, props) => props.translation,\n      Rotation: (context, props) => props.rotation || 0,\n      RotationY: (context, props) => props.rotationY || 0,\n      RotationZ: (context, props) => props.rotationZ || 0,\n      Thickness: (context, props) => props.thickness * 0.01 || 0.01,\n      Scale: (context, props) => props.scale || 0.5,\n      Color: (context, props) => props.color || [1, 1, 0],\n      LifeMax: () => 1,\n    },\n  });\n}\n\nconst drawCube = makeMeshDrawCall(preprocessModel(cubeModel));\nconst drawAsteroid = makeMeshDrawCall(preprocessModel(asteroidModel));\nconst drawAsteroid2 = makeMeshDrawCall(preprocessModel(asteroid2Model));\nconst drawAsteroid3 = makeMeshDrawCall(preprocessModel(asteroid3Model));\nconst drawLeship = makeMeshDrawCall(preprocessModel(leshipModel));\nconst drawCircle = makeMeshDrawCall(preprocessModel(makeCircle()));\nconst drawLine = makeMeshDrawCall(preprocessModel(makeLine()));\nconst drawMine = makeMeshDrawCall(preprocessModel(makeMine()));\nconst drawEye = makeMeshDrawCall(preprocessModel(makeEye()));\nconst drawEye2 = makeMeshDrawCall(preprocessModel(makeEye()), 6 * 4);\n\nexport {\n  drawCube,\n  drawAsteroid,\n  drawAsteroid2,\n  drawAsteroid3,\n  drawLeship,\n  drawCircle,\n  drawLine,\n  drawMine,\n  drawEye,\n  drawEye2,\n};\n","// import initRegl from \"regl\";\n// const regl = initRegl(gl);\n// export default regl;\n\nimport type { Vec2, Vec3, Vec4 } from \"regl\";\n\nconst canvas = document.getElementById(\"C\") as HTMLCanvasElement;\nexport const gl = canvas.getContext(\"webgl\");\n\n// TMP\n// import initRegl from \"regl\";\n// const oldRegl = initRegl(gl);\n// END TMP\n\n// @ts-ignore\nimport vert from \"./shader.vert\";\n// @ts-ignore\nimport frag from \"./shader.frag\";\n// @ts-ignore\nimport lightFrag from \"./light.frag\";\nexport { vert, frag, lightFrag };\n\nconst vs = gl.createShader(gl.VERTEX_SHADER);\nconst fs = gl.createShader(gl.FRAGMENT_SHADER);\nconst ls = gl.createShader(gl.FRAGMENT_SHADER);\nconst vprog = gl.createProgram();\nconst lprog = gl.createProgram();\ngl.shaderSource(vs, vert);\ngl.shaderSource(fs, frag);\ngl.shaderSource(ls, lightFrag);\ngl.compileShader(vs);\ngl.compileShader(fs);\ngl.compileShader(ls);\ngl.attachShader(vprog, vs);\ngl.attachShader(vprog, fs);\ngl.attachShader(lprog, vs);\ngl.attachShader(lprog, ls);\ngl.linkProgram(vprog);\ngl.linkProgram(lprog);\n\n// TMP just validate shader\n// oldRegl({\n//   vert,\n//   frag: lightFrag,\n// });\n\nconst positionLoc = gl.getAttribLocation(vprog, \"Position\");\nconst normalLoc = gl.getAttribLocation(vprog, \"Normal\");\nconst sideLoc = gl.getAttribLocation(vprog, \"Side\");\nconst lifeLoc = gl.getAttribLocation(vprog, \"Life\");\n\nfunction bufferFromSize(n: number) {\n  const b = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, b);\n  gl.bufferData(gl.ARRAY_BUFFER, n, gl.STREAM_DRAW);\n  return b;\n}\n\nfunction bufferFromData(data: number[]) {\n  const b = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, b);\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data), gl.STATIC_DRAW);\n  return b;\n}\n\nfunction buffer(data) {\n  let buf: WebGLBuffer;\n  if (Array.isArray(data)) {\n    buf = bufferFromData(data);\n  } else if (data.data) {\n    buf = bufferFromData(data.data);\n  } else {\n    buf = bufferFromSize(data.length);\n  }\n  return {\n    buf,\n    subdata(data: number[]) {\n      gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n      gl.bufferSubData(\n        gl.ARRAY_BUFFER,\n        0,\n        new Float32Array(data.flatMap((x) => x))\n      );\n    },\n  };\n}\n\ntype TBuffer = ReturnType<typeof buffer>;\n\nfunction elements(data: number[]) {\n  const buf = gl.createBuffer();\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buf);\n  gl.bufferData(\n    gl.ELEMENT_ARRAY_BUFFER,\n    new Int16Array(data.flatMap((x) => x)),\n    gl.STATIC_DRAW\n  );\n  return {\n    buffer: buf,\n    length: data.length,\n    subdata(data: number[][]) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buf);\n      gl.bufferSubData(\n        gl.ELEMENT_ARRAY_BUFFER,\n        0,\n        new Int16Array(data.flatMap((x) => x))\n      );\n    },\n  };\n}\n\nlet previousTime = null;\nfunction frame(cb) {\n  function handler(currentTime) {\n    const delta = currentTime - (previousTime || currentTime);\n    previousTime = currentTime;\n    const context = {\n      time: currentTime / 1000,\n    };\n    cb(context);\n    window.requestAnimationFrame(handler);\n  }\n  window.requestAnimationFrame(handler);\n}\n\nfunction clear({ color }: { color: Vec4 }) {\n  gl.clearColor(...color);\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n}\n\ntype TElementBuffer = ReturnType<typeof elements>;\n\nconst LIGHTS = 4;\nconst lightbuf = new Float32Array(2 * LIGHTS);\nconst lightcolbuf = new Float32Array(3 * LIGHTS);\n\nexport type Uniforms = {\n  Translation: Vec2;\n  Rotation: number;\n  RotationY: number;\n  RotationZ: number;\n  Thickness: number;\n  Scale: number;\n  Color: Vec3;\n  LifeMax: number;\n};\n\nfunction myRegl<TU, TA, TP>({\n  attributes,\n  uniforms,\n  elements,\n  count,\n}: {\n  vert?: any;\n  frag?: any;\n  depth?: any;\n  primitive: \"triangles\";\n  attributes: {\n    Position: TBuffer;\n    Normal: TBuffer;\n    Side: TBuffer;\n    Life: TBuffer | { constant: [1] };\n  };\n  elements: TElementBuffer;\n  count?: (a: 0, props: any) => number;\n  uniforms: {\n    Rotation: (a: 0, props: any) => number;\n    RotationY: (a: 0, props: any) => number;\n    RotationZ: (a: 0, props: any) => number;\n    Translation: (a: 0, props: any) => Vec3;\n    Thickness: (a: 0, props: any) => number;\n    Scale: (a: 0, props: any) => number;\n    Color: (a: 0, props: any) => Vec3;\n    LifeMax: (a: 0, props: any) => number;\n  };\n}) {\n  return (props) => {\n    let prog = props.lights ? lprog : vprog;\n    gl.useProgram(prog);\n    gl.enableVertexAttribArray(positionLoc);\n    gl.bindBuffer(gl.ARRAY_BUFFER, attributes.Position.buf);\n    gl.vertexAttribPointer(positionLoc, 3, gl.FLOAT, false, 0, 0);\n\n    gl.enableVertexAttribArray(normalLoc);\n    gl.bindBuffer(gl.ARRAY_BUFFER, attributes.Normal.buf);\n    gl.vertexAttribPointer(normalLoc, 3, gl.FLOAT, false, 0, 0);\n\n    gl.enableVertexAttribArray(sideLoc);\n    gl.bindBuffer(gl.ARRAY_BUFFER, attributes.Side.buf);\n    gl.vertexAttribPointer(sideLoc, 1, gl.FLOAT, false, 0, 0);\n\n    if (\"constant\" in attributes.Life) {\n      gl.disableVertexAttribArray(lifeLoc);\n      gl.vertexAttrib4f(lifeLoc, 1, 0, 0, 0);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, attributes.Life.buf);\n      gl.vertexAttribPointer(lifeLoc, 1, gl.FLOAT, false, 0, 0);\n      gl.enableVertexAttribArray(lifeLoc);\n    }\n\n    gl.uniform1f(\n      gl.getUniformLocation(prog, \"Rotation\"),\n      uniforms.Rotation(0, props)\n    );\n    gl.uniform1f(\n      gl.getUniformLocation(prog, \"RotationY\"),\n      uniforms.RotationY(0, props)\n    );\n    gl.uniform1f(\n      gl.getUniformLocation(prog, \"RotationZ\"),\n      uniforms.RotationZ(0, props)\n    );\n    gl.uniform2fv(\n      gl.getUniformLocation(prog, \"Translation\"),\n      uniforms.Translation(0, props)\n    );\n    gl.uniform1f(\n      gl.getUniformLocation(prog, \"Thickness\"),\n      uniforms.Thickness(0, props)\n    );\n    gl.uniform1f(\n      gl.getUniformLocation(prog, \"Scale\"),\n      uniforms.Scale(0, props)\n    );\n    gl.uniform3fv(\n      gl.getUniformLocation(prog, \"Color\"),\n      uniforms.Color(0, props)\n    );\n    gl.uniform1f(\n      gl.getUniformLocation(prog, \"LifeMax\"),\n      uniforms.LifeMax(0, props)\n    );\n    if (props.lights) {\n      lightbuf.set(props.lights.flat());\n      gl.uniform2fv(gl.getUniformLocation(prog, \"Lights\"), lightbuf);\n      lightcolbuf.fill(0);\n      lightcolbuf.set(props.lightColors.flat());\n      gl.uniform3fv(gl.getUniformLocation(prog, \"LightColors\"), lightcolbuf);\n    }\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elements.buffer);\n    gl.drawElements(\n      gl.TRIANGLES,\n      count ? count(0, props) : elements.length,\n      gl.UNSIGNED_SHORT,\n      0\n    );\n    gl.enableVertexAttribArray(lifeLoc);\n  };\n}\n\nmyRegl.buffer = buffer;\nmyRegl.elements = elements;\nmyRegl.frame = frame;\nmyRegl.clear = clear;\nexport default myRegl;\n","precision mediump float;\n\nattribute vec3 Position;\nattribute vec3 Normal;\nattribute float Side;\nattribute float Life;\n\nuniform vec2 Translation;\nuniform float Rotation;\nuniform float RotationY;\nuniform float RotationZ;\nuniform float Thickness;\nuniform float Scale;\nuniform vec3 Color;\n\nvarying float VBar;\nvarying vec3 VColor;\nvarying float VLife;\nvarying float VBar2;\nvarying vec2 VPos;\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nmat4 rotationMatrix(vec3 axis, float angle) {\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n    \n    return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\n                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\n                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\n                0.0,                                0.0,                                0.0,                                1.0);\n}\n\nvec3 rotate(vec3 v, vec3 axis, float angle) {\n\tmat4 m = rotationMatrix(axis, angle);\n\treturn (m * vec4(v, 1.0)).xyz;\n}\n\nvoid main() {\n    float depthMultiplier = 6.0;\n    float Aspect = 16./9.;\n    \n    // MODEL SPACE\n\n    // Rotate and scale the model\n    vec3 pos = Position;\n    vec3 norm = Normal;\n\n    pos *= Scale;\n\n    vec3 rotationAxis = vec3(1.0, 1.0, 0.2);\n    pos = rotate(pos, rotationAxis, Rotation);\n    norm = rotate(norm, rotationAxis, Rotation);\n\n    mat3 RY = mat3(\n        cos(RotationY),    0,    -sin(RotationY),\n        0,                 1,    0,\n        sin(RotationY),    0,    cos(RotationY)\n    );\n    pos = RY*pos;\n    norm = RY*norm;\n\n    // Downcast model to 2D\n    vec2 pos2d = pos.xy;\n    vec2 norm2d = norm.xy;\n    vec2 binormal = normalize(vec2(norm2d.y, -norm2d.x));\n\n    // Faux perspective\n    // float pseudoDepth = (pos.z*depthMultiplier + 1.0) * 0.5;\n    // float depthScaleFactor = pow(2.0, pseudoDepth) *0.5;\n\n    float pseudoDepth = pos.z*7.0;\n    float depthScaleFactor = pow(2.0, pseudoDepth);\n    pos2d *= depthScaleFactor; // This effect is somewhat fishy\n\n    // Extrude the line\n    pos2d = pos2d + binormal * Side * Thickness * depthScaleFactor;\n\n    \n    // Rotate again (not entirely clear why I didn't do that in model space)\n    mat2 RZ = mat2(cos(RotationZ), -sin(RotationZ), sin(RotationZ), cos(RotationZ));\n    pos2d = RZ * pos2d;\n\n    // Scale everything to match screen aspect ratio\n    pos2d *= vec2(1, Aspect);\n\n    // Move to right place\n    pos2d += Translation * vec2(1./16.0, 1./9.);\n\n    // Output   \n    gl_Position = vec4(pos2d, -pos.z, 1);\n    VBar = Side;\n    VColor = Color;\n    VLife = Life;\n    VPos=pos2d;\n}\n","precision mediump float;\n\nvarying float VBar;\nvarying vec3 VColor;\nvarying float VLife;\n\nuniform float LifeMax;\n\nvoid main() {\n    // Left and right edges\n    float r1 = max(0., VBar);\n    float r2 = -min(0., VBar);\n\n    // Distance from center\n    float r3 = abs(VBar);\n    r3 *= r3;\n    r3 = 1.0-r3;\n\n    float f = pow(\n        pow(sin(gl_FragCoord.y), 2.0),\n        0.4);\n    vec3 color = VColor * (VLife/LifeMax) * f;\n\n    gl_FragColor = vec4(color, 1);\n}\n","precision mediump float;\n\n#define LN 4\n\nvarying vec2 VPos;\nuniform vec2 Lights[LN];\nuniform vec3 LightColors[LN];\n\nfloat rand(vec2 c){\n\treturn fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 p, float freq ){\n\tfloat unit = 10.0/freq;\n\tvec2 ij = floor(p/unit);\n\tvec2 xy = mod(p,unit)/unit;\n\t//xy = 3.*xy*xy-2.*xy*xy*xy;\n\txy = .5*(1.-cos(3.14159*xy));\n\tfloat a = rand((ij+vec2(0.,0.)));\n\tfloat b = rand((ij+vec2(1.,0.)));\n\tfloat c = rand((ij+vec2(0.,1.)));\n\tfloat d = rand((ij+vec2(1.,1.)));\n\tfloat x1 = mix(a, b, xy.x);\n\tfloat x2 = mix(c, d, xy.x);\n\treturn mix(x1, x2, xy.y);\n}\n\nfloat pNoise(vec2 p){\n\tfloat persistance = .5;\n\tfloat n = 0.;\n\tfloat normK = 0.;\n\tfloat f = 4.;\n\tfloat amp = 1.;\n\tfor (int i = 0; i<8; i++){\n\t\tn+=amp*noise(p, f);\n\t\tf*=2.;\n\t\tnormK+=amp;\n\t\tamp*=persistance;\n\t}\n\tfloat nf = n/normK;\n\treturn nf*nf*nf*nf;\n}\n\nfloat sq(float x) {return x*x;}\n\nvoid main() {\n    vec3 color = vec3(0., 0., 0.);\n\n    for (int i=0; i<3;++i) {\n        vec2 lightPos = Lights[i];\n        vec2 adjustedLightPos = lightPos/vec2(16.,9.);\n        vec3 light = LightColors[i];\n        float dist2 = sq(adjustedLightPos[0]-VPos[0]) + sq((adjustedLightPos[1]-VPos[1])*9./16.);\n        float intensity = clamp(1.0 - dist2, 0.0, 1.0);\n        color += light * intensity * 0.1;\n    }\n\n    // float n = clamp(pNoise(VPos+vec2(8.,4.), 2000), 0., 1.);\n    float n = pNoise(VPos+vec2(8.,4.))*20.0;\n    float cl=clamp(n,0.0,1.0);\n    color *= vec3(cl,cl,cl);\n\n    gl_FragColor = vec4(\n        color,\n        1.\n    );\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","{\"verts\": [[0.5, 0.0, 0.5], [-0.5, 0.0, 0.5], [-0.5, 0.0, -0.5], [0.5, 0.0, -0.5], [0.5, 1.0, 0.5], [-0.5, 1.0, 0.5], [0.5, 1.0, -0.5], [-0.5, 1.0, -0.5]], \"elements\": [[0, 1], [1, 2], [2, 3], [3, 0], [1, 0], [0, 4], [4, 5], [5, 1], [0, 3], [3, 6], [6, 4], [4, 0], [3, 2], [2, 7], [7, 6], [6, 3], [2, 1], [1, 5], [5, 7], [7, 2], [5, 4], [4, 6], [6, 7], [7, 5]]}\n","{\"verts\": [[0.27823292387637866, 0.6731197734314913, 0.5504444219489406], [1.0, 0.0, 0.2576565192551816], [0.422046679721816, 0.0, 0.9424770574950171], [0.9124665040009029, 0.4394209657319785, -0.0], [0.8249330080018058, 0.0, -0.6211854122087753], [0.9124665040009029, 2.1521448493247274e-18, -0.0], [-0.7799474303347215, -0.483444278830994, -0.0], [-1.012761932022466, 0.0, -0.0], [-0.6314468526269124, 0.7918087664978339, -0.0], [0.2253607328569716, 0.9873695503187574, -0.0], [0.9124665040009029, -0.4394209657319785, -0.0], [0.2253607328569716, -0.9873695503187574, -0.0], [-0.6314468526269124, -0.7918087664978339, -0.0], [-0.7891756289917398, 0.0, -0.666023217687051], [0.02867513506028989, -0.5877144296633471, -1.0322620431424978], [0.02867513506028989, 0.0, -1.0322620431424978], [-0.1587073307804815, 0.6731197734314913, -0.6333888351711773], [-0.4737169127015432, 0.0, 0.917594315308617], [-0.4737169127015432, -0.6873152120414554, 0.917594315308617], [0.3476404737553102, -0.7226874525121854, 0.917594315308617]], \"elements\": [[0, 1], [1, 2], [2, 0], [3, 1], [1, 0], [0, 3], [1, 3], [3, 4], [4, 1], [3, 5], [5, 1], [1, 3], [3, 5], [5, 4], [4, 3], [12, 13], [13, 7], [7, 6], [6, 12], [13, 14], [14, 12], [12, 13], [14, 13], [13, 15], [15, 14], [13, 16], [16, 15], [15, 13], [8, 16], [16, 13], [13, 8], [16, 8], [8, 9], [9, 16], [0, 8], [8, 9], [9, 0], [8, 0], [0, 17], [17, 8], [0, 17], [17, 2], [2, 0], [18, 2], [2, 17], [17, 18], [2, 18], [18, 19], [19, 2], [19, 11], [11, 18], [18, 19], [19, 10], [10, 11], [11, 19], [1, 19], [19, 10], [10, 1], [19, 1], [1, 2], [2, 19], [4, 10], [10, 1], [1, 4], [14, 4], [4, 10], [10, 14], [4, 14], [14, 15], [15, 4], [16, 15], [15, 4], [4, 16], [16, 4], [4, 3], [3, 16], [9, 3], [3, 16], [16, 9], [3, 9], [9, 0], [0, 3], [10, 4], [4, 5], [5, 10], [4, 1], [1, 5], [5, 4], [10, 1], [1, 5], [5, 10], [14, 10], [10, 11], [11, 14], [14, 12], [12, 11], [11, 14], [18, 11], [11, 12], [12, 18], [7, 18], [18, 12], [12, 6], [6, 7], [18, 7], [7, 17], [17, 18], [7, 17], [17, 8], [8, 7], [13, 7], [7, 8], [8, 13]]}\n","{\"verts\": [[-0.26616498934972227, 0.778708328983637, -0.17873764778787402], [-0.9804203694613558, 0.1331051501144988, -0.18733027855085146], [-0.5146089826597042, -0.505206530985756, 0.7267038778560846], [0.09680047443155947, 0.23085404344069496, 1.0], [0.7403153548352706, 0.500408908474245, -0.1279157217645478], [-0.2501093902355055, 0.13761091725655952, -0.9354515429020729], [0.2327166759583584, -0.84028847926472, -0.31853414863301077], [0.954179595444924, -0.34139393145174723, -0.16851426959528945]], \"elements\": [[0, 1], [1, 2], [2, 3], [3, 0], [0, 3], [3, 4], [4, 0], [2, 1], [1, 5], [5, 6], [6, 2], [3, 7], [7, 4], [4, 3], [5, 4], [4, 7], [7, 5], [5, 1], [1, 0], [0, 5], [3, 2], [2, 6], [6, 7], [7, 3], [5, 0], [0, 4], [4, 5], [5, 7], [7, 6], [6, 5]]}\n","{\"verts\": [[-0.0, -0.3308774366732588, -0.8620745881937901], [0.9804048934048908, -0.3308774366732588, 0.41187707131751694], [-0.9804048934048908, -0.3308774366732588, 0.41187707131751694], [-0.0, 1.0, -0.012773354861002903]], \"elements\": [[0, 3], [3, 1], [1, 0], [0, 1], [1, 2], [2, 0], [1, 3], [3, 2], [2, 1], [2, 3], [3, 0], [0, 2]]}\n","{\"verts\": [[0.0, -0.24274690774293603, -0.37162310398305404], [1.0, 0.0, -0.4054525853916859], [0.0, 0.0, -0.0], [0.0, 0.0, -2.6617713810190264], [-1.0, 0.0, -0.4054525853916859], [0.0, 0.9031849302114461, -0.5181185459772288]], \"elements\": [[0, 1], [1, 2], [2, 0], [0, 3], [3, 1], [1, 0], [3, 0], [0, 4], [4, 3], [4, 0], [0, 2], [2, 4], [5, 4], [4, 2], [2, 5], [5, 3], [3, 4], [4, 5], [3, 5], [5, 1], [1, 3], [1, 5], [5, 2], [2, 1], [4, 3], [3, 1], [1, 2], [2, 4]]}\n","const { cos, sin, random, PI, pow, min, max, sqrt, sign } = Math;\nconst r1 = () => random() * 0.1;\nconst r2 = () => random() * 0.2;\nconst r11 = () => random() * 2 - 1;\nconst sq = (x) => x * x;\n\nconst TAU = 2 * PI; // what?\nfunction lerp(a: number, b: number, c: number) {\n  c = max(0, min(1, c));\n  return a * (1 - c) + b * c;\n}\n\nexport {\n  cos,\n  sin,\n  random,\n  TAU,\n  pow,\n  min,\n  max,\n  sq,\n  sqrt,\n  r1,\n  r2,\n  r11,\n  lerp,\n  sign,\n};\n","import { Vec2, Vec3 } from \"regl\";\nimport {\n  currentBeatFraction,\n  playBoom,\n  playE,\n  playQ,\n  playS,\n  playW,\n} from \"./audio\";\nimport input from \"./input\";\nimport { cos, max, pow, r11, r2, random, sign, sin, sq, TAU } from \"./math\";\nimport {\n  makeExhaust,\n  makeExplosion,\n  particles,\n  TParticleEffect,\n} from \"./particles\";\n\ntype TAsteroid = {\n  pos: Vec2;\n  vec: Vec2;\n  rotation: number;\n  rZ: number;\n  color: Vec3;\n  collides?: boolean;\n  colliderSize: number;\n  children: number[];\n  generation: number;\n  has?: \"m\" | \"p\" | \"a\";\n};\n\ntype TPowerup = {\n  pos: Vec2;\n  vec: Vec2;\n  collides?: boolean;\n};\n\nexport type TBullet = {\n  pos: Vec2;\n  vec: Vec2;\n  rotation: number;\n  life: number;\n  collides?: boolean;\n};\n\ntype TMortarBlast = {\n  pos: Vec2;\n  life: number;\n  size: number;\n};\n\ntype TSign = {\n  pos: Vec2;\n  life: number;\n  index: number;\n  size?: number;\n  color?: Vec3;\n  v?: number;\n};\n\ntype TMine = {\n  pos: Vec2;\n  vec: Vec2;\n  life: number;\n  inv: number; // invulnerability time left\n  collides?: boolean;\n  colliderSize: number;\n};\n\ntype TAlien = {\n  pos: Vec2;\n  vec: Vec2;\n  hits: number;\n  inv: number; // invulnerability time left\n  collides?: boolean;\n  colliderSize: number;\n  shootTimer: number;\n  shootCooldown?: number;\n  shootAngle?: number;\n};\n\ntype TState = {\n  title: boolean;\n  level: number;\n  rotation: number;\n  asteroids: TAsteroid[];\n  bullets: TBullet[];\n  mortars: TBullet[];\n  enemyBullets: TBullet[];\n  ship: {\n    pos: Vec2;\n    vec: Vec2;\n    thrust: number;\n    angle: number;\n    collides?: boolean;\n    colliderSize: number;\n    aura: number;\n    hitTimer: number;\n    powerups: number;\n  };\n  auraSize: number;\n  blasts: TMortarBlast[];\n  cooldowns: number[];\n  scheduledBullets: number[];\n  scheduledMortar?: number;\n  renderHitboxes?: boolean;\n  mines: TMine[];\n  aliens: TAlien[];\n  signs: TSign[];\n  powerups: TPowerup[];\n  win: number;\n  score: number;\n  combo: number;\n  hp: number;\n};\n\ntype TShip = TState[\"ship\"];\n\n// mutators\n\nexport function newAsteroid(args = {}) {\n  const x = random() * 3.14 * 2;\n  const t = random() * 3.14 * 2;\n  state.asteroids.push({\n    pos: [cos(t) * 16, sin(t) * 9],\n    vec: [cos(x) * 4, sin(x) * 4],\n    rotation: 0,\n    rZ: random(),\n    color: [0.7 + r2(), 0.4 + r2(), 0.1 + r2()],\n    colliderSize: 1.6,\n    children: [4, 3],\n    generation: 0,\n    ...args,\n  });\n}\n\nfunction baseState(): TState {\n  return {\n    title: false,\n    level: 0,\n    asteroids: [],\n    bullets: [],\n    mortars: [],\n    enemyBullets: [],\n    rotation: 0,\n    ship: {\n      pos: [0, 0],\n      vec: [0, 0],\n      thrust: 0,\n      angle: 1,\n      colliderSize: 0.5,\n      aura: 0,\n      hitTimer: 0,\n      powerups: 0,\n    },\n    auraSize: 5,\n    blasts: [],\n    cooldowns: [0, 0, 0],\n    scheduledBullets: [],\n    mines: [],\n    aliens: [],\n    signs: [],\n    powerups: [],\n    win: 0,\n    score: 0,\n    combo: 0,\n    hp: 9,\n  };\n}\nexport function titleScreen() {\n  Object.assign(state, {\n    ...baseState(),\n    title: true,\n    asteroids: [\n      {\n        pos: [-11, 2],\n        vec: [0, 0],\n        rotation: 0,\n        rZ: random(),\n        color: [0.7 + r2(), 0.4 + r2(), 0.1 + r2()],\n        colliderSize: 2.6,\n        children: [],\n        generation: 0,\n      },\n      {\n        pos: [11, 2],\n        vec: [0, 0],\n        rotation: 0,\n        rZ: random(),\n        color: [0.7 + r2(), 0.4 + r2(), 0.1 + r2()],\n        colliderSize: 2.6,\n        children: [],\n        generation: 0,\n      },\n    ],\n    mines: [\n      {\n        pos: [0, -2],\n        vec: [0, 0],\n        life: 1,\n        colliderSize: 0.5,\n      },\n    ],\n    win: 0,\n  });\n}\n\nexport function setLevel(n: number = 0) {\n  state.title = false;\n  state.level = n;\n  state.asteroids = [];\n  state.mines = [];\n  state.aliens = [];\n  state.win = 0;\n  state.ship.pos = [0, 0];\n  state.ship.vec = [0, 0];\n  state.signs.push({\n    index: n + 4,\n    life: 2,\n    pos: [0, 0],\n  });\n  const asteroidCount = [1, 2, 2, 3, 3, 3][n];\n  const extraAsteroids = [[], [\"p\"], [\"p\"], [\"p\", \"a\"], [\"p\"], [\"a\"]];\n  for (let i = 0; i < asteroidCount; ++i) newAsteroid();\n  if (n > 0)\n    Array(n + 1)\n      .fill(0)\n      .map((_, i) =>\n        newAsteroid({\n          colliderSize: 1,\n          children: [5],\n          generation: 1,\n          has: extraAsteroids[n][i],\n          color: extraAsteroids[n][i] == \"a\" ? [1, 1, 1] : undefined,\n        })\n      );\n}\n\n// initial state\n\nconst state: TState = baseState();\ntitleScreen();\n\n// save state on refresh\n\nObject.assign(state, JSON.parse(sessionStorage.getItem(\"state\") || '\"{}\"'));\nwindow.onbeforeunload = () => {\n  sessionStorage.setItem(\"state\", JSON.stringify(state));\n};\n\n// Step\n\nfunction step(dt: number) {\n  if (dt > 1) return;\n  state.rotation += dt;\n  state.signs = state.signs.flatMap((x) => {\n    x.life -= dt;\n    return x.life > 0 ? [x] : [];\n  });\n  if (state.title) {\n    return;\n  }\n\n  state.ship.collides = false;\n  [...state.asteroids, ...state.mines, ...state.aliens].forEach((a) => {\n    move(a, dt);\n    // @ts-ignore\n    if (a.rotation !== undefined) a.rotation += dt;\n    // @ts-ignore\n    if (a.life !== undefined) a.life -= dt;\n    // @ts-ignore\n    if (a.inv !== undefined) a.inv -= dt;\n    a.collides = false;\n    if (state.ship.hitTimer === 0) {\n      collide(a, state.ship, state.ship.colliderSize);\n    }\n    if (state.ship.aura) {\n      collideAura(a, state.ship, state.ship.aura * state.auraSize);\n    }\n    state.blasts.forEach((b) => {\n      collideAura(a, b, b.size * 3);\n    });\n  });\n  state.powerups = state.powerups.flatMap((p) => {\n    move(p, dt);\n    collide(state.ship, p, 1);\n    if (p.collides) {\n      state.ship.collides = false; //:)\n      applyPowerup();\n      return [];\n    }\n    return [p];\n  });\n\n  state.bullets = state.bullets.flatMap((b) => {\n    move(b, dt);\n    b.life -= dt;\n    if (b.life > 0 && !b.collides) {\n      return [b];\n    }\n    return [];\n  });\n  state.mortars = state.mortars.flatMap((m) => {\n    move(m, dt);\n    m.life -= dt;\n    if (m.life > 0) {\n      return [m];\n    } else {\n      state.blasts.push({\n        pos: m.pos,\n        life: 0.3,\n        size: 0,\n      });\n      return [];\n    }\n  });\n  state.enemyBullets.map((b) => {\n    move(b, dt);\n    b.life -= dt;\n  });\n\n  // O(n^2) party [INSERT QUADTREE HERE]\n  [...state.bullets, ...state.enemyBullets].forEach((b) => {\n    state.asteroids.forEach((a) => {\n      collide(a, b, 0);\n    });\n  });\n  state.bullets.forEach((b) => {\n    [...state.mines, ...state.aliens].forEach((a) => {\n      collide(a, b, 0);\n    });\n  });\n  // end O(N^2) party\n  if (state.ship.hitTimer === 0) {\n    state.enemyBullets.forEach((b) => {\n      collide(state.ship, b, 0);\n    });\n  }\n\n  state.enemyBullets = state.enemyBullets.flatMap((b) => {\n    if (b.life > 0 && !b.collides) {\n      return [b];\n    }\n    if (state.ship.collides) {\n      boom(b.pos);\n    }\n    return [];\n  });\n\n  state.asteroids = state.asteroids.flatMap((a) => {\n    if (!a.collides) {\n      return [a];\n    }\n    score();\n    boom(a.pos);\n    const children = [...a.children];\n    if (!children.length) {\n      return [];\n    }\n    const n = children.shift();\n    if (a.has === \"m\") {\n      state.mines.push({\n        pos: [...a.pos],\n        vec: [random(), random()],\n        colliderSize: 0.5,\n        life: 3,\n        inv: 1,\n      });\n    }\n    if (a.has === \"p\") {\n      state.powerups.push({\n        pos: [...a.pos],\n        vec: [random(), random()],\n      });\n    }\n    if (a.has === \"a\") {\n      state.aliens.push({\n        pos: [...a.pos],\n        vec: [random(), random()],\n        inv: 1,\n        colliderSize: 1,\n        hits: state.level < 5 ? 3 : 5,\n        shootTimer: 0.6 * 4,\n      });\n    }\n    return Array(n)\n      .fill(0)\n      .map((_) => {\n        const x = random() * 6;\n        let has: undefined | \"m\" | \"p\";\n        const thres = [0, 0, 0.5, 0, 0.8, 0.3][state.level];\n        if (a.generation === 0 && random() < thres) has = \"m\";\n        return {\n          pos: [...a.pos],\n          vec: [cos(x) * 4, sin(x) * 4],\n          rotation: 0,\n          rZ: random(),\n          color: has === \"m\" ? [1, 0, 0] : [0.7 + r2(), 0.4 + r2(), 0.1 + r2()],\n          colliderSize: a.colliderSize / 2,\n          children: [...children],\n          generation: a.generation + 1,\n          has,\n        };\n      });\n  });\n\n  state.mines = state.mines.flatMap((m) => {\n    if (m.collides && m.inv < 0) {\n      score(25);\n      boom(m.pos);\n      return [];\n    }\n    if (m.life < 0 && currentBeatFraction() < 0.05) {\n      boom(m.pos);\n      // spawn bullets\n      for (let i = 0; i < TAU; i += TAU / 8) {\n        [15, 8].map((v) =>\n          state.enemyBullets.push({\n            life: 0.6,\n            pos: [...m.pos],\n            vec: [sin(i) * v, cos(i) * v],\n            rotation: i,\n          })\n        );\n      }\n      return [];\n    }\n    return [m];\n  });\n\n  state.aliens = state.aliens.flatMap((a) => {\n    if (a.collides && a.inv < 0 && a.hits === 0) {\n      booms(a.pos, 4);\n      return [];\n    }\n    if (a.collides && a.inv < 0) {\n      score(50);\n      // teleport\n      boom(a.pos);\n      a.hits -= 1;\n      a.pos = [r11() * 6, r11() * 3];\n      // Reset shot timer\n      a.shootTimer = (4 - currentBeatFraction()) * 0.6;\n      a.shootCooldown = 0;\n      boom(a.pos);\n      // Small invulnerability to avoid lucky hits after teleport\n      a.inv = 0.3;\n    }\n    a.shootTimer -= dt;\n    if (a.shootTimer <= 0 && state.hp) {\n      playS();\n      a.shootTimer = (4 - currentBeatFraction()) * 0.6;\n      a.shootCooldown = 1.2;\n      a.shootAngle = Math.atan2(\n        state.ship.pos[0] - a.pos[0],\n        state.ship.pos[1] - a.pos[1]\n      );\n    }\n    a.shootCooldown = max(0, a.shootCooldown - dt);\n    if (\n      a.shootCooldown > 0.1 &&\n      a.shootCooldown <= 0.6 &&\n      !state.ship.hitTimer &&\n      state.hp\n    ) {\n      // hit moment, scan collision\n      const co = cos(a.shootAngle),\n        si = sin(a.shootAngle);\n      for (let i = 0; i < 30; ++i) {\n        const p: Vec2 = [a.pos[0] + si * i, a.pos[1] + co * i];\n        collide(state.ship, { pos: p }, 0);\n        if (state.ship.collides) {\n          boom(state.ship.pos);\n          break;\n        }\n      }\n    }\n    if (a.shootTimer) return [a];\n  });\n\n  updateShip(state.ship, dt);\n  checkWin();\n}\n\nlet shipParticles: TParticleEffect = null;\n\nfunction updateShip(s: TShip, dt: number) {\n  const sens = 4;\n  const accel = 48;\n  s.angle += (input.right - input.left) * sens * dt;\n  if (state.hp > 0) {\n    if (s.collides) {\n      state.combo = 0;\n      if (--state.hp == 0) {\n        booms(s.pos, 5);\n        return;\n      }\n      s.hitTimer = 1.2;\n    } else {\n      s.hitTimer = max(0, s.hitTimer - dt);\n    }\n  }\n\n  const si = sin(s.angle),\n    co = cos(s.angle);\n\n  if (state.hp > 0) {\n    if (input.thrust) {\n      s.vec[0] += accel * dt * si;\n      s.vec[1] += accel * dt * co;\n    }\n    s.thrust += (input.right - input.left) * dt * 4;\n    s.vec[0] *= pow(0.5, dt * 2);\n    s.vec[1] *= pow(0.5, dt * 2);\n    s.thrust *= pow(0.5, dt * 3);\n\n    move(s, dt);\n  }\n\n  if (!shipParticles) shipParticles = makeExhaust();\n  shipParticles.pos = [s.pos[0] - si * 0.6, s.pos[1] - co * 0.6];\n  shipParticles.vec = [s.vec[0] - si * 10, s.vec[1] - co * 10];\n  shipParticles.variance = 3;\n  shipParticles.rate = state.hp && input.thrust ? 0.02 : 100;\n  shipParticles.update(dt);\n\n  if (state.hp)\n    state.scheduledBullets = state.scheduledBullets.flatMap((delay) => {\n      delay -= dt;\n      if (delay > 0) {\n        return [delay];\n      } else {\n        if (s.powerups < 3) {\n          state.bullets.push({\n            life: 1,\n            pos: [s.pos[0] + si, s.pos[1] + co],\n            vec: [si * 33 + s.vec[0], co * 33 + s.vec[1]],\n            rotation: s.angle,\n          });\n        } else {\n          state.bullets.push({\n            life: 1,\n            pos: [s.pos[0] + si + co * 0.2, s.pos[1] + co - si * 0.2],\n            vec: [si * 33 + s.vec[0], co * 33 + s.vec[1]],\n            rotation: s.angle,\n          });\n          state.bullets.push({\n            life: 1,\n            pos: [s.pos[0] + si - co * 0.2, s.pos[1] + co + si * 0.2],\n            vec: [si * 33 + s.vec[0], co * 33 + s.vec[1]],\n            rotation: s.angle,\n          });\n        }\n        return [];\n      }\n    });\n\n  if (state.hp && state.scheduledMortar) {\n    state.scheduledMortar = max(0, state.scheduledMortar - dt);\n    if (!state.scheduledMortar) fireMortars(s, 0.3);\n  }\n\n  if (state.ship.aura) {\n    state.ship.aura += dt;\n    if (state.ship.aura >= 0.6) {\n      state.ship.aura = 0;\n    }\n  }\n  state.blasts = state.blasts.flatMap((b) => {\n    b.life -= dt;\n    b.size += dt * 2;\n    return b.life < 0 ? [] : [b];\n  });\n\n  if (state.hp) {\n    state.cooldowns = state.cooldowns.map((x) => max(0, x - dt));\n    const adj = currentBeatFraction() * 0.6 + 0.2;\n    if (!state.ship.hitTimer) {\n      if (input.skill1 && state.cooldowns[0] === 0) {\n        state.cooldowns[0] = 0.6 * 2;\n        if (checkBeat()) {\n          state.cooldowns[0] = 0.6 * 4 - adj;\n          playQ();\n          state.scheduledBullets.push(0.15, 0.3, 0.45, 0.6, 0.75);\n        }\n      }\n      if (\n        input.skill2 &&\n        state.cooldowns[1] === 0 &&\n        state.ship.powerups >= 1\n      ) {\n        state.cooldowns[1] = 0.6 * 2;\n        if (checkBeat()) {\n          state.cooldowns[1] = 0.6 * 8 - adj;\n          playW();\n          state.ship.aura = 0.1;\n        }\n      }\n      if (\n        input.skill3 &&\n        state.cooldowns[2] === 0 &&\n        state.ship.powerups >= 2\n      ) {\n        state.cooldowns[2] = 0.6 * 2;\n        if (checkBeat()) {\n          state.cooldowns[2] = 0.6 * 8 - adj;\n          playE();\n          fireMortars(s);\n          state.scheduledMortar = 0.6 * (3 / 16) * 4;\n        }\n      }\n    }\n  }\n}\n\nfunction applyPowerup() {\n  if (state.ship.powerups >= 4) return;\n  const v = (state.ship.powerups += 1);\n  // v=1: unlocks aura\n  // v=2: unlocks mortar\n  // v=3: improves gun\n  if (v === 4) state.auraSize *= 1.6;\n  state.signs.push({\n    pos: [0, 2],\n    life: 0.6 * 8,\n    size: 0.004,\n    index: 18 + v,\n  });\n}\n\nfunction score(n = 10) {\n  if (state.hp) state.score += n + state.combo++;\n}\n\nfunction checkBeat(t: number = 0.2): boolean {\n  const f = currentBeatFraction();\n  if (f > 0.75 || f < 0.2) {\n    console.debug(\"checkBeat\", f, \"true\");\n    return true;\n  }\n  const { pos } = state.ship;\n  state.signs.push({\n    index: 17,\n    life: 0.7,\n    v: 0,\n    pos: [pos[0], pos[1] - sign(pos[1])],\n    size: 0.0025,\n    color: [1, 0.5, 0.5],\n  });\n  console.debug(\"checkBeat\", f, \"false\");\n  state.combo = 0;\n  return false;\n}\n\nfunction fireMortars(s: TShip, o: number = 0) {\n  state.mortars.push(\n    ...[-0.3 - o, 0.3 + o].map((q) => ({\n      pos: [...s.pos] as Vec2,\n      vec: [sin(s.angle + q) * 8, cos(s.angle + q) * 8] as Vec2,\n      rotation: s.angle + q,\n      life: 0.6 * (7 / 16) * 4,\n    }))\n  );\n}\n\nfunction collide(\n  a: { pos: Vec2; colliderSize: number; collides?: boolean },\n  s: { pos: Vec2; collides?: boolean },\n  colliderSize: number\n) {\n  const dist2 = sq(a.pos[0] - s.pos[0]) + sq(a.pos[1] - s.pos[1]);\n  const rng2 = sq(a.colliderSize + colliderSize);\n  if (dist2 < rng2) {\n    a.collides = s.collides = true;\n  }\n}\n\nfunction collideAura(\n  a: { pos: Vec2; colliderSize: number; collides?: boolean },\n  s: { pos: Vec2; collides?: boolean },\n  size: number\n) {\n  const dist2 = sq(a.pos[0] - s.pos[0]) + sq(a.pos[1] - s.pos[1]);\n  if (dist2 < sq(size + a.colliderSize)) {\n    a.collides = true;\n  }\n}\n\nfunction checkWin() {\n  if (\n    !state.win &&\n    state.hp && // don't advance level if died on last asteroid\n    ![...state.asteroids, ...state.mines, ...state.aliens].length\n  ) {\n    state.win = 1;\n    state.signs.push({\n      index: 10 + (0 | (random() * 4)),\n      life: 2,\n      pos: [0, -5],\n    });\n    setTimeout(() => {\n      if (state.level < 5) {\n        setLevel(state.level + 1);\n        state.hp++;\n      }\n    }, 2200);\n  }\n}\n\nexport function boom(p: Vec2) {\n  playBoom();\n  if (particles.length < 20) particles.push(...makeExplosion(p));\n}\n\nfunction booms(p: Vec2, n) {\n  for (let i = 0; i < n; ++i) {\n    setTimeout(() => boom([p[0] + r11(), p[1] + r11()]), i * 300);\n  }\n}\n\nexport { shipParticles };\n\nfunction move({ pos, vec }: { pos: Vec2; vec: Vec2 }, dt: number) {\n  pos[0] += vec[0] * dt;\n  pos[1] += vec[1] * dt;\n  wraparound(pos);\n}\n\nfunction wraparound(p: Vec2) {\n  // wraparound with a little deadzone for simplicity\n  // idea: different deadzone for different objects\n  if (p[0] > 17) p[0] -= 34;\n  if (p[0] < -17) p[0] += 34;\n  if (p[1] > 10) p[1] -= 20;\n  if (p[1] < -10) p[1] += 20;\n}\n\nwindow.addEventListener(\"keyup\", (e) => {\n  if (e.code == \"KeyQ\" && state.title) {\n    setLevel();\n  }\n  if (e.key == \"Escape\") {\n    titleScreen();\n  }\n  if (e.code == \"KeyR\") {\n    if ((state.win && state.level == 5) || (!state.title && state.hp == 0)) {\n      titleScreen();\n      setLevel();\n    }\n  }\n});\n\nwindow.addEventListener(\"dblclick\", (e) => {\n  if (state.win && state.level == 5) {\n    const text = `I just beat ALL the rocks and scored ${\n      state.score * 10\n    } in Beat Rocks! #js13k @beat_rocks_game`;\n    window.open(\n      `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}`\n    );\n  } else if (!state.title && state.hp == 0) {\n    const text = `I just reached level ${state.level + 1} and scored ${\n      state.score * 10\n    } in Beat Rocks! #js13k @beat_rocks_game`;\n    window.open(\n      `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}`\n    );\n  }\n});\n\n// @ts-ignore\nwindow.state = state;\nexport { state, step };\n","import CPlayer from \"./player-small\";\nimport song from \"./song\";\n\ntype TSong = typeof song;\n\nconst ac = new AudioContext();\n\nconst bgm: TSong = {\n  ...song,\n  songData: song.songData.slice(0, 6),\n  numChannels: 6,\n};\n\nfunction getFirstIndex({ endPattern }: TSong, instrument: number) {\n  for (let px = 0; px <= endPattern; ++px) {\n    if (song.songData[instrument].p[px]) {\n      return px;\n    }\n  }\n  // throw new Error(\"Failed to find first pattern\");\n}\n\nfunction trimEffect(song: TSong, instrument: number, m: number = 0): TSong {\n  const fx = getFirstIndex(song, instrument);\n  const { i, p, c } = song.songData[instrument];\n  return {\n    ...song,\n    songData: [\n      {\n        i,\n        p: [p[fx] + m],\n        c,\n      },\n    ],\n    numChannels: 1,\n    endPattern: 1,\n  };\n}\n\nfunction trimEffect2(song: TSong, instrument: number): TSong {\n  const fx = getFirstIndex(song, instrument);\n  const { i, p, c } = song.songData[instrument];\n  const { i: i2, p: p2, c: c2 } = song.songData[instrument + 1];\n  return {\n    ...song,\n    songData: [\n      {\n        i,\n        p: p.slice(fx, fx + 1),\n        c,\n      },\n      {\n        i: i2,\n        p: p2.slice(fx, fx + 1),\n        c: c2,\n      },\n    ],\n    numChannels: 2,\n    endPattern: 1,\n  };\n}\n\nfunction toBuffer(song: TSong): AudioBuffer {\n  const p = CPlayer();\n  p.init(song);\n  while (p.generate() < 1);\n  return p.createAudioBuffer(ac);\n}\n\nfunction trimPrefix(buffer: AudioBuffer, seconds: number) {\n  const samplesToTrim = 0 | (seconds * buffer.sampleRate);\n  console.log(\"woudl trim\", { samplesToTrim, seconds, secondsPerBeat });\n  const result = ac.createBuffer(\n    2,\n    buffer.length - samplesToTrim,\n    buffer.sampleRate\n  );\n  [0, 1].forEach((n) => {\n    const data = buffer.getChannelData(n);\n    const source = data.subarray(samplesToTrim);\n    const dest = result.getChannelData(n);\n    dest.set(source);\n  });\n  return result;\n}\n\nfunction toSource(buffer: AudioBuffer, trimMs: number = 0) {\n  const source = ac.createBufferSource();\n  source.buffer = buffer;\n  source.connect(ac.destination);\n  return source;\n}\n\nconst bpm = 100;\nconst secondsPerBeat = 60 / bpm;\n\nfunction timeIntoNextBeat(): number {\n  let { currentTime } = ac;\n  const sbb = secondsPerBeat;\n\n  const beatsSoFar = 0 | (currentTime / sbb);\n  const lastBeatTime = beatsSoFar * sbb;\n  const timeIntoNextBeat = currentTime - lastBeatTime;\n  return timeIntoNextBeat;\n}\n\nexport function currentBeatFraction(): number {\n  return timeIntoNextBeat() / secondsPerBeat;\n}\n\nexport function nextBeat(): number {\n  const frac = currentBeatFraction();\n  const remainingFrac = frac ? 1 - frac : 0;\n  const nextBeat = ac.currentTime + remainingFrac * secondsPerBeat;\n  return nextBeat;\n}\n\nfunction play(\n  song: TSong,\n  { loop, now }: { loop?: boolean; now?: boolean } = {}\n) {\n  let buf = toBuffer(song);\n  return () => {\n    let source = toSource(buf);\n    source.loop = loop;\n    if (loop) {\n      source.start(nextBeat());\n      return;\n    }\n    if (now) {\n      source.start();\n      return;\n    }\n    // beat correction for the rest\n    let cbf = currentBeatFraction();\n    if (cbf > 0.2) {\n      source.start(nextBeat());\n    } else if (cbf > 0.08) {\n      const trim = (cbf - 0.08) * 0.6;\n      source = toSource(trimPrefix(buf, trim));\n      source.start();\n    } else {\n      source.start();\n    }\n  };\n}\n\nconst playBGM = play(bgm, { loop: true });\nconst playQ = play(trimEffect(song, 6));\nconst playW = play(trimEffect(song, 7));\nconst playE = play(trimEffect(song, 9));\nconst playS = play(trimEffect2(song, 11));\nconst playBoom1 = play(trimEffect(song, 10), { now: true });\nconst playBoom2 = play(trimEffect(song, 10, 1), { now: true });\n\nfunction playBoom() {\n  (Math.random() < 0.5 ? playBoom1 : playBoom2)();\n}\n\nexport { playBGM, playQ, playW, playE, playS, playBoom };\nplayBGM();\n","/*\n * Copyright (c) 2011-2013 Marcus Geelnard\n *\n * This software is provided 'as-is', without any express or implied\n * warranty. In no event will the authors be held liable for any damages\n * arising from the use of this software.\n *\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n *\n * 1. The origin of this software must not be misrepresented; you must not\n *    claim that you wrote the original software. If you use this software\n *    in a product, an acknowledgment in the product documentation would be\n *    appreciated but is not required.\n *\n * 2. Altered source versions must be plainly marked as such, and must not be\n *    misrepresented as being the original software.\n *\n * 3. This notice may not be removed or altered from any source\n *    distribution.\n */\n/*\n * ----------------------------------------------------------\n *\n * Player code altered by Kos for js13k entry\n * based on version obtained from https://sb.bitsnbites.eu/player-small.js\n */\n\nimport { random, sin } from \"./math\";\n\nexport default function CPlayer() {\n  //--------------------------------------------------------------------------\n  // Private methods\n  //--------------------------------------------------------------------------\n\n  // Oscillators\n  var osc_sin = function (value) {\n    return sin(value * 6.283184);\n  };\n\n  var osc_saw = function (value) {\n    return 2 * (value % 1) - 1;\n  };\n\n  var osc_square = function (value) {\n    return value % 1 < 0.5 ? 1 : -1;\n  };\n\n  var osc_tri = function (value) {\n    var v2 = (value % 1) * 4;\n    if (v2 < 2) return v2 - 1;\n    return 3 - v2;\n  };\n\n  var getnotefreq = function (n) {\n    // 174.61.. / 44100 = 0.003959503758 (F3)\n    return 0.003959503758 * 2 ** ((n - 128) / 12);\n  };\n\n  var createNote = function (instr, n, rowLen) {\n    var osc1 = mOscillators[instr.i[0]],\n      o1vol = instr.i[1],\n      o1xenv = instr.i[3] / 32,\n      osc2 = mOscillators[instr.i[4]],\n      o2vol = instr.i[5],\n      o2xenv = instr.i[8] / 32,\n      noiseVol = instr.i[9],\n      attack = instr.i[10] * instr.i[10] * 4,\n      sustain = instr.i[11] * instr.i[11] * 4,\n      release = instr.i[12] * instr.i[12] * 4,\n      releaseInv = 1 / release,\n      expDecay = -instr.i[13] / 16,\n      arp = instr.i[14],\n      arpInterval = rowLen * 2 ** (2 - instr.i[15]);\n\n    var noteBuf = new Int32Array(attack + sustain + release);\n\n    // Re-trig oscillators\n    var c1 = 0,\n      c2 = 0;\n\n    // Local variables.\n    var j, j2, e, t, rsample, o1t, o2t;\n\n    // Generate one note (attack + sustain + release)\n    for (j = 0, j2 = 0; j < attack + sustain + release; j++, j2++) {\n      if (j2 >= 0) {\n        // Switch arpeggio note.\n        arp = (arp >> 8) | ((arp & 255) << 4);\n        j2 -= arpInterval;\n\n        // Calculate note frequencies for the oscillators\n        o1t = getnotefreq(n + (arp & 15) + instr.i[2] - 128);\n        o2t =\n          getnotefreq(n + (arp & 15) + instr.i[6] - 128) *\n          (1 + 0.0008 * instr.i[7]);\n      }\n\n      // Envelope\n      e = 1;\n      if (j < attack) {\n        e = j / attack;\n      } else if (j >= attack + sustain) {\n        e = (j - attack - sustain) * releaseInv;\n        e = (1 - e) * 3 ** (expDecay * e);\n      }\n\n      // Oscillator 1\n      c1 += o1t * e ** o1xenv;\n      rsample = osc1(c1) * o1vol;\n\n      // Oscillator 2\n      c2 += o2t * e ** o2xenv;\n      rsample += osc2(c2) * o2vol;\n\n      // Noise oscillator\n      if (noiseVol) {\n        rsample += (2 * random() - 1) * noiseVol;\n      }\n\n      // Add to (mono) channel buffer\n      noteBuf[j] = (80 * rsample * e) | 0;\n    }\n\n    return noteBuf;\n  };\n\n  //--------------------------------------------------------------------------\n  // Private members\n  //--------------------------------------------------------------------------\n\n  // Array of oscillator functions\n  var mOscillators = [osc_sin, osc_square, osc_saw, osc_tri];\n\n  // Private variables set up by init()\n  var mSong, mLastRow, mCurrentCol, mNumWords, mMixBuf;\n\n  //--------------------------------------------------------------------------\n  // Initialization\n  //--------------------------------------------------------------------------\n\n  return {\n    init(song) {\n      // Define the song\n      mSong = song;\n\n      // Init iteration state variables\n      mLastRow = song.endPattern;\n      mCurrentCol = 0;\n\n      // Prepare song info\n      mNumWords = song.rowLen * song.patternLen * (mLastRow + 1) * 2;\n\n      // Create work buffer (initially cleared)\n      mMixBuf = new Int32Array(mNumWords);\n    },\n\n    generate() {\n      // Local variables\n      var i,\n        j,\n        b,\n        p,\n        row,\n        col,\n        n,\n        cp,\n        k,\n        t,\n        lfor,\n        e,\n        x,\n        rsample,\n        rowStartSample,\n        f,\n        da;\n\n      // Put performance critical items in local variables\n      var chnBuf = new Int32Array(mNumWords),\n        instr = mSong.songData[mCurrentCol],\n        rowLen = mSong.rowLen,\n        patternLen = mSong.patternLen;\n\n      // Clear effect state\n      var low = 0,\n        band = 0,\n        high;\n      var lsample,\n        filterActive = false;\n\n      // Clear note cache.\n      var noteCache = [];\n\n      // Patterns\n      for (p = 0; p <= mLastRow; ++p) {\n        cp = instr.p[p];\n\n        // Pattern rows\n        for (row = 0; row < patternLen; ++row) {\n          // Execute effect command.\n          var cmdNo = cp ? instr.c[cp - 1].f[row] : 0;\n          if (cmdNo) {\n            instr.i[cmdNo - 1] = instr.c[cp - 1].f[row + patternLen] || 0;\n\n            // Clear the note cache since the instrument has changed.\n            if (cmdNo < 17) {\n              noteCache = [];\n            }\n          }\n\n          // Put performance critical instrument properties in local variables\n          var oscLFO = mOscillators[instr.i[16]],\n            lfoAmt = instr.i[17] / 512,\n            lfoFreq = 2 ** (instr.i[18] - 9) / rowLen,\n            fxLFO = instr.i[19],\n            fxFilter = instr.i[20],\n            fxFreq = (instr.i[21] * 43.23529 * 3.141592) / 44100,\n            q = 1 - instr.i[22] / 255,\n            dist = instr.i[23] * 1e-5,\n            drive = instr.i[24] / 32,\n            panAmt = instr.i[25] / 512,\n            panFreq = (6.283184 * 2 ** (instr.i[26] - 9)) / rowLen,\n            dlyAmt = instr.i[27] / 255,\n            dly = (instr.i[28] * rowLen) & ~1; // Must be an even number\n\n          // Calculate start sample number for this row in the pattern\n          rowStartSample = (p * patternLen + row) * rowLen;\n\n          // Generate notes for this pattern row\n          for (col = 0; col < 4; ++col) {\n            n = cp ? instr.c[cp - 1].n[row + col * patternLen] : 0;\n            if (n) {\n              if (!noteCache[n]) {\n                noteCache[n] = createNote(instr, n, rowLen);\n              }\n\n              // Copy note from the note cache\n              var noteBuf = noteCache[n];\n              for (\n                j = 0, i = rowStartSample * 2;\n                j < noteBuf.length;\n                j++, i += 2\n              ) {\n                chnBuf[i] += noteBuf[j];\n              }\n            }\n          }\n\n          // Perform effects for this pattern row\n          for (j = 0; j < rowLen; j++) {\n            // Dry mono-sample\n            k = (rowStartSample + j) * 2;\n            rsample = chnBuf[k];\n\n            // We only do effects if we have some sound input\n            if (rsample || filterActive) {\n              // State variable filter\n              f = fxFreq;\n              if (fxLFO) {\n                f *= oscLFO(lfoFreq * k) * lfoAmt + 0.5;\n              }\n              f = 1.5 * sin(f);\n              low += f * band;\n              high = q * (rsample - band) - low;\n              band += f * high;\n              rsample = fxFilter == 3 ? band : fxFilter == 1 ? high : low;\n\n              // Distortion\n              if (dist) {\n                rsample *= dist;\n                rsample =\n                  rsample < 1\n                    ? rsample > -1\n                      ? osc_sin(rsample * 0.25)\n                      : -1\n                    : 1;\n                rsample /= dist;\n              }\n\n              // Drive\n              rsample *= drive;\n\n              // Is the filter active (i.e. still audiable)?\n              filterActive = rsample * rsample > 1e-5;\n\n              // Panning\n              t = sin(panFreq * k) * panAmt + 0.5;\n              lsample = rsample * (1 - t);\n              rsample *= t;\n            } else {\n              lsample = 0;\n            }\n\n            // Delay is always done, since it does not need sound input\n            if (k >= dly) {\n              // Left channel = left + right[-p] * t\n              lsample += chnBuf[k - dly + 1] * dlyAmt;\n\n              // Right channel = right + left[-p] * t\n              rsample += chnBuf[k - dly] * dlyAmt;\n            }\n\n            // Store in stereo channel buffer (needed for the delay effect)\n            chnBuf[k] = lsample | 0;\n            chnBuf[k + 1] = rsample | 0;\n\n            // ...and add to stereo mix buffer\n            mMixBuf[k] += lsample | 0;\n            mMixBuf[k + 1] += rsample | 0;\n          }\n        }\n      }\n\n      // Next iteration. Return progress (1.0 == done!).\n      mCurrentCol++;\n      return mCurrentCol / mSong.numChannels;\n    },\n\n    // Create a AudioBuffer from the generated audio data\n    createAudioBuffer(context: AudioContext): AudioBuffer {\n      var buffer = context.createBuffer(2, mNumWords / 2, 44100);\n      for (var i = 0; i < 2; i++) {\n        var data = buffer.getChannelData(i);\n        for (var j = i; j < mNumWords; j += 2) {\n          data[j >> 1] = mMixBuf[j] / 65536;\n        }\n      }\n      return buffer;\n    },\n  };\n\n  // // Create a WAVE formatted Uint8Array from the generated audio data\n  // this.createWave = function () {\n  //   // Create WAVE header\n  //   var headerLen = 44;\n  //   var l1 = headerLen + mNumWords * 2 - 8;\n  //   var l2 = l1 - 36;\n  //   var wave = new Uint8Array(headerLen + mNumWords * 2);\n  //   wave.set([\n  //     82,\n  //     73,\n  //     70,\n  //     70,\n  //     l1 & 255,\n  //     (l1 >> 8) & 255,\n  //     (l1 >> 16) & 255,\n  //     (l1 >> 24) & 255,\n  //     87,\n  //     65,\n  //     86,\n  //     69,\n  //     102,\n  //     109,\n  //     116,\n  //     32,\n  //     16,\n  //     0,\n  //     0,\n  //     0,\n  //     1,\n  //     0,\n  //     2,\n  //     0,\n  //     68,\n  //     172,\n  //     0,\n  //     0,\n  //     16,\n  //     177,\n  //     2,\n  //     0,\n  //     4,\n  //     0,\n  //     16,\n  //     0,\n  //     100,\n  //     97,\n  //     116,\n  //     97,\n  //     l2 & 255,\n  //     (l2 >> 8) & 255,\n  //     (l2 >> 16) & 255,\n  //     (l2 >> 24) & 255,\n  //   ]);\n\n  //   // Append actual wave data\n  //   for (var i = 0, idx = headerLen; i < mNumWords; ++i) {\n  //     // Note: We clamp here\n  //     var y = mMixBuf[i];\n  //     y = y < -32767 ? -32767 : y > 32767 ? 32767 : y;\n  //     wave[idx++] = y & 255;\n  //     wave[idx++] = (y >> 8) & 255;\n  //   }\n\n  //   // Return the WAVE formatted typed array\n  //   return wave;\n  // };\n\n  // // Get n samples of wave data at time t [s]. Wave data in range [-2,2].\n  // this.getData = function (t, n) {\n  //   var i = 2 * Math.floor(t * 44100);\n  //   var d = new Array(n);\n  //   for (var j = 0; j < 2 * n; j += 1) {\n  //     var k = i + j;\n  //     d[j] = t > 0 && k < mMixBuf.length ? mMixBuf[k] / 32768 : 0;\n  //   }\n  //   return d;\n  // };\n}\n","// This music has been exported by SoundBox. You can use it with\n// http://sb.bitsnbites.eu/player-small.js in your own product.\n\n// See http://sb.bitsnbites.eu/demo.html for an example of how to\n// use it in a demo.\n\n// Song data\nexport default {\n  songData: [\n    {\n      // Instrument 0\n      i: [\n        3, // OSC1_WAVEFORM\n        100, // OSC1_VOL\n        128, // OSC1_SEMI\n        116, // OSC1_XENV\n        2, // OSC2_WAVEFORM\n        0, // OSC2_VOL\n        128, // OSC2_SEMI\n        0, // OSC2_DETUNE\n        0, // OSC2_XENV\n        11, // NOISE_VOL\n        3, // ENV_ATTACK\n        25, // ENV_SUSTAIN\n        93, // ENV_RELEASE\n        5, // ENV_EXP_DECAY\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        2, // LFO_WAVEFORM\n        0, // LFO_AMT\n        0, // LFO_FREQ\n        1, // LFO_FX_FREQ\n        2, // FX_FILTER\n        74, // FX_FREQ\n        94, // FX_RESONANCE\n        3, // FX_DIST\n        124, // FX_DRIVE\n        0, // FX_PAN_AMT\n        0, // FX_PAN_FREQ\n        0, // FX_DELAY_AMT\n        0, // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [\n        ,\n        ,\n        ,\n        11,\n        1,\n        2,\n        1,\n        1,\n        1,\n        2,\n        ,\n        ,\n        1,\n        2,\n        ,\n        ,\n        ,\n        ,\n        1,\n        2,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n      ],\n      // Columns\n      c: [\n        { n: [111, , , , , , , , 111], f: [] },\n        { n: [111, , , , , , , , 111, , , , 115, , , 111], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [, , , , , , , , , , , , 127], f: [] },\n      ],\n    },\n    {\n      // Instrument 1\n      i: [\n        0, // OSC1_WAVEFORM\n        160, // OSC1_VOL\n        128, // OSC1_SEMI\n        64, // OSC1_XENV\n        0, // OSC2_WAVEFORM\n        160, // OSC2_VOL\n        128, // OSC2_SEMI\n        0, // OSC2_DETUNE\n        64, // OSC2_XENV\n        210, // NOISE_VOL\n        4, // ENV_ATTACK\n        7, // ENV_SUSTAIN\n        52, // ENV_RELEASE\n        85, // ENV_EXP_DECAY\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        60, // LFO_AMT\n        4, // LFO_FREQ\n        1, // LFO_FX_FREQ\n        2, // FX_FILTER\n        255, // FX_FREQ\n        0, // FX_RESONANCE\n        0, // FX_DIST\n        32, // FX_DRIVE\n        61, // FX_PAN_AMT\n        5, // FX_PAN_FREQ\n        32, // FX_DELAY_AMT\n        6, // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [\n        ,\n        ,\n        ,\n        ,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n      ],\n      // Columns\n      c: [{ n: [, , , , 129, , , , , , 110], f: [] }],\n    },\n    {\n      // Instrument 2\n      i: [\n        0, // OSC1_WAVEFORM\n        0, // OSC1_VOL\n        140, // OSC1_SEMI\n        0, // OSC1_XENV\n        0, // OSC2_WAVEFORM\n        0, // OSC2_VOL\n        140, // OSC2_SEMI\n        0, // OSC2_DETUNE\n        0, // OSC2_XENV\n        81, // NOISE_VOL\n        4, // ENV_ATTACK\n        10, // ENV_SUSTAIN\n        47, // ENV_RELEASE\n        55, // ENV_EXP_DECAY\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        187, // LFO_AMT\n        5, // LFO_FREQ\n        0, // LFO_FX_FREQ\n        1, // FX_FILTER\n        239, // FX_FREQ\n        135, // FX_RESONANCE\n        0, // FX_DIST\n        32, // FX_DRIVE\n        108, // FX_PAN_AMT\n        5, // FX_PAN_FREQ\n        16, // FX_DELAY_AMT\n        4, // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [\n        ,\n        ,\n        1,\n        1,\n        2,\n        1,\n        1,\n        2,\n        1,\n        1,\n        1,\n        2,\n        1,\n        2,\n        ,\n        ,\n        1,\n        1,\n        1,\n        2,\n        1,\n        1,\n        1,\n        2,\n        1,\n        1,\n        1,\n        1,\n        1,\n        2,\n        1,\n        2,\n      ],\n      // Columns\n      c: [\n        { n: [, , , , 141, , , 141, 157, , , , 127, , 141], f: [] },\n        { n: [, , 127, , 141, 123, , , , , 127, , 127, , 141, 125], f: [] },\n      ],\n    },\n    {\n      // Instrument 3\n      i: [\n        2, // OSC1_WAVEFORM\n        100, // OSC1_VOL\n        128, // OSC1_SEMI\n        0, // OSC1_XENV\n        3, // OSC2_WAVEFORM\n        201, // OSC2_VOL\n        128, // OSC2_SEMI\n        0, // OSC2_DETUNE\n        0, // OSC2_XENV\n        0, // NOISE_VOL\n        0, // ENV_ATTACK\n        6, // ENV_SUSTAIN\n        29, // ENV_RELEASE\n        0, // ENV_EXP_DECAY\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        195, // LFO_AMT\n        4, // LFO_FREQ\n        1, // LFO_FX_FREQ\n        3, // FX_FILTER\n        50, // FX_FREQ\n        184, // FX_RESONANCE\n        119, // FX_DIST\n        244, // FX_DRIVE\n        147, // FX_PAN_AMT\n        6, // FX_PAN_FREQ\n        84, // FX_DELAY_AMT\n        6, // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [2, 3, 2, 3, 2, 3, , , 2, 3, , , , , 2, 3, 2, 3, 2, 3],\n      // Columns\n      c: [\n        { n: [123], f: [] },\n        {\n          n: [\n            116,\n            118,\n            119,\n            ,\n            123,\n            ,\n            124,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            124,\n            123,\n            ,\n            116,\n          ],\n          f: [],\n        },\n        {\n          n: [\n            116,\n            118,\n            119,\n            ,\n            123,\n            ,\n            124,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            124,\n            119,\n            ,\n            115,\n          ],\n          f: [],\n        },\n      ],\n    },\n    {\n      // Instrument 4\n      i: [\n        2, // OSC1_WAVEFORM\n        57, // OSC1_VOL\n        128, // OSC1_SEMI\n        0, // OSC1_XENV\n        3, // OSC2_WAVEFORM\n        138, // OSC2_VOL\n        128, // OSC2_SEMI\n        0, // OSC2_DETUNE\n        0, // OSC2_XENV\n        0, // NOISE_VOL\n        5, // ENV_ATTACK\n        6, // ENV_SUSTAIN\n        58, // ENV_RELEASE\n        0, // ENV_EXP_DECAY\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        3, // LFO_WAVEFORM\n        184, // LFO_AMT\n        5, // LFO_FREQ\n        1, // LFO_FX_FREQ\n        2, // FX_FILTER\n        135, // FX_FREQ\n        0, // FX_RESONANCE\n        0, // FX_DIST\n        11, // FX_DRIVE\n        53, // FX_PAN_AMT\n        6, // FX_PAN_FREQ\n        79, // FX_DELAY_AMT\n        5, // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        27,\n        27,\n        27,\n        33,\n        27,\n        27,\n        27,\n        33,\n        ,\n        ,\n        15,\n        15,\n        15,\n        28,\n        15,\n        15,\n        15,\n        28,\n        15,\n        15,\n        15,\n        28,\n        15,\n        15,\n        15,\n        30,\n      ],\n      // Columns\n      c: [\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [152, , 140, , , 140, , , 140, , , , 140, 147, 146, 143], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        {\n          n: [, 152, , 140, 143, , , 145, , 152, , 147, 155, , 151, 148],\n          f: [8],\n        },\n        { n: [152, , 140, , , 140, , , 140, , , , 147, 146, 143, 140], f: [] },\n        { n: [], f: [] },\n        { n: [152, , 140, , , 140, , , 140], f: [] },\n        { n: [], f: [] },\n        { n: [], f: [] },\n        {\n          n: [, 152, , 140, 143, , , 145, , 152, , 152, 151, , 147],\n          f: [8, , , , , , , , , , , , 8, , 8, , , , , , , , , , , , , , 14],\n        },\n      ],\n    },\n    {\n      // Instrument 5\n      i: [\n        3, // OSC1_WAVEFORM\n        37, // OSC1_VOL\n        140, // OSC1_SEMI\n        0, // OSC1_XENV\n        1, // OSC2_WAVEFORM\n        88, // OSC2_VOL\n        128, // OSC2_SEMI\n        3, // OSC2_DETUNE\n        0, // OSC2_XENV\n        0, // NOISE_VOL\n        92, // ENV_ATTACK\n        0, // ENV_SUSTAIN\n        5, // ENV_RELEASE\n        91, // ENV_EXP_DECAY\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        3, // LFO_WAVEFORM\n        179, // LFO_AMT\n        5, // LFO_FREQ\n        1, // LFO_FX_FREQ\n        2, // FX_FILTER\n        124, // FX_FREQ\n        135, // FX_RESONANCE\n        11, // FX_DIST\n        8, // FX_DRIVE\n        150, // FX_PAN_AMT\n        3, // FX_PAN_FREQ\n        157, // FX_DELAY_AMT\n        6, // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [, , , , , , , , , , , , , , , , , , , , 1, 2, 3, 4, 5, 6, 7, 8, 1],\n      // Columns\n      c: [\n        { n: [128], f: [13, , , , , , , , , , , , , , , , 53] },\n        { n: [131], f: [] },\n        { n: [135], f: [] },\n        { n: [139, , , , , , , , 142], f: [] },\n        { n: [140], f: [] },\n        { n: [143], f: [] },\n        { n: [139], f: [] },\n        { n: [136, , , , , , , , 135, , , , 131], f: [] },\n      ],\n    },\n    {\n      // Instrument 6\n      i: [\n        3, // OSC1_WAVEFORM\n        113, // OSC1_VOL\n        117, // OSC1_SEMI\n        17, // OSC1_XENV\n        3, // OSC2_WAVEFORM\n        111, // OSC2_VOL\n        110, // OSC2_SEMI\n        0, // OSC2_DETUNE\n        32, // OSC2_XENV\n        0, // NOISE_VOL\n        0, // ENV_ATTACK\n        15, // ENV_SUSTAIN\n        72, // ENV_RELEASE\n        43, // ENV_EXP_DECAY\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        2, // LFO_WAVEFORM\n        127, // LFO_AMT\n        13, // LFO_FREQ\n        0, // LFO_FX_FREQ\n        2, // FX_FILTER\n        26, // FX_FREQ\n        45, // FX_RESONANCE\n        0, // FX_DIST\n        101, // FX_DRIVE\n        12, // FX_PAN_AMT\n        7, // FX_PAN_FREQ\n        0, // FX_DELAY_AMT\n        0, // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [, 1, 1, , 1, , 1],\n      // Columns\n      c: [\n        {\n          n: [\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            123,\n            123,\n            123,\n            123,\n            123,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            123,\n            123,\n            123,\n            123,\n            123,\n          ],\n          f: [10, , , , 10, , , , , , , , , , , , , , , , 116],\n        },\n      ],\n    },\n    {\n      // Instrument 7\n      i: [\n        2, // OSC1_WAVEFORM\n        83, // OSC1_VOL\n        128, // OSC1_SEMI\n        0, // OSC1_XENV\n        3, // OSC2_WAVEFORM\n        174, // OSC2_VOL\n        128, // OSC2_SEMI\n        9, // OSC2_DETUNE\n        93, // OSC2_XENV\n        0, // NOISE_VOL\n        7, // ENV_ATTACK\n        81, // ENV_SUSTAIN\n        55, // ENV_RELEASE\n        19, // ENV_EXP_DECAY\n        115, // ARP_CHORD\n        3, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        139, // LFO_AMT\n        4, // LFO_FREQ\n        1, // LFO_FX_FREQ\n        3, // FX_FILTER\n        22, // FX_FREQ\n        185, // FX_RESONANCE\n        51, // FX_DIST\n        119, // FX_DRIVE\n        107, // FX_PAN_AMT\n        10, // FX_PAN_FREQ\n        89, // FX_DELAY_AMT\n        3, // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [, , , , , , , , , , , 1],\n      // Columns\n      c: [{ n: [128], f: [] }],\n    },\n    {\n      // Instrument 8\n      i: [\n        2, // OSC1_WAVEFORM\n        100, // OSC1_VOL\n        128, // OSC1_SEMI\n        0, // OSC1_XENV\n        3, // OSC2_WAVEFORM\n        201, // OSC2_VOL\n        128, // OSC2_SEMI\n        0, // OSC2_DETUNE\n        0, // OSC2_XENV\n        0, // NOISE_VOL\n        5, // ENV_ATTACK\n        6, // ENV_SUSTAIN\n        58, // ENV_RELEASE\n        0, // ENV_EXP_DECAY\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        195, // LFO_AMT\n        6, // LFO_FREQ\n        1, // LFO_FX_FREQ\n        2, // FX_FILTER\n        135, // FX_FREQ\n        0, // FX_RESONANCE\n        0, // FX_DIST\n        32, // FX_DRIVE\n        147, // FX_PAN_AMT\n        6, // FX_PAN_FREQ\n        121, // FX_DELAY_AMT\n        6, // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [],\n      // Columns\n      c: [],\n    },\n    {\n      // Instrument 9\n      i: [\n        1, // OSC1_WAVEFORM\n        36, // OSC1_VOL\n        128, // OSC1_SEMI\n        1, // OSC1_XENV\n        1, // OSC2_WAVEFORM\n        36, // OSC2_VOL\n        128, // OSC2_SEMI\n        2, // OSC2_DETUNE\n        1, // OSC2_XENV\n        77, // NOISE_VOL\n        7, // ENV_ATTACK\n        5, // ENV_SUSTAIN\n        52, // ENV_RELEASE\n        0, // ENV_EXP_DECAY\n        112, // ARP_CHORD\n        4, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        104, // LFO_AMT\n        3, // LFO_FREQ\n        0, // LFO_FX_FREQ\n        2, // FX_FILTER\n        141, // FX_FREQ\n        110, // FX_RESONANCE\n        4, // FX_DIST\n        37, // FX_DRIVE\n        172, // FX_PAN_AMT\n        3, // FX_PAN_FREQ\n        55, // FX_DELAY_AMT\n        2, // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [, , , , , , , , 1],\n      // Columns\n      c: [\n        {\n          n: [128, , , 128, , , , 119, , , 116],\n          f: [10, , , , , , , 10, , , , , , , , , , , , , , , , 77],\n        },\n      ],\n    },\n    {\n      // Instrument 10\n      i: [\n        0, // OSC1_WAVEFORM\n        45, // OSC1_VOL\n        152, // OSC1_SEMI\n        0, // OSC1_XENV\n        0, // OSC2_WAVEFORM\n        76, // OSC2_VOL\n        152, // OSC2_SEMI\n        12, // OSC2_DETUNE\n        0, // OSC2_XENV\n        130, // NOISE_VOL\n        0, // ENV_ATTACK\n        0, // ENV_SUSTAIN\n        60, // ENV_RELEASE\n        0, // ENV_EXP_DECAY\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        0, // LFO_AMT\n        0, // LFO_FREQ\n        0, // LFO_FX_FREQ\n        2, // FX_FILTER\n        15, // FX_FREQ\n        0, // FX_RESONANCE\n        1, // FX_DIST\n        28, // FX_DRIVE\n        13, // FX_PAN_AMT\n        3, // FX_PAN_FREQ\n        45, // FX_DELAY_AMT\n        1, // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [, , , , , 1, , 2],\n      // Columns\n      c: [\n        {\n          n: [\n            128,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            131,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            135,\n          ],\n          f: [],\n        },\n        {\n          n: [\n            116,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            119,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            123,\n          ],\n          f: [],\n        },\n      ],\n    },\n    {\n      // Instrument 11\n      i: [\n        2, // OSC1_WAVEFORM\n        43, // OSC1_VOL\n        128, // OSC1_SEMI\n        0, // OSC1_XENV\n        3, // OSC2_WAVEFORM\n        65, // OSC2_VOL\n        128, // OSC2_SEMI\n        0, // OSC2_DETUNE\n        0, // OSC2_XENV\n        0, // NOISE_VOL\n        5, // ENV_ATTACK\n        44, // ENV_SUSTAIN\n        72, // ENV_RELEASE\n        48, // ENV_EXP_DECAY\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        195, // LFO_AMT\n        6, // LFO_FREQ\n        0, // LFO_FX_FREQ\n        3, // FX_FILTER\n        55, // FX_FREQ\n        170, // FX_RESONANCE\n        18, // FX_DIST\n        68, // FX_DRIVE\n        147, // FX_PAN_AMT\n        6, // FX_PAN_FREQ\n        31, // FX_DELAY_AMT\n        2, // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [, , , 1],\n      // Columns\n      c: [\n        {\n          n: [\n            128,\n            128,\n            128,\n            128,\n            128,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            135,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            ,\n            140,\n          ],\n          f: [8, 8, 8, 8, 8, , , , , , , , , , , , , 18, 83, 145],\n        },\n      ],\n    },\n    {\n      // Instrument 12\n      i: [\n        0, // OSC1_WAVEFORM\n        0, // OSC1_VOL\n        128, // OSC1_SEMI\n        0, // OSC1_XENV\n        0, // OSC2_WAVEFORM\n        0, // OSC2_VOL\n        128, // OSC2_SEMI\n        0, // OSC2_DETUNE\n        0, // OSC2_XENV\n        125, // NOISE_VOL\n        0, // ENV_ATTACK\n        1, // ENV_SUSTAIN\n        59, // ENV_RELEASE\n        0, // ENV_EXP_DECAY\n        0, // ARP_CHORD\n        0, // ARP_SPEED\n        0, // LFO_WAVEFORM\n        0, // LFO_AMT\n        0, // LFO_FREQ\n        0, // LFO_FX_FREQ\n        1, // FX_FILTER\n        193, // FX_FREQ\n        171, // FX_RESONANCE\n        0, // FX_DIST\n        29, // FX_DRIVE\n        39, // FX_PAN_AMT\n        3, // FX_PAN_FREQ\n        131, // FX_DELAY_AMT\n        3, // FX_DELAY_TIME\n      ],\n      // Patterns\n      p: [, , , 1],\n      // Columns\n      c: [{ n: [, , , , 128], f: [] }],\n    },\n  ],\n  rowLen: 6615, // In sample lengths\n  patternLen: 16, // Rows per pattern\n  endPattern: 31, // End pattern\n  numChannels: 13, // Number of channels\n};\n","type TInput = {\n  // using numbers so that I can multiply easily without casts\n  left: number;\n  right: number;\n  thrust: number;\n  skill1: number;\n  skill2: number;\n  skill3: number;\n};\n\nconst input: TInput = {\n  left: 0,\n  right: 0,\n  thrust: 0,\n  skill1: 0,\n  skill2: 0,\n  skill3: 0,\n};\n\ntype TInputProp = keyof TInput;\nconst keymap: Record<string, TInputProp> = {\n  ArrowLeft: \"left\",\n  ArrowRight: \"right\",\n  ArrowUp: \"thrust\",\n  KeyQ: \"skill1\",\n  KeyW: \"skill2\",\n  KeyE: \"skill3\",\n};\n\nwindow.addEventListener(\"keydown\", ({ code }) => {\n  input[keymap[code]] = 1;\n});\nwindow.addEventListener(\"keyup\", ({ code }) => {\n  input[keymap[code]] = 0;\n});\n\n// window.addEventListener(\"touchstart\", (e) => {\n//   e.preventDefault();\n//   input.skill1 = 1;\n// });\n// window.addEventListener(\"touchmove\", (e) => {\n//   e.preventDefault();\n//   input.skill1 = 0;\n\n//   for (let i = 0; i < e.touches.length; ++i) {\n//     const t = e.touches[i];\n//     const lq = window.innerWidth / 4,\n//       rq = window.innerWidth - lq,\n//       h = 1 - t.clientY / window.innerHeight;\n\n//     if (t.clientX < lq) {\n//       // left\n//       input.left = 1 - h;\n//       input.right = 0;\n//       input.thrust = h;\n//     }\n//     if (t.clientX > rq) {\n//       input.right = 1 - h;\n//       input.left = 0;\n//       input.thrust = h;\n//     }\n//   }\n// });\n// window.addEventListener(\"touchend\", (e) => {\n//   input.left = input.right = input.thrust = input.skill1 = 0;\n// });\n\nexport default input;\n","// particle system?\n\nimport type { Vec2, Vec3 } from \"regl\";\nimport { cos, r11, sin } from \"./math\";\nimport regl, { vert, frag } from \"./regl\";\nexport type TParticleEffect = {\n  // How particles should be emitted and updated\n  pos: Vec2;\n  vec: Vec2;\n  variance: number;\n  angularVariance: number;\n  rate: number | \"instant\";\n  alive: boolean;\n  emit: () => void;\n  update: (dt: number) => void;\n  render: () => void;\n};\n\ntype TParticleSettings = {\n  len: number;\n  thickness: number;\n  life: number;\n  color: [number, number, number];\n  // How each particle should behave ONCE it's emitted\n};\n\nconst particles: TParticleEffect[] = [];\n\n/* how it works?\n- as a user\n- I create a particle effect\n- I give the effect some properties (base position, speed?)\n- I can move the effect around\n- The effect emits particles until it dies, maybe it emits all by once, maybe over time, maybe it never dies\n- effects can be owned by objects\n- effects can be set on and off (?)\n- The system cleans up dead effects over time\n\nExamples:\n- Explosion: emit 20 particles in random direction, then nothing\n- Thruster: emit 1 particle every .02s in a random direction\n\n\nThere are separate:\n- emitter settings\n- particle settings\n\nparticle settings = uniform values for shader? width, thickness... but also things like speed and rotation\n\nparticles should be rendered as lines to keep the theme going, we can roll far with that (and reuse the shader)\n\n*/\n\ntype Props = {\n  aliveParticles: number;\n  translation: Vec2;\n  rotation: number;\n  thickness: number;\n  scale: number;\n  color: Vec3;\n};\n\ntype TParticleState = {\n  life: number;\n  pos: Vec3;\n  vec: Vec3;\n  angle: number;\n  angular: number;\n  cos: number;\n  sin: number;\n};\n\nfunction makeEffect(\n  particleCount: number,\n  settings: TParticleSettings\n): TParticleEffect {\n  // unlike models, geometry for particles need to be dynamic since we're going to draw whole system in one go ...\n\n  // Init state\n  const particles: TParticleState[] = Array(particleCount)\n    .fill(0)\n    .map(() => ({\n      // TODO can be 2d\n      life: 0,\n      pos: [0, 0, 0],\n      vec: [0, 0, 0],\n      angle: 0,\n      cos: 1,\n      sin: 0,\n      angular: 0,\n    }));\n  const vertexCount = particleCount * 4; // one quad (two triangles) per particle\n  const vertexSizeInBytes = 3 * 4; // 3 floats 4 byte each\n\n  // Allocate buffers\n  const buffers = {\n    position: regl.buffer({\n      type: \"float\",\n      length: vertexCount * vertexSizeInBytes,\n      usage: \"stream\",\n    }),\n    normal: regl.buffer({\n      type: \"float\",\n      length: vertexCount * vertexSizeInBytes,\n      usage: \"stream\",\n    }),\n    side: regl.buffer({\n      type: \"float\",\n      data: particles.flatMap(() => [-1, 1, -1, 1]),\n    }),\n    life: regl.buffer({\n      type: \"float\",\n      length: vertexCount * 4,\n    }),\n    elements: regl.elements(\n      particles.flatMap((_, n) => [\n        4 * n,\n        4 * n + 1,\n        4 * n + 2,\n        4 * n + 2,\n        4 * n + 1,\n        4 * n + 3,\n      ])\n    ),\n  };\n\n  const drawcall = regl<{}, {}, Props>({\n    vert,\n    frag,\n    primitive: \"triangles\",\n    attributes: {\n      Position: buffers.position,\n      Normal: buffers.normal,\n      Side: buffers.side,\n      Life: buffers.life,\n    },\n    elements: buffers.elements,\n    count: (context, props) => props.aliveParticles * 6,\n    uniforms: {\n      Rotation: () => 0,\n      RotationY: () => 0,\n      RotationZ: () => 0,\n      Translation: (context, props) => props.translation || [0, 0],\n      Thickness: (context, props) => settings.thickness,\n      Scale: () => 1,\n      Color: () => settings.color,\n      LifeMax: () => settings.life,\n    },\n    depth: {\n      enable: false,\n    },\n  });\n\n  let nextIndex = 0;\n  let mana = 0;\n\n  return {\n    alive: true,\n    pos: [0, 0],\n    vec: [0, 0],\n    variance: 2,\n    angularVariance: 5,\n\n    rate: 0,\n\n    emit() {\n      const newParticle: TParticleState = {\n        life: settings.life,\n        pos: [this.pos[0], this.pos[1], 0],\n        vec: [\n          this.vec[0] + this.variance * r11(),\n          this.vec[1] + this.variance * r11(),\n          0,\n        ],\n\n        angle: 0, // tbd\n        cos: 1,\n        sin: 0,\n        angular: this.angularVariance * r11(),\n      };\n      newParticle.angle = Math.atan2(newParticle.vec[1], newParticle.vec[0]);\n      const index = nextIndex++;\n      nextIndex %= particleCount;\n      particles[index] = newParticle;\n    },\n\n    update(dt: number) {\n      particles.forEach((p) => {\n        p.life -= dt;\n        p.angle += p.angular * dt;\n        p.pos[0] += p.vec[0] * dt;\n        p.pos[1] += p.vec[1] * dt;\n        p.pos[2] += p.vec[2] * dt;\n        p.cos = cos(p.angle);\n        p.sin = sin(p.angle);\n      });\n\n      if (this.rate === \"instant\") {\n        this.rate = \"expired\";\n        for (let i = 0; i < particleCount; ++i) {\n          this.emit();\n        }\n      } else if (this.rate > 0) {\n        mana += dt;\n        while (mana >= this.rate) {\n          mana -= this.rate;\n          this.emit();\n        }\n      }\n\n      if (\n        this.alive &&\n        this.rate === \"expired\" &&\n        !particles.some((x) => x.life > 0)\n      ) {\n        this.alive = false;\n      }\n    },\n\n    render() {\n      const { len = 0.005 } = settings;\n      // const {len} = this.\n      // const len = 0.06; // square particle\n      const alive = particles.filter((a) => a.life > 0);\n\n      buffers.position.subdata(\n        alive\n          .flatMap(({ pos, cos, sin }) => {\n            const pos1 = [\n              pos[0] / 16 - len * cos,\n              pos[1] / 16 - len * sin,\n              pos[2],\n            ];\n            const pos2 = [\n              pos[0] / 16 + len * cos,\n              pos[1] / 16 + len * sin,\n              pos[2],\n            ];\n            return [pos1, pos1, pos2, pos2];\n          })\n          .flat()\n      );\n      buffers.normal.subdata(\n        alive\n          .flatMap(({ cos, sin }) => {\n            return [\n              [cos, sin, 0],\n              [cos, sin, 0],\n              [cos, sin, 0],\n              [cos, sin, 0],\n            ];\n          })\n          .flat()\n      );\n      buffers.life.subdata(\n        alive.flatMap((p) => [p.life, p.life, p.life, p.life])\n      );\n\n      drawcall({\n        aliveParticles: alive.length,\n      });\n    },\n  };\n}\n\nexport function makeExhaust(): TParticleEffect {\n  const count = 15;\n  const effect = makeEffect(count, {\n    len: 0.01,\n    thickness: 0.01,\n    life: 0.7,\n    color: [0.5, 0.5, 0.8],\n  });\n\n  return {\n    ...effect,\n    rate: 1.2,\n  };\n}\n\nexport function makeExplosion(pos: Vec2): TParticleEffect[] {\n  const count = 20;\n  return [\n    // Comic lines\n    {\n      ...makeEffect(3, {\n        len: 0.1,\n        thickness: 0.002,\n        life: 0.3,\n        color: [1, 1, 1],\n      }),\n      pos,\n      rate: \"instant\",\n      variance: 0.001,\n      angularVariance: 0,\n    },\n    // Chaff\n    {\n      ...makeEffect(60, {\n        len: 0.005,\n        thickness: 0.005,\n        life: 1.2,\n        color: [0.2, 0.2, 0.2],\n      }),\n      pos,\n      rate: \"instant\",\n      variance: 3,\n    },\n    // Fire\n    {\n      ...makeEffect(20, {\n        len: 0.005,\n        thickness: 0.003,\n        life: 0.5,\n        color: [0.7, 0.4, 0.2],\n      }),\n      pos,\n      rate: \"instant\",\n      variance: 5,\n    },\n    {\n      ...makeEffect(20, {\n        len: 0.005,\n        thickness: 0.003,\n        life: 0.5,\n        color: [0.7, 0.7, 0.2],\n      }),\n      pos,\n      rate: \"instant\",\n      variance: 5,\n    },\n    // Sparks\n    {\n      ...makeEffect(6, {\n        len: 0.07,\n        thickness: 0.003,\n        life: 0.15,\n        color: [0.7, 0.7, 0],\n      }),\n      pos,\n      rate: \"instant\",\n      variance: 20,\n      angularVariance: 0,\n    },\n    // Maybe also a circular shockwave or ..?\n  ];\n}\n\nexport { particles };\n","import { max } from \"./math\";\nimport { makeMeshDrawCall, preprocessModel, Props, TModel } from \"./models\";\nimport { gl } from \"./regl\";\nconst font: Record<string, number[][]> = {\n  A: [\n    [-3, 0, 0, 9, 3, 0],\n    [-1, 5, 1, 5],\n  ],\n  B: [[-2, 0, -2, 9, 1, 9, 3, 7, 1, 5, 3, 3, 0, 0, 0, 0, -3]],\n  C: [[2, 9, -1, 9, -2, 7, -2, 2, 0, 0, 2, 0]],\n  D: [[-2, 9, 0, 9, 2, 7, 2, 3, -1, 0, -2, 0, -2, 9]],\n  E: [\n    [2, 8, 2, 9, -2, 9, -2, 0, 2, 0, 2, 1],\n    [-2, 5, 1, 5],\n  ],\n  F: [\n    [2, 8, 2, 9, -2, 9, -2, 0],\n    [-2, 5, 1, 5],\n  ],\n  G: [[2, 9, -1, 9, -2, 7, -2, 2, 0, 0, 2, 0, 3, 4, 1, 4]],\n  H: [\n    [-3, 9, -2, 9, -2, 0, -3, 0],\n    [3, 9, 2, 9, 2, 0, 3, 0],\n    [-2, 5, 2, 5],\n  ],\n  I: [[0, 9.5, 0, -0.5]],\n  J: [[1, 9, 1, 1, 0, 0, -1, 0, -2, 1, -2, 2]],\n  K: [\n    [-2, 9, -2, 0],\n    [-2, 5, 2, 9],\n    [-2, 5, 2, 0],\n  ],\n  L: [[-2, 9, -2, 0, 1, 0, 1, 1]],\n  M: [[-2, 0, -2, 9, 0, 3, 2, 9, 2, 0]],\n  N: [[-2, 0, -2, 9, 2, 0, 2, 9]],\n  O: [[-2, 2, -2, 7, -1, 9, 1, 9, 2, 7, 2, 2, 1, 0, -1, 0, -2, 2]],\n  P: [[-2, 0, -2, 9, 1, 9, 2, 8, 2, 6, 0, 5, -2, 5]],\n  Q: [\n    [-2, 2, -2, 7, -1, 9, 1, 9, 2, 7, 2, 2, 1, 0, -1, 0, -2, 2],\n    [0, 2, 3, 0],\n  ],\n  R: [[-2, 0, -2, 9, 1, 9, 2, 8, 2, 6, 0, 5, -2, 5, 2, 0]],\n  S: [[2, 8, 1, 9, -1, 9, -2, 7, 2, 3, 2, 2, 1, 0, -1, 0, -2, 2]],\n  T: [\n    [0, 0, 0, 9],\n    [-2, 8, -2, 9, 2, 9, 2, 8],\n  ],\n  U: [[-2, 9, -2, 1, -1, 0, 1, 0, 2, 1, 2, 9]],\n  V: [[-3, 9, -2, 9, 0, 0, 2, 9, 3, 9]],\n  W: [[-3, 9, -2, 0, 0, 9, 2, 0, 3, 9]],\n  X: [\n    [-2, 9, 2, 0],\n    [2, 9, -2, 0],\n  ],\n  Y: [\n    [-2, 9, 0, 5, 2, 9],\n    [0, 5, 0, 0],\n  ],\n  Z: [[-2, 8, -2, 9, 2, 9, -2, 0, 2, 0, 2, 1]],\n  0: [\n    [-2, 2, -2, 7, -1, 9, 1, 9, 2, 7, 2, 2, 1, 0, -1, 0, -2, 2],\n    [1, 8, -1, 1],\n  ],\n  1: [\n    [-2, 5, 0, 9, 0, 0],\n    [-2, 0, 2, 0],\n  ],\n  2: [[-2, 7, 0, 9, 2, 7, -2, 0, 2, 0]],\n  3: [[-2, 7, 0, 9, 2, 7, 0, 5, 2, 2, 0, 0, -2, 2]],\n  4: [\n    [1, 9, -3, 3, 2, 3],\n    [0, 4, 0, 0],\n  ],\n  5: [[2, 9, -2, 9, -2, 6, 1, 6, 2, 3, 0, 0, -2, 2]],\n  6: [[0, 9, -2, 7, -2, 2, 0, 0, 2, 2, 2, 5, -2, 5]],\n  7: [\n    [-2, 9, 2, 9, -1, 0],\n    [-2, 5, 2, 5],\n  ],\n  8: [[0, 9, 2, 7, -2, 3, 0, 0, 2, 3, -2, 7, 0, 9]],\n  9: [[2, 6, 0, 4, -2, 6, 0, 9, 2, 6, 2, 2, -1, 0]],\n  \"/\": [[2, 9, -2, 0]],\n  \".\": [[0, 0, 1, 0]],\n};\n\nfunction makeTextModel(text: string): TModel {\n  const verts: number[][] = [],\n    elements: number[][] = [];\n  let caret = 0;\n  let dy = 0;\n  for (const letter of text.toUpperCase()) {\n    const dx = caret;\n    caret += 5.5;\n    if (letter === \"\\n\") {\n      caret = 0;\n      dy -= 11;\n    }\n    const glyph = font[letter];\n    if (!glyph) continue;\n    glyph.forEach((stroke) => {\n      for (let i = 0; i < stroke.length; i += 2) {\n        // add vertex\n        verts.push([stroke[i] + dx, stroke[i + 1] + dy, 0]);\n        // if second or further vertex, add element pair\n        if (i) {\n          elements.push([verts.length - 2, verts.length - 1]);\n        }\n      }\n    });\n  }\n  // Centering\n  const offset = max(...verts.map((x) => x[0]));\n  for (let a of verts) {\n    a[0] -= offset / 2;\n  }\n  return { verts, elements };\n}\n\nexport function makeTextDrawcall(text: string) {\n  return makeMeshDrawCall(preprocessModel(makeTextModel(text)));\n}\n\nexport function makeOneOffText(text: string) {\n  const m = preprocessModel(makeTextModel(text));\n  return (props: Props) => {\n    makeMeshDrawCall(m)(props);\n    [m.Elements.buffer, m.Normal.buf, m.Position.buf, m.Side.buf].map((x) =>\n      gl.deleteBuffer(x)\n    );\n  };\n}\n","// Hacks - remove later\n\nimport { makeExplosion, particles } from \"./particles\";\nimport { boom, newAsteroid, setLevel, state, titleScreen } from \"./state\";\n\nwindow.addEventListener(\"keypress\", (e) => {\n  if (e.key === \"a\") {\n    newAsteroid();\n  }\n  if (e.key === \"A\") {\n    state.asteroids = [];\n  }\n  if (e.key === \"P\") {\n    particles.push(...makeExplosion([-3, 4]));\n  }\n  if (e.key === \"T\") {\n    titleScreen();\n  }\n  if (e.code === \"Digit1\") {\n    state.signs = [];\n    setLevel(0);\n  }\n  if (e.code === \"Digit2\") {\n    state.signs = [];\n    setLevel(1);\n  }\n  if (e.code === \"Digit3\") {\n    state.signs = [];\n    setLevel(2);\n  }\n  if (e.code === \"Digit4\") {\n    state.signs = [];\n    setLevel(3);\n  }\n  if (e.code === \"Digit5\") {\n    state.signs = [];\n    setLevel(4);\n  }\n  if (e.code === \"Digit6\") {\n    state.signs = [];\n    setLevel(5);\n  }\n  if (e.key === \"L\") {\n    state.powerups.push({\n      pos: [0, 0],\n      vec: [0.1, 0.1],\n    });\n  }\n});\n\nif (state.asteroids.length === 0) {\n  newAsteroid();\n}\n"],"names":[],"version":3,"file":"index.8e9bd240.js.map","sourceRoot":"/__parcel_source_root/"}